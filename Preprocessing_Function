{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Requirement already satisfied: pandas in /opt/anaconda3/lib/python3.11/site-packages (2.2.1)\n",
      "Requirement already satisfied: numpy<2,>=1.23.2 in /opt/anaconda3/lib/python3.11/site-packages (from pandas) (1.26.4)\n",
      "Requirement already satisfied: python-dateutil>=2.8.2 in /opt/anaconda3/lib/python3.11/site-packages (from pandas) (2.8.2)\n",
      "Requirement already satisfied: pytz>=2020.1 in /opt/anaconda3/lib/python3.11/site-packages (from pandas) (2023.3.post1)\n",
      "Requirement already satisfied: tzdata>=2022.7 in /opt/anaconda3/lib/python3.11/site-packages (from pandas) (2023.3)\n",
      "Requirement already satisfied: six>=1.5 in /opt/anaconda3/lib/python3.11/site-packages (from python-dateutil>=2.8.2->pandas) (1.16.0)\n",
      "Note: you may need to restart the kernel to use updated packages.\n",
      "Requirement already satisfied: numpy in /opt/anaconda3/lib/python3.11/site-packages (1.26.4)\n",
      "Note: you may need to restart the kernel to use updated packages.\n",
      "Requirement already satisfied: requests in /opt/anaconda3/lib/python3.11/site-packages (2.31.0)\n",
      "Requirement already satisfied: charset-normalizer<4,>=2 in /opt/anaconda3/lib/python3.11/site-packages (from requests) (2.0.4)\n",
      "Requirement already satisfied: idna<4,>=2.5 in /opt/anaconda3/lib/python3.11/site-packages (from requests) (3.4)\n",
      "Requirement already satisfied: urllib3<3,>=1.21.1 in /opt/anaconda3/lib/python3.11/site-packages (from requests) (2.0.7)\n",
      "Requirement already satisfied: certifi>=2017.4.17 in /opt/anaconda3/lib/python3.11/site-packages (from requests) (2024.7.4)\n",
      "Note: you may need to restart the kernel to use updated packages.\n",
      "Requirement already satisfied: flatten_json in /opt/anaconda3/lib/python3.11/site-packages (0.1.14)\n",
      "Requirement already satisfied: six in /opt/anaconda3/lib/python3.11/site-packages (from flatten_json) (1.16.0)\n",
      "Note: you may need to restart the kernel to use updated packages.\n"
     ]
    }
   ],
   "source": [
    "%pip install pandas\n",
    "%pip install numpy\n",
    "%pip install requests\n",
    "%pip install flatten_json\n",
    "from flatten_json import flatten\n",
    "import pandas as pd\n",
    "import requests\n",
    "import sqlite3\n",
    "import numpy as np\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {},
   "outputs": [],
   "source": [
    "conn = sqlite3.connect('example.db')\n",
    "cursor = conn.cursor()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {},
   "outputs": [],
   "source": [
    "def get_match_data(match_id):\n",
    "    url = f\"https://api.pubg.com/shards/steam/matches/{match_id}\"   \n",
    "    header ={\n",
    "    \"Authorization\": \"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJqdGkiOiI3YWQ5NDU5MC1kYTEzLTAxM2QtYmUxYi00NjQ0ZDA0YjAzMzEiLCJpc3MiOiJnYW1lbG9ja2VyIiwiaWF0IjoxNzQwOTc1MDc3LCJwdWIiOiJibHVlaG9sZSIsInRpdGxlIjoicHViZyIsImFwcCI6InNra2FpIn0.-bMr4GuOhMftJDv_wXViPSReCtYdbo3GBdtkVd8iTeE\",\n",
    "    \"Accept\": \"application/vnd.api+json\"    \n",
    "    }\n",
    "    res = requests.get(url,headers=header)\n",
    "    return res.json()\n",
    "\n",
    "def get_telemetry_url(match_data):\n",
    "    for item in match_data.get(\"included\",[]):\n",
    "        if item[\"type\"] == \"asset\":\n",
    "            return item[\"attributes\"][\"URL\"]\n",
    "    return None\n",
    "\n",
    "def get_telemetry_data(telemetry_url):\n",
    "    response = requests.get(telemetry_url)\n",
    "    return response.json()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "['6c2ad25a-86b1-4681-8248-b42304794343',\n",
       " 'aa935907-14fc-4e27-8056-eb6ff4f9341a',\n",
       " '6e2806bc-e696-4885-9e76-5f55341c9cff',\n",
       " 'dec7984a-27f1-4ff3-a4d5-60aca7e136f8',\n",
       " '0228fbe1-7fdd-4e7c-b204-37b17cc00d36',\n",
       " 'e8e71b9f-24d0-490c-8b0e-20234e3bacf8',\n",
       " 'a4ede67e-3b5f-4ae5-964a-4f396eddd154',\n",
       " 'a7aab547-830d-47a6-9674-31268a902055',\n",
       " 'ab406c30-2b9e-443e-904d-0b54dd40b7af',\n",
       " '9db45506-0a77-4b09-b422-d3eb3a5077ae',\n",
       " '6c05f402-f85b-4767-bb8f-b3a4f41bdd58',\n",
       " '66cbe25c-38a5-40fe-9e6c-544bb77f1287',\n",
       " 'aaa3e0b1-cd44-4901-b142-bfc26bed4c7c',\n",
       " '74115a88-7fe4-417b-925a-c324d1be271d',\n",
       " 'ff9d29aa-1291-4f0d-8416-f87164c84f0c',\n",
       " '89739bc2-ccc7-446f-95d1-82014f34e642',\n",
       " 'c8025cc7-0cbf-46d7-805c-9fda02c4b3a5',\n",
       " 'bdb11dc6-bbc6-40b5-bfd6-01c0cc99c235',\n",
       " 'cdbab214-f218-40cd-a820-f362704ccaf2',\n",
       " 'f9e23b1b-ac2a-4c0d-8bdf-9ed9ee6f7c4c',\n",
       " 'f32b392d-1983-40d5-a69d-2942430f7943',\n",
       " '9fcc4800-6c45-47fb-a456-ae5c94eee53e',\n",
       " 'abaebdeb-0d71-4a94-a642-82f77a5e0de8',\n",
       " 'cbbd6215-e72a-4955-ac58-52728195e627',\n",
       " 'b7cd985e-c482-4173-8cab-1f45b851dbf1',\n",
       " '1f83141b-1953-491a-84f1-d655fd832740',\n",
       " '4c17b613-dc62-4c42-8f03-25f99b2a02af',\n",
       " '5951d4a3-1258-48b0-8b6e-b03c0e668abd',\n",
       " '21e8d3bb-bf96-43f0-a865-dbec5870b7d6',\n",
       " 'ba51609a-efea-4e4e-949d-3b4e87955c4d',\n",
       " '807567d7-b21e-48cf-83fb-84f20af68276',\n",
       " 'ddd54f09-a12d-4210-bb69-232e46c75600',\n",
       " '58186211-1b4d-49c2-a2b4-7fe0b2f46118',\n",
       " '9f730d7f-516b-4145-90eb-1822767b6b22',\n",
       " '4b026a66-f7e6-4be2-a56f-d48bec2f4c5d',\n",
       " 'cd0a0085-2c86-4508-ba5c-9dc956c1c1b1',\n",
       " 'a0c17e8c-b773-4db2-b364-16b8bc3e1082',\n",
       " '7d6ed40c-9225-4b47-a0f0-bafeec0d7ec0',\n",
       " '2e0bc58e-195a-4521-8962-b528d99120a0',\n",
       " 'ca83edea-d3cc-4f3b-b879-c70cb77532ac',\n",
       " '08cee751-3446-4456-bfb4-246e0c63ef3a',\n",
       " 'ad8d5e5e-b6ec-43c8-b7d9-94f334303f87',\n",
       " 'd62e1b99-d63a-4696-8af4-d093db59c314',\n",
       " '272c9ef9-ccfd-4a22-883c-f92d09e29cda',\n",
       " '157d7217-a651-4740-a069-868a750a67b7',\n",
       " '6cf73a73-81b0-4e84-a29b-95344dbd209b',\n",
       " '824e77b0-6fa5-4ee8-bbea-32dd6b2bceb9',\n",
       " 'bed9542b-0540-41ed-9a4d-01ad7769ee57',\n",
       " '06541df8-172b-4dff-9ddc-07f3cd8dac02',\n",
       " '6c7dbe4c-ea02-4d2e-8d1d-020582c0a90c',\n",
       " '7eb5de14-a6e8-49f2-8826-cd74b3ae3141',\n",
       " '41949fa8-0657-4ce4-8e18-abc4695f1d6e',\n",
       " 'f7b706cc-a1c4-4c9a-bff3-6533292bd716',\n",
       " '93b49f39-b9dc-43d4-9816-e8358813cbe2',\n",
       " '80cb7d56-c413-4703-b037-f5b718bb2c35',\n",
       " '371ec868-ccf6-42b7-be04-d37b21645a43',\n",
       " 'd5bd6f19-9b21-4092-b03f-1627d0cb5e2e',\n",
       " '18d83cb8-40ce-443f-b283-e47efbb75d93',\n",
       " '7fed6831-58b8-4577-9010-33c97cf97bad',\n",
       " '0a39c96f-b784-4bfc-9357-bdbe1cf0c349',\n",
       " 'd4006852-d6db-4b91-9d0e-4f5659188a59',\n",
       " '83fa5aa7-a14c-49de-ad1e-904aac7befdc',\n",
       " '73b92611-daea-43e5-a5b7-039f53ee8c69',\n",
       " '1fb639d1-145e-4aa8-88f6-c2b66288b0e6',\n",
       " '5031f9af-3e9e-4497-8636-241b0ae4ba4b',\n",
       " '760bbf43-a582-4c04-b152-67d13f8125af',\n",
       " '6f745eff-ec11-46ce-96aa-7a2e4b3080b1',\n",
       " '98ab03b5-9751-4150-bf92-91cc3be5ebb0',\n",
       " 'b90c7b74-75f9-4a24-bce7-1ccdf12a5141',\n",
       " '2419aad1-cc1d-45d3-9f30-8a379e45e5c2',\n",
       " '1e62abcc-e2b1-4116-ac6c-ce28dd247b06',\n",
       " '3e6dd4f9-2a7d-4436-8376-afaaf4c1c6d2',\n",
       " '47c2513b-9b76-4507-8d76-3b4b44af8f5b',\n",
       " '4377223d-be55-4ce3-86c5-f1d895e8850c',\n",
       " '695552a6-ec7d-4aa2-a6d7-2b46a840ff6b',\n",
       " '13577914-9c20-4899-a093-e7807854f715',\n",
       " '3f323786-e88a-444f-808a-b47ded20a708',\n",
       " '46f21073-484d-411e-9dfd-333a85443e12',\n",
       " 'f37de7bf-9853-4d59-a67f-ea5f3e6e55e6',\n",
       " '2ec4852e-5847-4912-b085-d988c03e695d',\n",
       " 'ec875007-0357-4fc9-96ec-f08d0b7fb045',\n",
       " 'afa13fd9-b78e-4e8f-8bf2-e40a185d0197',\n",
       " '75d2c368-e4e7-42a9-94b5-662072091f78',\n",
       " '87104af5-3c32-43a1-beb8-5eca20f4faee',\n",
       " 'e00484ab-d9d8-4c4d-aeb5-b3762a76abda',\n",
       " '9f9d39a6-60d8-43bf-981b-242d4f5a4337',\n",
       " '1f91496a-4fb9-4063-b1d2-514806c7ec3e',\n",
       " '7d8ad477-73e3-40e7-a1b8-567a64139332',\n",
       " 'c16757b3-0d39-4705-9abc-03b610dc8521',\n",
       " '12257c8b-e5ad-4d49-8621-4f90dc6a8a69',\n",
       " 'aace245d-838e-4308-87fd-29c2a33f70ec',\n",
       " '24e60aaf-0a9a-4cf9-94d6-62819b43ad72',\n",
       " 'dda8fb12-9188-45a5-ac20-9d4c26db806d',\n",
       " '90f4126e-2e6f-4ee2-8908-48fd3cd0b529',\n",
       " '0408dc7f-c644-437b-a231-97d083fc1a89',\n",
       " '8ff77371-397e-4846-b5e2-525b3ab70c53',\n",
       " 'fd3b12c4-1004-4f20-8cae-b4345924501d',\n",
       " 'd818b179-205c-4438-8a3c-8e4c6b0aed31',\n",
       " 'b1a47f22-7be3-4266-b749-21e04c17ddea',\n",
       " 'b6f6d821-a696-4785-9fd4-c2a7b11d0af6',\n",
       " 'e526cad6-5d93-451f-b457-57f4e0b46147',\n",
       " '3ec74a07-6b3c-4d2a-b544-812b3c700809',\n",
       " '4303bd64-927a-4976-bfff-5edd86701d6f',\n",
       " '02f4dcc3-771e-4f9c-962a-8febd7c07d18',\n",
       " 'a1070346-d6bd-48ca-80c1-7ccefe6e6336',\n",
       " 'f6e84558-95be-464d-8c8e-42132de065f7',\n",
       " '5497153a-4801-4790-b852-7c94d1ff70f9',\n",
       " '26aa23d6-6ea0-49b0-ba05-b6d4c5fded10',\n",
       " '89ad13ab-bbfc-4848-ad3d-5d65e84f3514',\n",
       " 'c24211c3-3fdf-41a9-aad9-aeefedc814c6',\n",
       " '621fc51e-8937-4840-bd69-0eb2179bd607',\n",
       " '3da6c1b5-dc99-4342-b12d-d322b3a982e4',\n",
       " '5056f4dc-74d9-4ece-ac2d-cc4349690f13',\n",
       " '09299e8a-4c70-4b1b-8c17-8bbc102e744c',\n",
       " '9ca046be-8333-4c66-a35e-f9594db98589',\n",
       " 'b7858c5e-7d39-415a-b169-ad436ff3f5ab',\n",
       " '2f6ed799-0e73-4ce6-970c-e7108efd2006',\n",
       " 'b9d1346b-a35f-46ad-8cfc-3c705b4c3d2e',\n",
       " 'aa0aaae6-e863-4848-b2f2-e9f73576ee42',\n",
       " 'b8b1225d-96af-4d10-b038-4b8f13eb7293',\n",
       " '6bc33566-081a-492b-8bb7-a6dc0cce3824',\n",
       " 'd0ed1a92-39bb-41a2-89d0-e81184d4ccd5',\n",
       " '81609738-8169-4df2-b319-a04fb94f81a6',\n",
       " '43bc8e3a-3cc4-4afd-bb30-9d34a5cb2e11',\n",
       " '6e540852-8be9-487e-a84d-ed45d6424dce',\n",
       " '213d41b9-c8af-4455-b433-2851df106e1c',\n",
       " '18b3ae98-aa66-4df9-9cad-027374adcbbf',\n",
       " '6f75d97a-1a59-4d7e-b275-157ec6acaccd',\n",
       " '0d7cbbc1-bda4-4b7c-bacd-c8851ccff38c',\n",
       " '27dd0bfa-4613-4dbb-9958-f9c3dfb7805c',\n",
       " 'ca1c90fc-f28c-4ade-9505-8c83d78b69d4',\n",
       " 'b9271ee4-55ce-45b8-9152-7ebd4834d75e',\n",
       " 'daf5884a-4fbc-4722-b113-4b9c4285d548',\n",
       " 'f75620a0-2f21-42f7-a746-a378e2508ccf',\n",
       " '5768963b-6909-4010-9928-e95942362561',\n",
       " '5a96460b-a78a-4055-a142-6ca0bd21ddfe',\n",
       " 'f45bf333-f7dd-4545-9b69-8fbb31a2fb57',\n",
       " '493b7402-7a1a-41e8-8d7e-c561901df672',\n",
       " '9bcaabd5-2522-49e3-b12b-3db987636b7e',\n",
       " 'dcbc2f6c-3779-48ec-a218-02afcd83cf71',\n",
       " 'af189003-deea-4802-911c-0f2369f2a430',\n",
       " '0691c36d-5483-4330-a198-c5f177fe6b6a',\n",
       " 'ff8fef8d-57c1-48cc-8070-1dcc03a4690b',\n",
       " '286e76bc-0ed8-4ee2-8a34-6b3cdbb80cc5',\n",
       " 'd21539f4-258c-4a5a-b687-6254425954c3',\n",
       " 'e0f53e65-1484-4769-b1d4-0846495c3758',\n",
       " '40121209-5b70-4511-a60c-421a21c51d89',\n",
       " '09e6e55d-5f66-48b6-9279-e6065653b0a6',\n",
       " '617806e0-588f-49e3-9fe8-4c5353b7b4bb',\n",
       " 'c4ee0739-c902-4dea-9939-e0839e7b426f',\n",
       " 'ac9ade1f-0dcc-41b5-9b31-23050dfb92af',\n",
       " 'e6c6d922-bb13-4916-bb32-ecfb8729e326',\n",
       " 'e2bd08a4-0b13-47bc-9aac-adb9de143b61',\n",
       " '744b3e26-8155-4522-8b9a-8a4f1236c090',\n",
       " '569810c9-4a20-4dd1-907d-55fc8ff6ab7e',\n",
       " '63c70252-ed6c-47bd-a14d-faf508d20f87',\n",
       " '5d65abcf-a0ac-4166-987e-248b47ae5f18',\n",
       " '7da99bf5-2d30-414c-b58f-9fa125ca73d5',\n",
       " 'ca49fcee-9df5-4d45-a867-136f08ad34b1',\n",
       " 'd7c2aee6-fbd0-42d7-8f90-be8b4e8763c4',\n",
       " '10de2519-2e49-45b7-9132-f8f02e8ff423',\n",
       " '12086db9-8531-449f-aa62-7e2fe1d7418b',\n",
       " 'fcb59951-7e00-45c5-9528-0b56a746314e',\n",
       " '6b362c72-f239-47f1-9132-a2efecd66472',\n",
       " 'ad99a2bd-fc01-4ad4-9024-3d7aa4dc7ebd',\n",
       " 'c5e00986-a6a9-4832-9875-609e654baed2',\n",
       " '93802727-6d21-4c3c-a873-c497b77c93bc',\n",
       " 'c0c5e1ad-c499-43e6-b33c-d0e522ff4f19',\n",
       " '4f29e444-5ee8-4588-b6ab-68890da82b89',\n",
       " '9e402903-e8a6-4495-b8c2-ddfa25487324',\n",
       " '189e41f7-2049-4f2c-a358-18beb84c1ad4',\n",
       " '395ae606-8f39-463d-b26f-a575b922a482',\n",
       " '3bbcc38b-1230-40d0-80d8-04eb6e987240',\n",
       " 'd74826e5-1585-4bb4-bee5-b52614832e8e',\n",
       " '4b582f0a-5f9c-478c-b5ff-c4348d5d03af',\n",
       " '786f519c-101b-4cfc-828b-2e3dac37deae',\n",
       " 'c5561b63-b6fd-4570-847b-ff1103c49da5',\n",
       " 'a253a66b-ab3a-46dd-b960-a11ac7ac4438',\n",
       " '59a92b92-a6c1-45b0-8735-0ee90d395a1d',\n",
       " '6654d576-e64f-45d0-b96e-cd22dc748fa5',\n",
       " '5bcaa2ca-e566-4cf7-996d-78d8a31f78ec',\n",
       " 'b18135e8-0a98-4b2c-9e4b-090c244c3fbc',\n",
       " 'e59c1c10-0233-4bca-b0c7-f623e5b17210',\n",
       " '2b7c6efb-1f7a-4b49-b4a7-0aa8f3ccb934',\n",
       " '7d71cbde-39d5-4b80-807f-7bb24eea1dbd',\n",
       " '7187e611-fefa-4655-83a9-c4b06d0672b1',\n",
       " '984e0ef0-34bd-4aa2-b293-0cc9e432817c',\n",
       " '749d12a4-1009-4cf8-90db-c2ad147342ec',\n",
       " 'a8a06546-8b77-498d-82fe-1f2d564d1ff7',\n",
       " '73ffaaab-42af-4c47-9d94-af5fd076327b',\n",
       " 'b27c66b0-0390-4e38-be41-3a8a198f6dbc',\n",
       " 'b27c2f84-3e23-4753-98d3-2247114224c6',\n",
       " 'b85f9d92-39e9-43fd-9a12-1c9e693df185',\n",
       " '4032a616-337c-4d77-bc75-21f31898487a',\n",
       " 'f5c2897d-587d-4852-b9ec-c52cfa173852',\n",
       " 'f3b6d693-b651-46fe-bf1b-9701dea5f583',\n",
       " 'eecfd3a5-3808-4e58-b7bc-141a2f4c2a14',\n",
       " '129f7b83-9ae3-48c2-a179-865000a38025',\n",
       " '71f8328e-5e98-4c12-bef0-2d81b88e608f',\n",
       " 'a588b185-388e-4af3-bc05-f1f01e7ce025',\n",
       " '033fe62f-d878-4651-8fca-af9b224dbaa6',\n",
       " '18de900d-8e43-4b6a-9fd1-d3a2b85af0ba',\n",
       " '16b08318-857b-4fce-b7c6-12317d758ce9',\n",
       " 'd57f0a89-1a31-48b1-b82c-f91773f6c388',\n",
       " '92904952-7d7a-4506-8fb9-6c556989d60f',\n",
       " 'bfcb8d0c-c2dd-4f70-a20e-ffa0b5dbfa85',\n",
       " '0b9a9e9e-c54a-4a3e-9672-2d37d414bbf6',\n",
       " 'bd18db5d-b18b-4f4d-a0ba-60c0d29067aa',\n",
       " 'c8af6390-4a96-40e2-961a-da89d6d10599',\n",
       " 'df066ab2-ebf0-46f7-b0ca-07e39e562db8',\n",
       " '5ac43fe0-a84a-48b2-b758-2220c881bb29',\n",
       " 'b9b3a5f5-2d33-4fbe-bfdb-671f5f218ff8',\n",
       " '16b2c961-03d2-4146-8fac-4a6760075a15',\n",
       " '948ca972-fbc7-4b79-a77b-6ef856d6f389',\n",
       " 'fc7a4f00-556d-425c-8938-9ac3dad72cd1',\n",
       " '9ad71a2c-5185-498f-982b-3137818e8f80',\n",
       " 'c7b76a0b-af9e-47a8-b675-088c2f15d543',\n",
       " 'f77ff28b-62b5-448f-a842-13c15fae180d',\n",
       " 'feae05c6-3133-46ea-8d33-679c3ad2b93a',\n",
       " 'a256f7a1-fa8d-429f-b30e-68823ce4f41e',\n",
       " 'a6bf4a5f-0223-4a53-9c7f-5fc09b491612',\n",
       " 'bdcf6337-b919-4503-9265-0da1f6be23ab',\n",
       " 'bc948e96-7db1-4ff0-a5f8-ed115e2f54fb',\n",
       " 'ae0382b4-0393-416c-abd7-4406e39ae15a',\n",
       " 'b28db7d8-016a-4c53-8b96-1496c61abcde',\n",
       " '87cc45b4-f628-4cdf-b5cf-605990b53127',\n",
       " '9e45a366-93f3-4a85-aab1-58bf2dfeccb1',\n",
       " '024622c7-be55-466d-8955-ea56bc193f05',\n",
       " '002c7d79-c98b-450a-a7bc-213fb6a6f4fa',\n",
       " 'dd05d439-3db3-485f-8ee9-7a4659dc0794',\n",
       " '5199ffc2-db66-47f4-9dc7-c6b554305339',\n",
       " 'a209f3dc-4451-4531-bf68-e96ae7ed13eb',\n",
       " '1b0c0a55-351d-4eaf-9265-19e43ab4b3ae',\n",
       " '17a7e13e-ba71-4068-b252-1a1fac402731',\n",
       " '3c1ed259-e529-47d4-96ee-b73ddf7d7f13',\n",
       " 'ee3132c5-da35-465f-9e41-a11804bacfb1',\n",
       " '9269b6ab-efa8-4eff-af32-22db7b1edd00',\n",
       " '43e145b2-e626-4479-abfb-8a236d35e8ba',\n",
       " '02987c19-1481-432d-950a-14fa27fab900',\n",
       " '0cb26e3b-d539-4766-9ac1-35fb4cf9d373',\n",
       " '2e2075e9-6cde-47ec-9670-741b377520c8',\n",
       " '4e72ee0d-f6a3-42bf-9e35-e86f406731b0',\n",
       " '76bc6788-dd50-4421-96b4-63a33f4b3740',\n",
       " 'fdcef923-c3a7-4072-a305-a39d9f38828e',\n",
       " 'ea39c55f-47a9-435c-8afd-cf6dbb51b30c',\n",
       " '0345ca41-7293-457c-9aff-42f20309fa75',\n",
       " 'fd699dd8-d48a-48fb-9b61-730db1b9bd59',\n",
       " 'cbd697f3-c867-4b08-b169-a9c14e7c5415',\n",
       " '4513b986-7a9a-4042-a257-3b9ad2f5a5e5',\n",
       " 'cf44e7d1-e489-4fb6-9035-b3be57c3dff0',\n",
       " 'dcd8af74-583a-4234-8c6d-dd0be4d439e3',\n",
       " 'a35706de-409c-4bb0-b74e-a9961ef0506a',\n",
       " '055354f8-bf83-4e25-9ebc-8844b03f7f0a',\n",
       " 'dd011476-49e8-469b-9035-a311ed086290',\n",
       " '036a5b0d-86e7-45aa-85ef-896380738dee',\n",
       " 'b535b166-cbbb-44f1-94c0-67e3a48f5778',\n",
       " '04062693-09a2-4067-a840-612c2d202a0d',\n",
       " '0c6f54ac-5056-44ac-b2fe-3d5c9445fc20',\n",
       " 'e517de75-a039-482b-8d84-fd792149226f',\n",
       " '3735748b-397e-47a3-80e2-572be15ecfde',\n",
       " 'e12300fd-8bf4-44c1-8c46-c019dbb1e605',\n",
       " 'fc24dd75-40a6-481a-8685-0291ea0e7376',\n",
       " '095633ae-7dfc-4de5-9188-27d9a01f59df',\n",
       " 'b77f1ff1-340c-4081-b663-494dab7d6380',\n",
       " '4b102cd0-8dc2-4717-9073-50843e836534',\n",
       " 'b792bd71-dd5b-4fae-8ead-0ec709b097a2',\n",
       " 'bbfa77c9-ed0c-4010-8978-b007da20a8f9',\n",
       " '2dfacf1f-5f21-49ea-9a5f-1be19e989901',\n",
       " '066bafc2-d3cb-4702-8a6a-11d642d7799c',\n",
       " 'b3efd022-2212-4459-9860-b60e3433a2fb',\n",
       " 'da6c2351-e5b9-446a-a4d9-3f3504f0a2ea',\n",
       " 'bddd7efe-64b9-4738-89a7-4e9388ae6638',\n",
       " 'e031cdeb-d5bb-42e7-b00d-16bb2f615538',\n",
       " '9e44bdc2-d40a-4ce7-bb3b-a1b5b91eff06',\n",
       " 'f69dda80-7808-44c4-b60c-1efd5fc7d69b',\n",
       " 'b7bd5a3a-62a7-45c9-938f-26ef665a9cf3',\n",
       " '63c451aa-8e4c-4f12-959d-0d4a75b19741',\n",
       " '1756b0b8-6ced-40ea-8174-9d8cbea07086',\n",
       " '51c23b5a-0a53-463b-811b-a9fe8163603a',\n",
       " 'ccc8f259-4273-4eba-b5a8-61d8214763d0',\n",
       " 'ebadaa8f-0685-43f0-b554-bc4466acc3e2',\n",
       " 'ac244805-e6f2-43e6-9bbf-3e9ef62c644e',\n",
       " 'e91d0a34-7190-4005-8146-2771aa6dbdaa',\n",
       " '68feba2c-2408-4c61-8c90-98d83aa1c755',\n",
       " 'a8610cf3-48d3-4eb8-8f5a-f0bd69321704',\n",
       " 'a24680e0-0cb4-4219-bf56-1e774f68ae09',\n",
       " 'c0677178-567b-4473-8b37-a6964653009d',\n",
       " 'db315e9f-7bde-41c7-a15f-8f7a54305e34',\n",
       " '2adcced2-b8e4-4798-a7c4-dc38391032cf',\n",
       " '0c28eedf-fefb-4b8c-ba20-010937200727',\n",
       " '967fba41-58c2-4475-91ee-8e23a5d2f68c',\n",
       " 'beeeef44-f030-4363-a827-e70df936c05e',\n",
       " 'ae9d87cc-9bfc-4bb9-843d-dd8e43e107a0',\n",
       " '50cd0d04-383d-428a-8e30-887a122b0b0f',\n",
       " '5304dd49-9473-4c56-a593-06f69a4d222d',\n",
       " '19793084-f59c-4c52-a276-d97b501b14ec',\n",
       " '2a97b762-fd4a-4597-8045-2d4a5be38a58',\n",
       " '99e9f76e-a589-4ec5-8003-285b4de0edee',\n",
       " '0fc2e839-34cd-4b7a-8a14-e2612a5d26a4',\n",
       " 'ed626bfc-7a49-4f02-9259-012072ab95da',\n",
       " '474baf92-f6ef-44a5-9459-1c11779596ff',\n",
       " '12a10af3-8a15-4468-9e38-84725247013c',\n",
       " 'b2b8603a-5940-4f59-82ae-5fa90fb96580',\n",
       " 'd091980b-bc2e-4485-9411-8be10a6b92f5',\n",
       " '097b415b-0b67-470d-ac11-5da480188c2c',\n",
       " '86c00850-7314-4236-a1f2-df8d54fa3d61',\n",
       " 'c07e85db-6ae2-4bf3-8b72-9d673e9075be',\n",
       " '676b162e-1886-455f-b5e2-44a49ec50222',\n",
       " 'bf51ecc6-6668-481b-a177-d26468d212ce',\n",
       " 'b8f8c3e2-bcd7-4eb2-891c-74f6dc22a0bc',\n",
       " '8a297924-c432-4a6e-97e5-dfe9b4709548',\n",
       " '90b2a544-d5ea-48bd-be34-f54300c46800',\n",
       " '21b11df1-8873-45b3-a78d-8fe61a586aca',\n",
       " '351f7a8f-ec03-4548-8f24-8b6a13553cf7',\n",
       " '402632d0-fea3-4954-b77e-674257a05e14',\n",
       " '21ea3919-3637-47eb-a80c-5b2717652d52',\n",
       " '104f9669-49aa-474a-88f6-3128b5baafa4',\n",
       " 'c2d0a134-c473-4010-ab2b-e6f0a034c805',\n",
       " 'f897deca-b632-4a15-adcb-605e374bb08f',\n",
       " '3df662b9-0556-4d40-97ab-06b663aac8a0',\n",
       " '9030baca-1fde-4d37-b765-ab9357af92a5',\n",
       " '3c5f320b-1d37-475e-9e23-1daf06be0a08',\n",
       " '4e0efd6b-94d0-436b-b52f-12ccf58eccf5',\n",
       " '961ee8d0-31a7-4d3e-9a8e-9ee15316bd2e',\n",
       " '1a20206f-d67c-44af-805c-dbd1b4a58956',\n",
       " 'c644636b-eedb-49d1-9218-8fb360ee5ee3',\n",
       " '773f9eec-bb6c-4f6d-bbb7-f6937e457857',\n",
       " 'faa61876-0d44-4d90-b279-6fd3ff2cd4ae',\n",
       " '87d3b115-739a-4c9a-8880-b8a4030f88ce',\n",
       " 'dc014752-8cc2-4689-9863-0ccd46a4ae95',\n",
       " '3abc5526-fd4a-4b0a-9cad-c527e58295ee',\n",
       " '85dc8d28-ad00-46eb-9e8d-4b214d5b8322',\n",
       " 'd2b8d18c-5084-41f6-a39d-e3fc61ea0d78',\n",
       " '5881f29f-f19c-4c87-bdf5-85f6e57a8b3c',\n",
       " 'dcbcc07e-51cc-439a-a4cb-54b295704353',\n",
       " '89499194-96f2-4056-a61d-cd269a59143c',\n",
       " '63119640-6815-48de-8319-e20505a9614b',\n",
       " 'd1c01f08-a710-4693-87c2-ecbeae18cc9b',\n",
       " '0e09ceda-8a32-403a-953a-c5e5bffa2b4f',\n",
       " '8e35bc65-0073-4abe-a0ff-985bccf669ad',\n",
       " 'd2ad8ba6-3901-4920-b2f5-7dcb585ba189',\n",
       " 'cbde85c9-019f-4247-92e0-2c37f2bd9da4',\n",
       " 'e2becedb-fa9e-4d08-9f41-36acbfd9fa6b',\n",
       " '0b3c9379-5dcb-492d-8ef2-09d18d67935c',\n",
       " '1bf5f066-82df-4226-b1b8-bd4ed64b3ee9',\n",
       " 'acdf71a9-39c1-4aeb-bac0-bf9f847109b4',\n",
       " 'b09e54ea-a4f3-4df5-b221-2822f1747a00',\n",
       " '367a496f-6ee4-4426-8ab3-83974af71fc2',\n",
       " '86573b98-de6e-49fd-ad09-8651911811d8',\n",
       " '92404f4f-dd10-4075-a36a-cd10ca8ae64b',\n",
       " 'c04b9d1c-307a-46e4-996a-d46a076592d2',\n",
       " 'd4a4d156-2e03-44c3-9b15-faf1d306399a',\n",
       " 'e4d9edac-7795-4957-9bbf-731af1f6a7c2',\n",
       " '013b5543-6ea0-494b-8f98-57340e0e6361',\n",
       " '0e4be777-5bf0-4077-aac6-b856bb9de039',\n",
       " 'fc917bac-4fb0-4985-80fe-1025fdbd6f08',\n",
       " '6227d31d-4c97-4d21-b7be-58977ec6f439',\n",
       " 'f93ccfbe-1a1b-4096-a903-83caf8049b8d',\n",
       " '0e5e78e2-65cc-415b-827d-c9955f09a5a9',\n",
       " 'd13bc377-d504-4a83-82da-22d072f8f8cb',\n",
       " '501e0270-eb38-4a90-b441-3f86d53a361e',\n",
       " 'b0fc7963-ba99-4ff5-88c3-93f73f61e63a',\n",
       " 'dc598059-91c6-453a-a31f-96f7a676b789',\n",
       " '8cd36ea9-a6c4-4674-ac8d-4611f66779f3',\n",
       " '31dda243-ec61-4b28-8a71-a07489cfb1d1',\n",
       " '85eb1784-3e99-46a2-93df-10489dea2b7d',\n",
       " '09f4e2bd-3f55-41bc-8a1c-bdea92db98bd',\n",
       " '662fb291-ff4a-4800-9eaa-e0a072ae27b1',\n",
       " 'fa460a90-c231-4dcd-bb4f-dca58e42f1e1',\n",
       " '3b037094-59e3-452b-827e-33ca427db6d4',\n",
       " '2d4723e4-b45c-425a-84e0-6b49dd40bfc8',\n",
       " '8de5932b-59b0-4b90-95e5-45f30c2a15e6',\n",
       " '94c6c083-f96e-44f5-bf5a-4dfa2592c272',\n",
       " '0638bd7a-945c-4a15-aa00-a6882005c9a8',\n",
       " 'cd525499-89ba-440f-bfaf-0c3da9659fd5',\n",
       " '28849717-d1cd-4f74-8a09-15282f58dfec',\n",
       " '7dc81166-9f4e-49f4-9db3-56e120af01e5',\n",
       " '05abf3c0-4147-4d2f-bb10-5f2f72bca9c9',\n",
       " 'e7d7243f-6bb8-4893-9975-2d5f04ba82c1',\n",
       " 'e822acec-c258-4bd6-b4eb-8e06da03219c',\n",
       " 'ea87f266-5dfa-42bb-83be-41ca969b0c31',\n",
       " '53715332-8a7d-4907-a8e5-f24d90cc7fd2',\n",
       " '85247167-08f0-4994-ad94-1e2b7b6c24af',\n",
       " '3299aa11-0ea0-4157-b538-c28ee4e5e5b7',\n",
       " 'c67a3ff9-b67f-4822-b236-dc7c465c001c',\n",
       " 'b13ef773-d405-4a4c-ba77-5346f055f767',\n",
       " '59f2ece8-8c53-478b-880f-639985785cf7',\n",
       " 'a36bc2d7-bf8a-4426-bcf6-cda99fee071b',\n",
       " 'cbd06cbb-85c0-457c-9683-941e591b7944',\n",
       " 'f82c64e6-f931-40a8-9585-6908c2e4cfcd',\n",
       " '3216cddd-29cb-4472-b9a7-2c70a36b98bd',\n",
       " '2ffcec0e-60ae-4349-8ab3-c0ddebe7f556',\n",
       " 'a45f2dce-dc3c-4a47-a20f-b593c887987c',\n",
       " 'f88c1553-5cbb-407e-aec3-5235570682a9',\n",
       " '9225a37d-84b9-4066-b1e0-693944a172bd',\n",
       " 'fa82fb77-90ac-43c3-93cc-b264d91e85c9',\n",
       " '9ab1f26f-c409-4708-814a-048e62a28e86',\n",
       " '500e1100-b71b-4150-949c-0466269316ee',\n",
       " '210769e9-ea7c-4ffa-a451-9909fe64cfaf',\n",
       " '686c291f-654b-4d47-a1be-9399372121a7',\n",
       " '79184a00-f31e-4231-8180-50175d30d6ed',\n",
       " '4217d5f3-c240-459c-94d7-462868b36035',\n",
       " 'ffcedc7f-aca4-45bc-9891-74517e31fc90',\n",
       " '9d5e5091-b945-421b-81b0-5538f3a21e80',\n",
       " '510cfc8e-2700-4ed5-8f48-2115edec5079',\n",
       " 'dadf18e4-5812-4185-97a4-a6c8c8fbe90b',\n",
       " 'ba9e8699-9e21-4948-9a8f-80cf81506345',\n",
       " '2bcbbd7b-7f51-4ecb-ac57-2f2405a1b1e8',\n",
       " 'df718554-6f62-4db8-883d-13f8bb7548dd',\n",
       " '35f2dc6b-88f3-4a35-9417-5d84024e7ef2',\n",
       " '2eeaf1c2-f6d6-4abe-b50d-e2305c260f2f',\n",
       " 'dfef4f8a-4d7d-41bb-8b8a-349f90e50245',\n",
       " '07fb4991-f179-4afa-9cfc-982b00e8745f',\n",
       " '3fe1d69d-9c59-4e15-9f83-7cc16f507a59',\n",
       " '1e779c44-a02b-473e-b5c5-6043787f7d2a',\n",
       " '63f35e23-2aba-417d-9138-6aef48019d3e',\n",
       " 'd4e21976-7249-41a8-b981-22242316baba',\n",
       " '62f56331-eb61-444a-9f51-2c4e8592d700',\n",
       " '07999682-5025-4ced-ac3d-f40a919c8a6c',\n",
       " '5271d307-073e-47c6-a874-218b4a1dd8b8',\n",
       " '96aef804-5242-442e-ab12-a3b6a4c181c1',\n",
       " 'ecb0e30f-b35c-4adf-b29f-107c3f31c0ea',\n",
       " 'cc6d14a1-658e-42e4-a8cf-088dd4bdabc2',\n",
       " '47f3408c-233c-4c03-8d16-2d3c1a881f1d',\n",
       " '3642dd3a-4253-41db-93e0-2058fb182b54',\n",
       " 'd0e1139f-9ad5-442c-b842-9a2492e167ab',\n",
       " '56cf2de5-9f1a-4a23-a0fc-9ac915a0c15d',\n",
       " '1a1d1e7a-02b3-4246-a946-90ecc4e04e36',\n",
       " 'e0f25d38-cacf-4417-b201-4b910e3c6f1b',\n",
       " 'fc59fa90-f933-46f7-ba82-49b1a007d764',\n",
       " 'faeadd6f-a82d-42f0-945e-4f7bb009b4a4',\n",
       " 'f074ee75-db63-4ce3-9cd5-218e07c57930',\n",
       " '370caf95-e42a-45f9-963c-45a81ed0f336',\n",
       " '596a8025-e18e-4785-bf5e-e5c010778714',\n",
       " 'df64dc0a-825d-4e58-8c32-a993537cb23a',\n",
       " '4799c143-7fc0-468e-9566-344657ed0b9c',\n",
       " 'f2a711e5-febb-4e16-8174-8dfed2b11a89',\n",
       " '6bbb7025-705f-4b2b-a1d9-52735529c167',\n",
       " '7fd7c5ad-bc26-420b-b667-98704c4261a2',\n",
       " '5e68496e-1e8c-4dc6-87c2-0c8ff9c2ab22',\n",
       " '63507910-cf32-4e54-bf2a-fd23989e3569',\n",
       " '37ea312c-2b53-4250-980d-a2cb3f568a12',\n",
       " '1b2b0695-05fd-4a77-a5aa-376ceac39157',\n",
       " 'eca08335-b31f-4e3c-9102-c97d81ca9a37',\n",
       " 'a58c6fab-7ba9-4e42-842d-f7fbf1fff94b',\n",
       " '275f544b-8775-4da8-96cf-3c4ad1f66215',\n",
       " '3cb8ab95-9c3b-4681-87ed-6ba639960fd6',\n",
       " '7249972e-6b31-48fd-b27e-30513cfa26e7',\n",
       " '26d92d32-41ab-48b5-9cef-e6ba6b55288c',\n",
       " 'd4376a12-cac8-489d-a763-4f41b63fdbf2',\n",
       " '9441807e-7e67-4f8c-b1cd-b51d31782c2b',\n",
       " '14d4b87d-6082-456b-b482-1923f9595fce',\n",
       " 'e8557af8-9756-4426-9c04-e956acc2764a',\n",
       " '50b27080-1624-4701-9403-dd27bb741f45',\n",
       " 'c9f22e43-1b18-4808-a7af-0a36259a22a7',\n",
       " 'd36ac5b5-c996-42a6-ae06-51ba50420341',\n",
       " '0a2295f1-715f-4854-ae7f-2033309b7ec1',\n",
       " 'b9b2a7f3-3b36-4089-b00a-21dbb11edcb3',\n",
       " '835b735b-bfbc-4213-b84d-7755c2425206',\n",
       " 'ccc0fe24-82f5-4f4b-a6f8-b404c23febb2',\n",
       " '439962d2-acdf-4e0b-acc4-79d64674ba35',\n",
       " 'a7801ccd-ef3b-4ab4-a54b-a7bbb8e20dda',\n",
       " 'e8c44074-1db3-43aa-815c-6c0ea9e253ce',\n",
       " '13a4b338-aee9-4cdf-9a07-3e1bfd6f6eab',\n",
       " '8f60d518-d9da-4050-9cec-5ab3021ce783',\n",
       " '17ef68a9-20fe-4f6e-969e-b0eb4a2b969d',\n",
       " '525cf7b2-6f2d-456c-b1b9-8062644fee5e',\n",
       " '073b33ec-095c-43c4-8c9c-382a9af98e1d',\n",
       " 'bbd8a9bd-a772-47cb-8a81-c703333a485e',\n",
       " 'b1c3dd51-c711-4ce9-a66c-4da3fe0868e4',\n",
       " '68aa41e7-e890-4e80-b480-499d75e09c76',\n",
       " '24f6f195-6b31-40a5-8ae6-6b563553c74d',\n",
       " 'd9fef382-413c-4e95-9d3d-337f931e0f23',\n",
       " 'b83dc6d3-8a13-49b9-9987-825725e6a545',\n",
       " '12151a2c-d9d0-4aba-b08e-859709f16d6e',\n",
       " '410c7b5a-5810-472a-854e-607833c6588d',\n",
       " '71cb9427-23df-4eae-a4bf-b1b542272ead',\n",
       " 'c3eb3190-1115-4134-b3df-864bf6d80d92',\n",
       " '5b1d76d5-1a21-44e4-8673-1cc274f8d379',\n",
       " 'db373a0a-d4ef-45f0-b866-061ad97fc7b9',\n",
       " 'f03c5c17-d51f-4b20-9ce5-edc7acb652d6',\n",
       " 'c1cdfec6-1535-4e81-b1e9-31b53b4b0581',\n",
       " '984892e3-5765-4708-9f71-f5de45820dde',\n",
       " 'e843670a-8067-493d-b581-8dc37d770845',\n",
       " '4e7e1cfc-e91d-4862-b441-642aab1a4b8d',\n",
       " '13b9b6d0-f25c-4e94-8971-0633ac50b0e1',\n",
       " '142e5c85-e6a1-4802-a9a3-3c4345fce667',\n",
       " '8a2a0c36-e2b9-4486-8a40-58763c940692',\n",
       " '54a93364-025b-40e4-8518-44aba470f91b',\n",
       " 'bd2c463b-c3ff-4724-b4e4-3c0f87def057',\n",
       " '8b31dd07-9353-4999-b1e0-648f74a5d401',\n",
       " '3e1114cc-5173-485c-8d21-1ba4e38a0772',\n",
       " 'f3d01daa-1f37-4bcd-a01d-77aef79ff906',\n",
       " 'e3b155d2-be5c-49fc-8b34-5ce11e8dc1eb',\n",
       " '24e79bb5-9ca6-4f09-90e1-07da861ccca3',\n",
       " 'ca069dd5-10b8-43d7-b24a-7874b911eacb',\n",
       " '8a803b4f-d524-404c-afa1-8a1f2dd90a03',\n",
       " '9add4986-22c2-47c6-96dd-2e816632275d',\n",
       " '327ea014-9f05-44bc-abe2-ae011a2c7a33',\n",
       " '7d36088e-b471-4ae1-b75a-50bb579a6c96',\n",
       " 'e4bd7ed7-5b61-4779-a0a2-d0311a57efb3',\n",
       " '25cf20d0-ee51-4d4f-8e9d-c58c2da19cc5',\n",
       " 'fb09e614-4491-459a-a583-80f94588034a',\n",
       " 'e6d93b74-5698-42d5-8f2e-d9189d891005',\n",
       " '96653d96-efa1-4e96-bd25-87392dc8c3cb',\n",
       " '49ba3c59-d0e2-43ff-b92f-06ba3b245c07',\n",
       " 'f18c36f5-ce21-400a-abeb-0dc8cb1e74f4',\n",
       " '584f312c-b661-4e08-9a8e-2259e9eb92b7',\n",
       " 'dae9e532-9ecf-4cf5-89d7-365b115dfaae',\n",
       " 'ec725a1a-7276-48c2-aea8-e76ba9c51183',\n",
       " '9a561501-e8ef-47aa-99e7-a6bd100891ac',\n",
       " '767d6cd4-d57c-429e-8508-093240c5adf7',\n",
       " '87d22988-1dac-4d67-99eb-4b67f0079c76',\n",
       " '96413dfb-e01c-4845-97e9-9b33512d0ab8',\n",
       " 'c3b4ce29-8cd9-4212-8f73-89477128000c',\n",
       " 'ffb50070-92a5-4477-ac61-e3682d053d73',\n",
       " '44d18e7f-8edd-4eee-90f6-8466a1ec9b58',\n",
       " 'e28617b1-5862-4df6-bd45-d40c8c82011d',\n",
       " 'ff9053fb-96ba-4d99-bd7f-69381e6fc3b8',\n",
       " '05344a12-0277-40f5-a7b1-4675d0fb6e6f',\n",
       " '93851ca7-821d-47c2-b3c5-e3d6c463d57f',\n",
       " '2c21bdbb-1a94-4073-8541-52297890fdd1',\n",
       " '0e017604-9772-4fd6-842d-b7a535084ffa',\n",
       " 'e119e1a4-9bc8-4255-83a8-1ee17d009fdf',\n",
       " '69b30de8-2015-468b-ad56-c1f773796f8d',\n",
       " '4ac99a1b-594f-4497-9ed5-d012e576c9dd',\n",
       " 'a9c7aae2-1067-4187-8d87-def63ee08f0f',\n",
       " 'b4855a61-264c-400d-9d7d-ac0357e2d716',\n",
       " '63c723d7-7d40-44e3-ba31-332c873fd9f4',\n",
       " 'df2e3b08-bd14-40c3-9986-7c76e3bf74a9',\n",
       " '0fcaaa2e-6e91-46fa-9c78-f4b93bcca8ad',\n",
       " 'cbc56400-13f9-44a5-a1f1-58c28b866ce9',\n",
       " '6f4cf263-5256-4d4f-9109-1ef6316a6498',\n",
       " 'ae64251b-6801-482f-8ae3-e1a3bfead1a6',\n",
       " 'bf4f3406-035c-4f02-a25d-1a03a3c01e93',\n",
       " 'd3a2f17f-4887-4e6f-8c58-a16b91874642',\n",
       " '2deaa93f-c7be-4a1e-9e54-49b77749a41d',\n",
       " '8ea8ce75-d088-44a1-8809-345ea8600295',\n",
       " 'e72ca8c3-b2a0-44aa-8294-0201cae35333',\n",
       " 'f69f4c6f-1be1-411e-9155-56d21cacac1c',\n",
       " '9d4952ef-6480-4eae-9715-fb87bc58ca42',\n",
       " '6abbbbc3-75ce-45b9-a08e-80da5fd65847',\n",
       " '23108ad3-ef0c-4de5-9b13-2a507ce02c3c',\n",
       " '5fa32643-f40d-4212-b107-a4bc23683ee0',\n",
       " 'e2da8843-719c-4d42-905d-76c90629e958',\n",
       " 'b2d88c2f-ebbd-4b1e-bca8-6dce0932bd3d',\n",
       " '13edd19a-cf83-46ac-972d-51084ab817cf',\n",
       " '342c8b5d-97ac-43ea-b18e-94be2d98aa87',\n",
       " '71ba7527-2493-46f0-857e-b8ea89bc7378',\n",
       " '106b760f-6bde-437b-bc5e-73f4d570c437',\n",
       " 'a908972d-1844-461d-85a4-12ea857625dd',\n",
       " '98169545-1d00-49b4-82ee-2c4838416de9',\n",
       " '1df0a39b-6591-4e19-a89e-e5eba8bdbcf7',\n",
       " '50b9cf14-1ff6-48da-bb3e-12c4531f2b33',\n",
       " '546b2e3f-9417-45f3-a7da-6769150e629e',\n",
       " 'e68c88e9-3086-4d97-8818-a2f48773a7ba',\n",
       " 'e6d4d632-6b80-45ec-a1af-142473e9dc8c',\n",
       " '00ed4824-6d71-407b-b16d-897ad2feb141',\n",
       " 'b0d89bb1-6655-440d-b916-bb9a4db521fc',\n",
       " 'd023ec7e-72fb-4251-b234-a26d89d98857',\n",
       " '6f8a5560-d1bc-4ee9-8cce-44560c1e7073',\n",
       " 'cb2c3941-45be-4e89-9e1e-66846b9dba67',\n",
       " 'feba2cbd-ad76-4e5e-8733-2eeefd38112b',\n",
       " '30e38862-37fe-4675-9d25-946534d51456',\n",
       " 'b7e16639-aa09-4b0a-8115-1f3aadd40334',\n",
       " '47d995a0-76c2-4857-8f1f-d51ba8e749f6',\n",
       " 'aea9c9d6-9891-4976-a2d4-f60b133bfb86',\n",
       " 'f48ecde3-9091-4527-94cd-5de800af070f',\n",
       " '383b0910-00c0-46dd-96b7-16250d8ae7ce',\n",
       " '01c3c248-7c1b-48c2-ab10-c27d035de590',\n",
       " '8db796f7-56de-4216-91e6-fd577ea07c95',\n",
       " '3a422d6a-ec53-489a-9be4-ed29ea972225',\n",
       " '69826b54-1673-4c5f-86b3-2bbd6525b525',\n",
       " '66025bcb-53f9-4b6e-9468-70f5b05aa35e',\n",
       " '9c2296ec-4b4a-4e8b-8fbb-2f5f8ff9dc7e',\n",
       " 'f229d689-6453-417c-be62-05500e7ae0e9',\n",
       " '06868ca2-16f6-40e4-9739-ee004562280c',\n",
       " '36c0383c-237c-4ec1-95cf-4c2daf1469e5',\n",
       " '8569e5da-95bd-40d3-860e-a45d2fbeb202',\n",
       " 'e3c256dc-df48-4cea-ab55-9a057a1c0dd8',\n",
       " '22eafb74-3740-490f-8252-f93f7555c99f',\n",
       " '567077c4-1f84-4115-a134-dcc08cf76d41',\n",
       " '0b8f8fd7-5a3b-462a-94ad-3cbb637ac028',\n",
       " '310cec98-4493-49b7-9da5-4e590851d7b5',\n",
       " '8baeb82b-3d8b-4f6f-ad05-1c7848cf33bf',\n",
       " '78b7cf60-0a1e-4a76-ad5d-15a9dea14fa3',\n",
       " '64175800-1942-4de8-8872-f46cb7d4ed3b',\n",
       " '681cd5d4-9635-49a1-83e3-5e6b4e4faaf3',\n",
       " '260569da-0166-49ad-9a4b-d74943a667e3',\n",
       " '3844ad59-a1ee-4bd8-ad7b-c180136f45de',\n",
       " 'c57195c9-c4d4-45e6-a340-49dceb73511e',\n",
       " 'f12030ad-45ba-4a49-ae03-13360b44400f',\n",
       " 'a4a2b19e-ba29-426b-a560-e2d7b459bf8d',\n",
       " 'a58ac403-39d0-4402-9a86-c92d381c4464',\n",
       " '32ab021c-b341-425a-a327-9ee075426eb3',\n",
       " 'c02791b2-276e-4d68-959b-c92ae7bfc2a4',\n",
       " '32f9168b-75f6-4004-8afe-5f86699c4f9a',\n",
       " 'a5224227-e420-4738-9e30-3c497f3c7c38',\n",
       " '6be3e48f-e76b-437f-bb84-1147903ed595',\n",
       " '484785b5-3158-4848-b9d0-6f61cee020ef',\n",
       " 'bd304a90-bd8a-4381-a237-99ec0a860155',\n",
       " '76338a67-3a2d-4c69-8db8-757c938d0bad',\n",
       " 'e2d384fb-774d-4305-bf3c-1c04ce601427',\n",
       " '306d9097-7302-426f-8ea4-38c1c6374e30',\n",
       " '4ce556f2-a5e8-4f34-ab0e-695eee76dab4',\n",
       " 'ecaa5802-ae78-42c1-89ea-c7c2290ba8af',\n",
       " 'f6a00eb7-687d-433e-a61f-973274b74d46',\n",
       " 'b8035f11-61a3-4850-93bd-ab3b5b1d88b7',\n",
       " 'c1e2ec12-2488-40d0-8386-e7fb3e76eec8',\n",
       " 'f5e668e2-d82e-4861-8ff3-c0a58659cb56',\n",
       " 'e37a07ab-7944-46a9-8588-670c03f5f1b7',\n",
       " '32c6a6e3-25de-4dad-b511-84898ea7f4e7',\n",
       " '4b29d0b5-da06-4b3c-9bc9-328c84410463',\n",
       " '78212a05-b0ff-452b-8959-30670d0bb7cc',\n",
       " '468b358a-1381-46ae-8a06-95d2c3932db6',\n",
       " '16cdd64c-f6ba-471f-8a52-47a607c248ab',\n",
       " '4bca3c7e-9d7f-4971-a508-27c5ad7f0925',\n",
       " 'b115930b-e472-4245-8180-25ade643021c',\n",
       " '05f70c52-0acc-4daf-9b3e-5929fedb6306',\n",
       " 'e671ba3b-11b6-4ac6-ad2c-65cbdd0dcca5',\n",
       " '2a6c1c89-ce1a-4e54-bf8b-a5de1d990e80',\n",
       " '240c6be8-55e1-4cbb-857d-f32c6a685246',\n",
       " '49a6d657-7168-4744-aa65-fb8bf5eb962b',\n",
       " '3db45d79-1b6d-454b-bcea-f5b29f010e65',\n",
       " 'c474342d-d244-4afe-b25d-ceb887e75a1a',\n",
       " '0086366f-ca35-4baa-b865-d679bae35a0f',\n",
       " '90fd7855-eaf6-407f-95fa-c6e959794df5',\n",
       " '30af9532-4366-4577-bce0-927f14d5b8a6',\n",
       " '7a4779fd-17c3-47ee-9442-6b4e4eb1b1a6',\n",
       " '426316dc-8163-408e-b9a9-17bb8c3113cb',\n",
       " '9fa4ec03-a6e2-4a64-bcfa-d55038aeed84',\n",
       " '61fa878b-162a-4fe6-a164-47cb94740200',\n",
       " '0cbe6520-b672-4f03-9d4e-8bfde66f00b2',\n",
       " '385d411a-7713-46d2-a0f7-66f045ec0cea',\n",
       " '1c5e66e6-7678-434a-bd20-7737adfcee87',\n",
       " 'e892271b-bfe3-42e4-83a6-3b2d800fbec2',\n",
       " 'fd25d899-719d-4d68-929e-e89c3c377257',\n",
       " '1988ea18-0eea-4163-85cc-2383682bdc70',\n",
       " '80af9eef-06fb-447a-a633-c6a9b35de9c1',\n",
       " 'e8044b0d-effb-45e4-8694-90a604028025',\n",
       " 'fb3edc55-6f8f-4940-828e-eb01d7840452',\n",
       " '04535ab7-23c2-43d1-9c95-0ddc1ec3293b',\n",
       " '3e5c4bbb-fcf8-4805-951a-6aa3d54c0afa',\n",
       " '6f2cb805-71a2-4ed3-a622-7005d19c3aa3',\n",
       " 'da430605-88e3-479e-9a65-9686190bef21',\n",
       " 'a5c8bc52-fcaa-438f-aa28-24803ab53fab',\n",
       " '177caca4-309f-480d-bb31-6338be2609a4',\n",
       " '7683d136-eb68-4d5e-8eb3-8050ff9195f2',\n",
       " '3755fd8f-1c58-4426-87de-5f910772e8bd',\n",
       " 'f0f1882c-5a49-41d2-b059-fbbfcb028d06',\n",
       " 'd0accdb7-536b-46a2-9993-a3bef21716bc',\n",
       " '55b73793-2d3b-4da0-bcd5-65040c64b638',\n",
       " '377f3960-5c7f-4f09-8440-2343f26e5f9b',\n",
       " '25c027d5-659a-436f-8dac-ceae2829b99d',\n",
       " '20bf8207-8a6f-422d-acbf-bcc1ebbabc2c',\n",
       " '5f549b4d-b3fd-49cd-ae19-b5ad17f1f024',\n",
       " '3b937310-d56f-456d-9fbf-d9a890b5a77d',\n",
       " '0fb81c0b-fa90-4588-89e9-2716cb284a04',\n",
       " '4fc4f6a5-4625-4fde-8fc0-9bbf0d42921b',\n",
       " 'f93a7e32-2f2c-4883-b99c-a521ab7fe696',\n",
       " 'e7fcad74-4314-4b75-baba-bf84bfe5adf0',\n",
       " '8bdd59d5-237b-425f-9f18-0cf876a018d0',\n",
       " '07f1e535-02e1-4658-aa71-da99b9afdefb',\n",
       " '8bb4dcfa-d335-493f-a716-e1414a042b51',\n",
       " '9cdca4e7-8ad6-451a-977c-00a9ae8e5fd5',\n",
       " 'a97992dd-b975-4eb0-80de-bb05a11d5cce',\n",
       " '6a8578db-514f-49a3-8ddb-45608c61ffdf',\n",
       " '5d22f21f-090c-46f9-bc51-d9b6f56ddb97',\n",
       " '7d4adaa0-23c0-4b82-a050-c5edbfc9d06d',\n",
       " '52a8c37a-0b10-46d1-9aef-a81ed3514776',\n",
       " 'b64e33c8-6b16-4321-87bd-f91449f1f097',\n",
       " '89e9b4c6-e770-43e3-b845-41df550d12b2',\n",
       " 'c0413ea0-0232-462e-a25c-0640a70db1bf',\n",
       " '9e724081-e2fa-46f8-b673-8836c9881247',\n",
       " '86be5758-8259-47ad-81af-9e7c81ef2071',\n",
       " '3e71a1ca-0d02-4d0f-be3d-a5e47ba6efcf',\n",
       " 'be75a720-f975-47aa-8fe9-4e97589dfdfe',\n",
       " '8f84ad28-3674-47cc-8785-74c3a5fed675',\n",
       " '4eafad2c-ac3a-4433-8be0-5d185f02eac2',\n",
       " '5a206b73-04b8-40d2-97ed-f73e372c0417',\n",
       " '1bc84564-ffb8-4bd1-b173-332e41eb8531',\n",
       " '80337e66-b357-48bf-a32f-5b130cde869f',\n",
       " 'a36e8bd0-20de-4a91-9a5b-39a6358bd71f',\n",
       " 'e8759151-1d45-408e-891e-573a21f68680',\n",
       " 'ab8f129c-73fc-4965-a583-2de7a0efbd2a',\n",
       " '2bb625ca-d32b-425f-8007-bc6861e4616d',\n",
       " 'a185fc10-7669-4e17-8f43-1974923d618f',\n",
       " 'e213a214-e80a-41a9-8134-8a9bc25d3e44',\n",
       " '62be9116-9c30-4867-b254-16b9dd24d996',\n",
       " '57e2b9f9-ac68-4c11-9d0d-5e1418652497',\n",
       " '8d3f3a22-040b-4689-9133-379d9104b617',\n",
       " '150bd203-a54e-4b9a-b18d-eb92f118ffe6',\n",
       " '10994c51-8901-4bc9-b7e6-714b5a3200cb',\n",
       " 'b9303640-d684-4262-a73b-a716e03029a6',\n",
       " '0e43bab9-a51e-4788-b5d2-72a82461a08c',\n",
       " '0ab5e76f-be49-43bd-bdb3-9e2054197998',\n",
       " 'adac3e88-c305-4b94-8a6f-4870bc37aba4',\n",
       " '444d1624-94ad-4451-b2be-9cf362813c8f',\n",
       " '204b0c41-8904-4e72-8775-4445eb7c50c1',\n",
       " '481dbcb4-c56b-4f3f-905e-8f8ce29e05b7',\n",
       " '6a1d72ec-02e0-4de0-b477-6e01a9cb01d0',\n",
       " '997436ea-eab7-4605-a50b-7b6c0f0f1bfb',\n",
       " '68542bc3-eb9c-4da3-b819-04a435f04c06',\n",
       " '38fa97c1-3664-424a-9ffe-86b4b770ba4b',\n",
       " '284164f2-a1a0-4456-a73f-ccac3a9f5683',\n",
       " '36319a66-49cf-4561-b6a5-5e1061a72bae',\n",
       " '6a7f885a-cc13-4ba7-b1ce-c33b0738113a',\n",
       " '8a8d07c6-a071-44e6-9afa-3095f4c810de',\n",
       " '78ebdd9e-7cd1-4fb5-9990-038d91d37cb6',\n",
       " 'b3c14c51-e7cc-4daa-8089-7a99b4df9ae8',\n",
       " 'ca693af9-d4a7-4608-bb15-748344b79549',\n",
       " '3670e62b-0ff1-461e-96f4-62c75987cd38',\n",
       " '83533c87-332c-49e5-88da-f88ad8461bfd',\n",
       " '1e3ff870-6ad0-4b85-8fac-37e51a8a5232',\n",
       " '61ba8266-f751-4d9d-9c27-ec3da39550bb',\n",
       " '660f6cdf-71cd-4b11-abb8-ef5e52c3ae79',\n",
       " 'b22a2967-e053-4629-a24f-1415ef4f5015',\n",
       " '1d10496f-94c2-4d18-9aac-90aba994466f',\n",
       " '2f5da1c2-7270-4225-ba26-4adfb851eb45',\n",
       " '427672cf-0d94-4a88-92fe-5c7b4b30f412',\n",
       " '1cbce53f-3056-400f-8181-47b408ce6bd7',\n",
       " '139ed61b-cec5-4fcc-b8fe-8d96e6d25075',\n",
       " '7685861d-98d0-4c58-b87f-3dabcb33f6c9',\n",
       " '7331c1bc-d7df-4531-ac81-fde9ae0f3222',\n",
       " '64e9a400-f06b-41bf-91ae-11ff72003cee',\n",
       " '936cc718-eef7-433e-acd7-57a6be8fefc3',\n",
       " '48a76a2f-18fc-4926-9a71-e451441e4905',\n",
       " '4f7677b9-9368-44a7-8fc0-a7299c5cc38a',\n",
       " 'bb4ebe5a-7891-43c9-8601-faee79eeaa59',\n",
       " '5f6d226d-b8cd-44bc-bf85-bd24853ec52b',\n",
       " 'c251ce9d-ddc3-48a2-afc0-28cfc21e2483',\n",
       " '1e29623e-1604-4b2f-a11e-6e0dec52917b',\n",
       " 'd49d3b13-fb5a-41e4-8ec0-c88f11baf8d3',\n",
       " 'addb0ed5-fd2d-48dc-9361-d5a056620ea3',\n",
       " 'c62128d9-33b6-4cf5-b18f-0eb54e71aab2',\n",
       " '469c3e55-be8a-4a7b-8b48-6985ea1e2854',\n",
       " 'c67d5a7b-58fe-41ae-92c4-62747cd0f5fd',\n",
       " '1c3f883f-4697-4a72-8adb-a2d207260568',\n",
       " 'c6c9aafa-49e5-45d2-9f9c-532cad83c7ad',\n",
       " '494625b3-c7b9-406d-9cf3-705f9077b4d6',\n",
       " '13e97f60-7ebf-43d6-a935-5f0268c4dabe',\n",
       " '47fabd00-f894-4477-8b5f-74077bb4782e',\n",
       " '6ac6f653-34b0-40f2-97e7-043618fd11d7',\n",
       " 'be09e5b4-440a-42d3-98aa-1653b16da458',\n",
       " '16757322-bd36-49df-baee-93f81297645f',\n",
       " '81357f83-620b-4b61-82a2-63294a76a08a',\n",
       " '7c959abe-3acd-4bbf-a2ea-b5e5d951152e',\n",
       " '3a71debc-5616-4aee-9dc6-3ab600af4b47',\n",
       " '83049c9e-098b-4ddd-af97-55f002c209de',\n",
       " '7d5662a2-d138-451d-8e3a-4e6e47d1160e',\n",
       " '1029c350-f758-40dd-8c02-75dd4cc0d64c',\n",
       " '13b364c8-7595-4a3b-b2ee-20853f74266a',\n",
       " 'b8d5b7ec-b83f-4721-b5a1-8a890810a84a',\n",
       " 'a75a2725-4896-4165-9ffb-b88a5ceca153',\n",
       " '8c147a3e-b7a7-4f21-a7b4-c0b0f0481d73',\n",
       " 'd30eb0fa-ae25-463d-959a-aea0e0c29fd8',\n",
       " '733ec23f-651f-4e87-981a-d50e84c907fd',\n",
       " 'adc6afb9-702f-4f4f-83de-989f2bb15319',\n",
       " '6ba075a9-73c8-4c24-8b91-70fd9cbe7d36',\n",
       " '35ed6069-566c-4f3d-8f93-47804b5601db',\n",
       " '7b280f10-4872-4eff-88cf-1c1fe2c518a7',\n",
       " 'cb725c3c-fdce-4a87-943b-22e2ddd69bed',\n",
       " 'd6aa3864-d190-4ac2-9ef5-7b48b51cb059',\n",
       " '83dbbd44-b5ae-41cd-baf4-1b89e1390689',\n",
       " '24bdf7fd-d0d5-4204-9abf-ee5b21128398',\n",
       " '971964b1-0806-466e-8fa3-f4d477d97355',\n",
       " 'cf317a72-02c9-4773-9d4d-e52dbeb7f620',\n",
       " 'b1bbab97-6c6d-4af4-bda6-0efb278f6608',\n",
       " '29be7ff3-c5ff-4d5b-9b4a-c00804801300',\n",
       " 'dafbf3f3-d1c5-44f2-81d8-5d3afda3fe9a',\n",
       " '43c03741-52a3-4937-bd23-c4b892b83dbf',\n",
       " '31bb4cc2-3823-4176-a824-0cf5dbb1e0f3',\n",
       " 'a0e3a8e0-6db8-45ce-9cc2-eae02614466d',\n",
       " '741d3f7a-9bcc-442e-af09-56ad894c0046',\n",
       " '2222633b-e309-4f5c-a609-20a80e0ec39a',\n",
       " 'c00a0f42-8b68-4e0c-b4ed-45cdf7ae66b4',\n",
       " 'f309cbc0-3492-497d-94d9-b9ef8c082761',\n",
       " '751c5f23-8248-4b14-aec2-9ce74b4218df',\n",
       " 'b8d3547f-e095-4bc6-8cf9-80cb076aef9c',\n",
       " '9b1d9aed-7223-4c51-abe6-b0e54724f232',\n",
       " '136b70b5-9ae2-4bca-ad48-a4a5215103a3',\n",
       " '12736cc4-6119-45e9-b8ad-f6ff7b7d1762',\n",
       " '9dfcc6c6-c044-4787-9950-6e3eec89f87f',\n",
       " '7e12bab8-118e-4cdc-8e0b-c94fe8b7e060',\n",
       " '793424ee-a18a-4d35-8828-f164dc1b8e0c',\n",
       " '9d4c0da8-e9ff-43a4-8f69-9b375101a9b2',\n",
       " '938df033-2d0d-4b03-bd73-2f81cc87cad4',\n",
       " '460144fd-c5cc-43c9-ae63-98b4f5e3a80f',\n",
       " '22f27bc9-406d-4c80-83c0-86bf159bb166',\n",
       " '32d5e653-f476-4c21-8e5f-9ca9361ac852',\n",
       " 'bb710e56-6e08-459e-9503-7863e96116bd',\n",
       " '6318b82e-6f3b-4d38-853e-4f66664e832e',\n",
       " '301bcbe3-4e5e-4770-b0c0-12ccb0917f40',\n",
       " '2581922b-4ad8-4947-8a70-acb6a50f4be8',\n",
       " '20db8205-da39-4554-8b44-b190233f6b38',\n",
       " 'fa589f7b-89de-4e2f-963b-8a4d0e6d601c',\n",
       " '5e63d68c-3e66-4a18-aaec-2e5ab776b0ae',\n",
       " 'dac8d9da-aea7-4246-9e85-7699a84ee4da',\n",
       " '417b7075-0139-46d5-b64e-a42355e039e3',\n",
       " 'e201f89c-721e-4749-b77a-599da7df4baf',\n",
       " '70f98310-1457-4f09-9955-11d7a9d31bf8',\n",
       " 'cf24e9eb-9c95-4524-8386-98e630e17961',\n",
       " '27745de5-760b-4694-8372-c7f357775aba',\n",
       " '618c46a2-55e5-4689-9e46-80ffdafe3dca',\n",
       " '70438a3d-5214-4363-883b-57e747d4c7e7',\n",
       " '644d4834-8201-4421-9ecb-d928f730363a',\n",
       " '0f537656-5668-4de8-b90f-5abb3f14c343',\n",
       " '5ccfa412-1b4d-4512-8a5b-3e16a17984a0',\n",
       " 'bd8c98bc-119d-4ec6-ba40-b94c7a389b13',\n",
       " '13dec6ca-086b-4ed0-8437-4825af13e6e6',\n",
       " '431bcf12-5514-42d9-9d03-a57ba5b0989c',\n",
       " '3470fd5e-98ed-4bfa-a187-2a19574f2330',\n",
       " 'e11fbecc-98bd-4654-b472-2ee19115a510',\n",
       " '132bb286-8805-4793-bd69-4bb8eb53fbf6',\n",
       " 'e8ad4aee-e00f-45ed-b4a2-822a0992dab4',\n",
       " '04e31636-61cb-4620-ab79-2281bc2832c4',\n",
       " '90c586b4-778d-4a83-b2dc-9df25efe8ec8',\n",
       " '7c2b161d-b595-4010-842c-6b070a6241d1',\n",
       " 'd9f1bb6a-c968-40a0-a7dc-eeaed1e44846',\n",
       " 'd467e684-fc60-427e-bebe-d859a59113d5',\n",
       " '70e145d5-8dfd-4f32-a46e-27e18b902b36',\n",
       " '873f5764-a236-4cb9-a00e-ba2f062e640d',\n",
       " '4a4f2c60-9f85-4bb0-8f96-f80a1e6301a5',\n",
       " '11fdedec-af71-420d-b885-62d175eea421',\n",
       " 'd2e743e1-54e1-45a4-b357-29d233195c1d',\n",
       " 'aa2ef4c0-fd38-40a1-b1c8-bd2cdf8103ef',\n",
       " '243567e3-f423-4c19-841b-3d84f5664851',\n",
       " '387427b4-e0f4-496d-bf9d-a3c833a1a697',\n",
       " 'd8aaa455-3d05-4cc0-af17-ca4c9ee724f9',\n",
       " '5c452c98-6d2d-44b3-b67e-a4f0d15ff37d',\n",
       " '147f5b24-e8c3-4f6c-bc06-a631493d7464',\n",
       " '1a23df0d-c416-4cc8-b019-4504956c9c90',\n",
       " '944c3fea-5583-4fc6-9bcb-6dbcabb90a9e',\n",
       " '457de145-03c3-4639-bf88-a3cf32f6347d',\n",
       " '03897176-c179-4731-af83-538ea5e6c189',\n",
       " '24de3ff7-76c1-4862-b6d0-1f98a4795409',\n",
       " 'e5d1483c-ff33-4959-b5bb-8ac56450c069',\n",
       " '4de30237-9f5f-401c-b4e9-8926466dfe43',\n",
       " '5fe4899a-759e-443c-829c-b96579bbaa15',\n",
       " '961bfce9-8d43-4da1-98cb-889bdcdb309f',\n",
       " '3e430f2d-8bf8-4d9a-8ca0-09065369d53d',\n",
       " '4032958e-c889-4a7e-8a1a-faa2b790ce4a',\n",
       " '881588d5-8cec-4aa0-82fd-a5f358c3a042',\n",
       " '613a7227-9060-4d0e-bb4e-fe12495f5bbf',\n",
       " 'd55f60a1-17e2-4258-94a7-5648498a7863',\n",
       " 'a28d1378-1abf-4b29-9aa8-0ad0b3699e68',\n",
       " 'd4d647a0-8888-4ec4-8bfb-abe8a11d43eb',\n",
       " '8a5b7beb-ba6e-4276-9aa6-7ae728dea11a',\n",
       " 'be787253-1626-4df4-86b7-5eb8e687fd78',\n",
       " '4f648882-e344-48de-9772-f38e3dd41a97',\n",
       " '852384ba-3490-4453-8a91-625982ca2a00',\n",
       " '4b2291b7-e21d-48de-b2b1-3669444465f5',\n",
       " 'e5ae558f-8ad1-4a32-a070-472acd7f9be2',\n",
       " '73232b06-36ca-4b42-9d73-7a20458e72a7',\n",
       " 'b4ed62de-c9a4-4ba6-a426-e7da40556a48',\n",
       " '370e9a31-bd98-4ab1-9b78-fc17cda2e4ef',\n",
       " '455aae85-4ba7-4cab-90d5-f3ca1be5fa5f',\n",
       " '0d203821-ee59-409c-a3b7-c9b6f2722008',\n",
       " '8e7ed4ae-3ff6-487f-b32c-226b48d3b0c5',\n",
       " 'b9bee168-ca85-44d3-8ca3-28e07f4109f3',\n",
       " '2ee7342c-fbe7-41d9-b17f-dd59a2448c8a',\n",
       " '173e558b-b597-4e59-ab77-b9e21dfb0dfd',\n",
       " '89735399-af71-4e0a-baad-9ca0be4fc334',\n",
       " 'a2ed9abe-1a72-4a23-ba8f-81b1d5b4743b',\n",
       " 'a06dcdeb-9196-4561-91ed-52307d88f8e5',\n",
       " '414ee073-095a-4f87-8c4d-aafb3665e5ac',\n",
       " '5687e6dc-84ef-4ed3-855d-339aa54d3083',\n",
       " '401fa4da-2f32-466c-ab11-02840a27e9d3',\n",
       " 'f8c7be02-63db-4710-a73f-f0a9cd7415e6',\n",
       " 'b02d0de8-88d6-449d-a5be-40c7188a0570',\n",
       " '3ce63b55-2430-45f5-8ed6-51b500cd7eda',\n",
       " '02777822-6d2a-4bca-ae48-4fc0510f9222',\n",
       " '61b4da2a-c7c1-4430-bd3e-e620e1d3b716',\n",
       " '1a01b77c-827b-478c-b33b-5d107c70fa64',\n",
       " 'bdecd939-721b-424b-a29f-5a6ed0232dc6',\n",
       " 'd470645b-6910-4843-bd41-038e70d0cd70',\n",
       " '2bbb5323-cd7e-4124-adbb-c456da95cb46',\n",
       " '13c49678-9cf5-4942-bab4-b415d4af06c4',\n",
       " 'b1950f8a-2411-4020-86b6-d4aadea19d65',\n",
       " 'c1069f12-701d-4e4b-b495-c0ee87582a91',\n",
       " '78d4d0d4-4482-46b6-8ddd-87ea92d72eb6',\n",
       " 'd0e00f19-9064-4bcf-8ef0-1dfb78cb6bb2',\n",
       " '0bec5111-1688-460c-949b-834b0baf859e',\n",
       " 'bd91b5e8-4daf-4b94-864f-3365f0d8902a',\n",
       " 'df8cdc2e-3294-49c9-b96e-d8af05787558',\n",
       " '7fc11351-1a26-4ac2-962f-0b47a6dd7bdb',\n",
       " '4ce2c6bd-5a43-459c-b5fd-206aed1d8004',\n",
       " '4fba1a20-6227-4de9-abd8-c87f96c8846a',\n",
       " '2861e337-4492-43dc-bbb4-1375de327e67',\n",
       " '33014088-de01-4a27-8bd5-c4178e8bedb6',\n",
       " 'aaa9b9a8-5c88-4d91-a3c4-87d68399f0ad',\n",
       " 'd82f58b8-92e9-4c43-9288-f911000a5b60',\n",
       " 'f7f56644-0122-42b6-aaa6-6ef781d88231',\n",
       " '69abd89c-0348-41ff-9d73-a63a7f8233f3',\n",
       " '318d669f-9582-4fb4-82a0-bd2053882a94',\n",
       " 'd7cdcfaf-da47-40d0-aaa7-51776728235c',\n",
       " '3d8e09d7-7cb4-4fa6-ba07-1370d6f7e89c',\n",
       " '133c46be-4580-4035-afa4-d5e304c77d4d',\n",
       " '018bd1a6-638c-4f82-a9fb-47a7ffc20ebe',\n",
       " 'cc7207c3-116e-4cb0-ae61-956aed7767ac',\n",
       " 'ae9a684b-ac52-4229-917e-d3216106462d',\n",
       " 'd2384fe8-6378-4ac6-a762-e0bce3e1ed3c',\n",
       " '75d469b7-cff2-45bf-ad04-0ff2fb14b0dd',\n",
       " 'ecc13ed8-9b90-4276-bbbf-f3e0eb2cba4b',\n",
       " '180a576b-c663-4843-8c3d-9241ac94ea4c',\n",
       " 'c10872fd-c141-4c16-aa7d-1ab23b7e926b',\n",
       " 'c49baad5-974f-4e69-8050-80f41283179c',\n",
       " 'e9434004-a879-423a-9fbc-d6b2bf871075',\n",
       " '7e83bc87-46f5-4655-a7b0-96a7d1412d13',\n",
       " '8fcb9cf2-1f17-4d23-8ca3-4fe23881ec3e',\n",
       " '97009c89-8594-46b2-b645-38d5a7067493',\n",
       " '9d9118fb-04e8-4254-8219-39f3a474c34f',\n",
       " '781f90e9-8ca5-4609-869d-0df9401da270',\n",
       " 'a3710015-db79-4439-8c86-822cccbbaf73',\n",
       " 'c042730f-91d3-464c-9775-0a343ccc0a5b',\n",
       " '4708fe3b-7de3-4f6a-b414-314bba4eafe6',\n",
       " 'cd6742b4-f198-41e8-bf40-cdd6d80a5b3f',\n",
       " '9f7188f6-fb27-4eb2-b5c5-ae95d4a4243d',\n",
       " '196ce10f-1a57-45c5-9e3d-22e57507b467',\n",
       " '5626073d-74a3-4cd0-9994-1c0fbff10c61',\n",
       " '071ff288-4513-43b7-9014-bc8ca38b4d5c',\n",
       " 'eab4c4bf-cb7f-4953-8917-7a7b5249435e',\n",
       " '5cf0aaf7-6d57-461e-8228-4bfb7c389945',\n",
       " 'b05ec86e-59b6-47ca-966a-6c7a962001de',\n",
       " 'f6044868-2eae-4e32-b5fc-11194038a777',\n",
       " '9bc8c041-99cc-4af0-949f-eeb9b9ad8609',\n",
       " '9419d068-5435-4da9-a762-cf0968438739',\n",
       " 'ca5f4071-5175-4135-b56d-55300a74a0f9',\n",
       " 'b7af9335-b69a-4018-9579-648d539c718d',\n",
       " '7c2cfcee-f7f5-4297-a42a-5970ed3928d6',\n",
       " '82eb5d44-876d-4a00-a723-51301ecd0eed',\n",
       " 'e77dad79-7f35-41aa-afb1-6a39b112812b',\n",
       " '2d82b403-5255-432f-a24a-6f505a0b0cff',\n",
       " '3ca5289e-e655-4e8f-ab63-2daa8ce2ad5b',\n",
       " '17ec250b-0baf-4497-bea0-142ba8d8902c',\n",
       " '225afd8e-bdd7-4498-a070-7d0fc9f7e3fa',\n",
       " 'e09cd0c8-54e5-4229-b44e-42983025d1ba',\n",
       " '021cb948-acbd-4fcb-8436-4ba2e9344f10',\n",
       " '59e8c5f3-1f87-4d3a-9695-a0349e6cab05',\n",
       " 'e3efa6de-c217-4e54-8d48-88ae36a4f9e6',\n",
       " '89d7d81c-9f79-421e-8b05-194e9c76a17d',\n",
       " '8b92e324-3a72-49ae-a924-a87557d5f248',\n",
       " '16b95357-6d19-4f02-b4d6-73e3616710d8',\n",
       " 'c98b3bd8-4338-49db-89b0-92b1b4a43c50',\n",
       " '1e193dc1-87f5-45f8-911e-98e6556b1ad0',\n",
       " 'e1f2e51d-6170-45bd-a240-fd1536000097',\n",
       " 'dd79f853-94a7-435b-bf57-b67b0b2a88df',\n",
       " '0add3ceb-9d31-49a4-8150-8eda11a24951',\n",
       " '905a46d7-4503-4bc5-83a4-207892a77f94',\n",
       " '622deadf-1345-4bc7-84db-1f8976a18389',\n",
       " '150ba450-4476-464b-9de3-cb0c1d0d38c0',\n",
       " 'a0b9ee81-3f67-4d62-8ed7-11a14b2fb4f7',\n",
       " '50c74a7d-c4d5-4df4-8f41-9e713bb96d7d',\n",
       " '83c78481-0959-4636-803d-76e46718bb1e',\n",
       " '8e6d535d-a90a-4b58-b737-a5d65e7454e6',\n",
       " '0d9adc88-4fc5-4693-aec8-3562f6ee9dbe',\n",
       " '09fb4b62-ad69-4d80-a09c-9d54efa204e3',\n",
       " 'd4530c5c-f28f-40ce-8945-a394c171c313',\n",
       " 'ccec5e78-7168-4fc9-b716-b31e475a488d',\n",
       " 'b989d177-1136-4597-8804-34e718b564fa',\n",
       " 'c7c7b22a-bb8f-4d2a-8b1c-2e9f373800bb',\n",
       " 'c4eb9f36-bcc1-4740-af63-b0e880b3767a',\n",
       " '65a13c20-28a7-4498-a364-8741e9fa4da6',\n",
       " 'e066f6de-2dd0-4371-9cb2-8485522ba243',\n",
       " '23b072e2-b866-460c-bddd-23cb2c33529d',\n",
       " '00ebe02a-b24b-40df-bf9b-5b3b5e727bd0',\n",
       " '7ebd6dc1-b7a3-426d-ad0c-bea355dd2bfe',\n",
       " 'b4fa51b4-0957-458e-a693-e65c33274830',\n",
       " '6c9664ce-94f9-4640-bd06-6afba7c63ffa',\n",
       " 'fb9ab3a4-4b83-40e8-9ca0-a53691db6b6c',\n",
       " 'd528e29b-ad1d-43bd-a33a-149b451d500e',\n",
       " '53cee350-bc4e-40c4-86f3-efe7277ca8f8',\n",
       " 'd1dad6b1-a2ff-48cb-847a-9c0ca5a3ce32',\n",
       " '8216d725-5240-4556-9404-55dd8b1ab09b',\n",
       " 'd40681f1-b7d1-4aab-b64b-d0185b67881a',\n",
       " '91b66c29-b3c2-4bdc-8fea-b87436ac2799',\n",
       " '7f959e20-9316-4eb1-8bcb-f1e2f1ebdc85',\n",
       " '93b02b58-e2a7-4498-ac95-f33b283fdedd',\n",
       " '2dec1f56-e785-4fce-9099-5cca078b7eb7',\n",
       " 'f40d7e36-8deb-4f74-be2e-65d58d778562',\n",
       " '1b092fb9-96a6-4259-ab54-883bd95ffc24',\n",
       " '43bb1764-47a8-4858-8abe-33ec77a6d649',\n",
       " 'cab01a12-e37d-4e5d-b7df-583683607067',\n",
       " 'f143af17-c761-49a4-9d69-bf5aa857f4ed',\n",
       " '244030b4-ddd3-451f-a2f1-14fe538149fc',\n",
       " 'c30c6576-c140-4140-a853-943ecd4c1396',\n",
       " '9c336ed4-b485-4152-b476-0d1f0e5b2e6e',\n",
       " 'aa63f1cd-5b89-4586-984e-b4d163b4f0b1',\n",
       " '363ad02e-8883-4c17-8366-ded16a346e76',\n",
       " 'bb7846af-02a6-4ea3-a813-7c7f3a6dc2aa',\n",
       " 'b0a3a039-8181-41c7-b949-58c2701e1388',\n",
       " 'f57b3313-cb3e-4870-9e36-5340ccb6fc35',\n",
       " '8894749b-7e0c-400c-a04a-fc3743ba39df',\n",
       " 'fb4f4dc1-bf59-4305-8c63-c23983c259ed',\n",
       " 'b30dc03f-2544-483c-84e3-8c6c22cd25b1',\n",
       " '58225db3-6236-40f5-9a72-72b20238ee02',\n",
       " '02d53140-e08d-4559-a212-20970e335a05',\n",
       " 'bac59c38-aea6-4cb3-9d54-f0b07ad94297',\n",
       " '1ff96964-178b-49ca-89e9-9399b27d5c85',\n",
       " 'c39e89d8-db94-466c-aa2c-d5c6d14d4752',\n",
       " ...]"
      ]
     },
     "execution_count": 21,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "import csv\n",
    "\n",
    "my_list = []\n",
    "\n",
    "with open(\"./idlist/match_ids_0426-0501.csv\", \"r\") as f:\n",
    "    reader = csv.reader(f)\n",
    "    for row in reader:  # 한 줄씩 읽어서 리스트에 추가\n",
    "        my_list.append(row[0])  # 첫 번째 컬럼 값만 추가\n",
    "\n",
    "my_list=my_list[1:]# ✅ ['b006ac8e-d4ee-4a8e-880f-3e1081c4d0ae', 'ed28ded7-56de-41ad-917f-bf1314975b81', ...]\n",
    "my_list\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 38,
   "metadata": {},
   "outputs": [],
   "source": [
    "my_list2 = my_list[3000:4000]\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 40,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Saved ./data/output3000.csv\n",
      "Saved ./data/output3001.csv\n",
      "Saved ./data/output3002.csv\n",
      "Saved ./data/output3003.csv\n",
      "Saved ./data/output3004.csv\n",
      "Saved ./data/output3005.csv\n",
      "Saved ./data/output3006.csv\n",
      "Saved ./data/output3007.csv\n",
      "Saved ./data/output3008.csv\n",
      "Saved ./data/output3009.csv\n",
      "Saved ./data/output3010.csv\n",
      "Saved ./data/output3011.csv\n",
      "Saved ./data/output3012.csv\n",
      "Saved ./data/output3013.csv\n",
      "Saved ./data/output3014.csv\n",
      "Saved ./data/output3015.csv\n",
      "Saved ./data/output3016.csv\n",
      "Saved ./data/output3017.csv\n",
      "Saved ./data/output3018.csv\n",
      "Saved ./data/output3019.csv\n",
      "Saved ./data/output3020.csv\n",
      "Saved ./data/output3021.csv\n",
      "Saved ./data/output3022.csv\n",
      "Saved ./data/output3023.csv\n",
      "Saved ./data/output3024.csv\n",
      "Saved ./data/output3025.csv\n",
      "Saved ./data/output3026.csv\n",
      "Saved ./data/output3027.csv\n",
      "Saved ./data/output3028.csv\n",
      "Saved ./data/output3029.csv\n",
      "Saved ./data/output3030.csv\n",
      "Saved ./data/output3031.csv\n",
      "Saved ./data/output3032.csv\n",
      "Saved ./data/output3033.csv\n",
      "Saved ./data/output3034.csv\n",
      "Saved ./data/output3035.csv\n",
      "Saved ./data/output3036.csv\n",
      "Saved ./data/output3037.csv\n",
      "Saved ./data/output3038.csv\n",
      "Saved ./data/output3039.csv\n",
      "Saved ./data/output3040.csv\n",
      "Saved ./data/output3041.csv\n",
      "Saved ./data/output3042.csv\n",
      "Saved ./data/output3043.csv\n",
      "Saved ./data/output3044.csv\n",
      "Saved ./data/output3045.csv\n",
      "Saved ./data/output3046.csv\n",
      "Saved ./data/output3047.csv\n",
      "Saved ./data/output3048.csv\n",
      "Saved ./data/output3049.csv\n",
      "Saved ./data/output3050.csv\n",
      "Saved ./data/output3051.csv\n",
      "Saved ./data/output3052.csv\n",
      "Saved ./data/output3053.csv\n",
      "Saved ./data/output3054.csv\n",
      "Saved ./data/output3055.csv\n",
      "Saved ./data/output3056.csv\n",
      "Saved ./data/output3057.csv\n",
      "Saved ./data/output3058.csv\n",
      "Saved ./data/output3059.csv\n",
      "Saved ./data/output3060.csv\n",
      "Saved ./data/output3061.csv\n",
      "Saved ./data/output3062.csv\n",
      "Saved ./data/output3063.csv\n",
      "Saved ./data/output3064.csv\n",
      "Saved ./data/output3065.csv\n",
      "Saved ./data/output3066.csv\n",
      "Saved ./data/output3067.csv\n",
      "Saved ./data/output3068.csv\n",
      "Saved ./data/output3069.csv\n",
      "Saved ./data/output3070.csv\n",
      "Saved ./data/output3071.csv\n",
      "Saved ./data/output3072.csv\n",
      "Saved ./data/output3073.csv\n",
      "Saved ./data/output3074.csv\n",
      "Saved ./data/output3075.csv\n",
      "Saved ./data/output3076.csv\n",
      "Saved ./data/output3077.csv\n",
      "Saved ./data/output3078.csv\n",
      "Saved ./data/output3079.csv\n",
      "Saved ./data/output3080.csv\n",
      "Saved ./data/output3081.csv\n",
      "Saved ./data/output3082.csv\n",
      "Saved ./data/output3083.csv\n",
      "Saved ./data/output3084.csv\n",
      "Saved ./data/output3085.csv\n",
      "Saved ./data/output3086.csv\n",
      "Saved ./data/output3087.csv\n",
      "Saved ./data/output3088.csv\n",
      "Saved ./data/output3089.csv\n",
      "Saved ./data/output3090.csv\n",
      "Saved ./data/output3091.csv\n",
      "Saved ./data/output3092.csv\n",
      "Saved ./data/output3093.csv\n",
      "Saved ./data/output3094.csv\n",
      "Saved ./data/output3095.csv\n",
      "Saved ./data/output3096.csv\n",
      "Saved ./data/output3097.csv\n",
      "Saved ./data/output3098.csv\n",
      "Saved ./data/output3099.csv\n",
      "Saved ./data/output3100.csv\n",
      "Saved ./data/output3101.csv\n",
      "Saved ./data/output3102.csv\n",
      "Saved ./data/output3103.csv\n",
      "Saved ./data/output3104.csv\n",
      "Saved ./data/output3105.csv\n",
      "Saved ./data/output3106.csv\n",
      "Saved ./data/output3107.csv\n",
      "Saved ./data/output3108.csv\n",
      "Saved ./data/output3109.csv\n",
      "Saved ./data/output3110.csv\n",
      "Saved ./data/output3111.csv\n",
      "Saved ./data/output3112.csv\n",
      "Saved ./data/output3113.csv\n",
      "Saved ./data/output3114.csv\n",
      "Saved ./data/output3115.csv\n",
      "Saved ./data/output3116.csv\n",
      "Saved ./data/output3117.csv\n",
      "Saved ./data/output3118.csv\n",
      "Saved ./data/output3119.csv\n",
      "Saved ./data/output3120.csv\n",
      "Saved ./data/output3121.csv\n",
      "Saved ./data/output3122.csv\n",
      "Saved ./data/output3123.csv\n",
      "Saved ./data/output3124.csv\n",
      "Saved ./data/output3125.csv\n",
      "Saved ./data/output3126.csv\n",
      "Saved ./data/output3127.csv\n",
      "Saved ./data/output3128.csv\n",
      "Saved ./data/output3129.csv\n",
      "Saved ./data/output3130.csv\n",
      "Saved ./data/output3131.csv\n",
      "Saved ./data/output3132.csv\n",
      "Saved ./data/output3133.csv\n",
      "Saved ./data/output3134.csv\n",
      "Saved ./data/output3135.csv\n",
      "Saved ./data/output3136.csv\n",
      "Saved ./data/output3137.csv\n",
      "Saved ./data/output3138.csv\n",
      "Saved ./data/output3139.csv\n",
      "Saved ./data/output3140.csv\n",
      "Saved ./data/output3141.csv\n",
      "Saved ./data/output3142.csv\n",
      "Saved ./data/output3143.csv\n",
      "Saved ./data/output3144.csv\n",
      "Saved ./data/output3145.csv\n",
      "Saved ./data/output3146.csv\n",
      "Saved ./data/output3147.csv\n",
      "Saved ./data/output3148.csv\n",
      "Saved ./data/output3149.csv\n",
      "Saved ./data/output3150.csv\n",
      "Saved ./data/output3151.csv\n",
      "Saved ./data/output3152.csv\n",
      "Saved ./data/output3153.csv\n",
      "Saved ./data/output3154.csv\n",
      "Saved ./data/output3155.csv\n",
      "Saved ./data/output3156.csv\n",
      "Saved ./data/output3157.csv\n",
      "Saved ./data/output3158.csv\n",
      "Saved ./data/output3159.csv\n",
      "Saved ./data/output3160.csv\n",
      "Saved ./data/output3161.csv\n",
      "Saved ./data/output3162.csv\n",
      "Saved ./data/output3163.csv\n",
      "Saved ./data/output3164.csv\n",
      "Saved ./data/output3165.csv\n",
      "Saved ./data/output3166.csv\n",
      "Saved ./data/output3167.csv\n",
      "Saved ./data/output3168.csv\n",
      "Saved ./data/output3169.csv\n",
      "Saved ./data/output3170.csv\n",
      "Saved ./data/output3171.csv\n",
      "Saved ./data/output3172.csv\n",
      "Saved ./data/output3173.csv\n",
      "Saved ./data/output3174.csv\n",
      "Saved ./data/output3175.csv\n",
      "Saved ./data/output3176.csv\n",
      "Saved ./data/output3177.csv\n",
      "Saved ./data/output3178.csv\n",
      "Saved ./data/output3179.csv\n",
      "Saved ./data/output3180.csv\n",
      "Saved ./data/output3181.csv\n",
      "Saved ./data/output3182.csv\n",
      "Saved ./data/output3183.csv\n",
      "Saved ./data/output3184.csv\n",
      "Saved ./data/output3185.csv\n",
      "Saved ./data/output3186.csv\n",
      "Saved ./data/output3187.csv\n",
      "Saved ./data/output3188.csv\n",
      "Saved ./data/output3189.csv\n",
      "Saved ./data/output3190.csv\n",
      "Saved ./data/output3191.csv\n",
      "Saved ./data/output3192.csv\n",
      "Saved ./data/output3193.csv\n",
      "Saved ./data/output3194.csv\n",
      "Saved ./data/output3195.csv\n",
      "Saved ./data/output3196.csv\n",
      "Saved ./data/output3197.csv\n",
      "Saved ./data/output3198.csv\n",
      "Saved ./data/output3199.csv\n",
      "Saved ./data/output3200.csv\n",
      "Saved ./data/output3201.csv\n",
      "Saved ./data/output3202.csv\n",
      "Saved ./data/output3203.csv\n",
      "Saved ./data/output3204.csv\n",
      "Saved ./data/output3205.csv\n",
      "Saved ./data/output3206.csv\n",
      "Saved ./data/output3207.csv\n",
      "Saved ./data/output3208.csv\n",
      "Saved ./data/output3209.csv\n",
      "Saved ./data/output3210.csv\n",
      "Saved ./data/output3211.csv\n",
      "Saved ./data/output3212.csv\n",
      "Saved ./data/output3213.csv\n",
      "Saved ./data/output3214.csv\n",
      "Saved ./data/output3215.csv\n",
      "Saved ./data/output3216.csv\n",
      "Saved ./data/output3217.csv\n",
      "Saved ./data/output3218.csv\n",
      "Saved ./data/output3219.csv\n",
      "Saved ./data/output3220.csv\n",
      "Saved ./data/output3221.csv\n",
      "Saved ./data/output3222.csv\n",
      "Saved ./data/output3223.csv\n",
      "Saved ./data/output3224.csv\n",
      "Saved ./data/output3225.csv\n",
      "Saved ./data/output3226.csv\n",
      "Saved ./data/output3227.csv\n",
      "Saved ./data/output3228.csv\n",
      "Saved ./data/output3229.csv\n",
      "Saved ./data/output3230.csv\n",
      "Saved ./data/output3231.csv\n",
      "Saved ./data/output3232.csv\n",
      "Saved ./data/output3233.csv\n",
      "Saved ./data/output3234.csv\n",
      "Saved ./data/output3235.csv\n",
      "Saved ./data/output3236.csv\n",
      "Saved ./data/output3237.csv\n",
      "Saved ./data/output3238.csv\n",
      "Saved ./data/output3239.csv\n",
      "Saved ./data/output3240.csv\n",
      "Saved ./data/output3241.csv\n",
      "Saved ./data/output3242.csv\n",
      "Saved ./data/output3243.csv\n",
      "Saved ./data/output3244.csv\n",
      "Saved ./data/output3245.csv\n",
      "Saved ./data/output3246.csv\n",
      "Saved ./data/output3247.csv\n",
      "Saved ./data/output3248.csv\n",
      "Saved ./data/output3249.csv\n",
      "Saved ./data/output3250.csv\n",
      "Saved ./data/output3251.csv\n",
      "Saved ./data/output3252.csv\n",
      "Saved ./data/output3253.csv\n",
      "Saved ./data/output3254.csv\n",
      "Saved ./data/output3255.csv\n",
      "Saved ./data/output3256.csv\n",
      "Saved ./data/output3257.csv\n",
      "Saved ./data/output3258.csv\n",
      "Saved ./data/output3259.csv\n",
      "Saved ./data/output3260.csv\n",
      "Saved ./data/output3261.csv\n",
      "Saved ./data/output3262.csv\n",
      "Saved ./data/output3263.csv\n",
      "Saved ./data/output3264.csv\n",
      "Saved ./data/output3265.csv\n",
      "Saved ./data/output3266.csv\n",
      "Saved ./data/output3267.csv\n",
      "Saved ./data/output3268.csv\n",
      "Saved ./data/output3269.csv\n",
      "Saved ./data/output3270.csv\n",
      "Saved ./data/output3271.csv\n",
      "Saved ./data/output3272.csv\n",
      "Saved ./data/output3273.csv\n",
      "Saved ./data/output3274.csv\n",
      "Saved ./data/output3275.csv\n",
      "Saved ./data/output3276.csv\n",
      "Saved ./data/output3277.csv\n",
      "Saved ./data/output3278.csv\n",
      "Saved ./data/output3279.csv\n",
      "Saved ./data/output3280.csv\n",
      "Saved ./data/output3281.csv\n",
      "Saved ./data/output3282.csv\n",
      "Saved ./data/output3283.csv\n",
      "Saved ./data/output3284.csv\n",
      "Saved ./data/output3285.csv\n",
      "Saved ./data/output3286.csv\n",
      "Saved ./data/output3287.csv\n",
      "Saved ./data/output3288.csv\n",
      "Saved ./data/output3289.csv\n",
      "Saved ./data/output3290.csv\n",
      "Saved ./data/output3291.csv\n",
      "Saved ./data/output3292.csv\n",
      "Saved ./data/output3293.csv\n",
      "Saved ./data/output3294.csv\n",
      "Saved ./data/output3295.csv\n",
      "Saved ./data/output3296.csv\n",
      "Saved ./data/output3297.csv\n",
      "Saved ./data/output3298.csv\n",
      "Saved ./data/output3299.csv\n",
      "Saved ./data/output3300.csv\n",
      "Saved ./data/output3301.csv\n",
      "Saved ./data/output3302.csv\n",
      "Saved ./data/output3303.csv\n",
      "Saved ./data/output3304.csv\n",
      "Saved ./data/output3305.csv\n",
      "Saved ./data/output3306.csv\n",
      "Saved ./data/output3307.csv\n",
      "Saved ./data/output3308.csv\n",
      "Saved ./data/output3309.csv\n",
      "Saved ./data/output3310.csv\n",
      "Saved ./data/output3311.csv\n",
      "Saved ./data/output3312.csv\n",
      "Saved ./data/output3313.csv\n",
      "Saved ./data/output3314.csv\n",
      "Saved ./data/output3315.csv\n",
      "Saved ./data/output3316.csv\n",
      "Saved ./data/output3317.csv\n",
      "Saved ./data/output3318.csv\n",
      "Saved ./data/output3319.csv\n",
      "Saved ./data/output3320.csv\n",
      "Saved ./data/output3321.csv\n",
      "Saved ./data/output3322.csv\n",
      "Saved ./data/output3323.csv\n",
      "Saved ./data/output3324.csv\n",
      "Saved ./data/output3325.csv\n",
      "Saved ./data/output3326.csv\n",
      "Saved ./data/output3327.csv\n",
      "Saved ./data/output3328.csv\n",
      "Saved ./data/output3329.csv\n",
      "Saved ./data/output3330.csv\n",
      "Saved ./data/output3331.csv\n",
      "Saved ./data/output3332.csv\n",
      "Saved ./data/output3333.csv\n",
      "Saved ./data/output3334.csv\n",
      "Saved ./data/output3335.csv\n",
      "Saved ./data/output3336.csv\n",
      "Saved ./data/output3337.csv\n",
      "Saved ./data/output3338.csv\n",
      "Saved ./data/output3339.csv\n",
      "Saved ./data/output3340.csv\n",
      "Saved ./data/output3341.csv\n",
      "Saved ./data/output3342.csv\n",
      "Saved ./data/output3343.csv\n",
      "Saved ./data/output3344.csv\n",
      "Saved ./data/output3345.csv\n",
      "Saved ./data/output3346.csv\n",
      "Saved ./data/output3347.csv\n",
      "Saved ./data/output3348.csv\n",
      "Saved ./data/output3349.csv\n",
      "Saved ./data/output3350.csv\n",
      "Saved ./data/output3351.csv\n",
      "Saved ./data/output3352.csv\n",
      "Saved ./data/output3353.csv\n",
      "Saved ./data/output3354.csv\n",
      "Saved ./data/output3355.csv\n",
      "Saved ./data/output3356.csv\n",
      "Saved ./data/output3357.csv\n",
      "Saved ./data/output3358.csv\n",
      "Saved ./data/output3359.csv\n",
      "Saved ./data/output3360.csv\n",
      "Saved ./data/output3361.csv\n",
      "Saved ./data/output3362.csv\n",
      "Saved ./data/output3363.csv\n",
      "Saved ./data/output3364.csv\n",
      "Saved ./data/output3365.csv\n",
      "Saved ./data/output3366.csv\n",
      "Saved ./data/output3367.csv\n",
      "Saved ./data/output3368.csv\n",
      "Saved ./data/output3369.csv\n",
      "Saved ./data/output3370.csv\n",
      "Saved ./data/output3371.csv\n",
      "Saved ./data/output3372.csv\n",
      "Saved ./data/output3373.csv\n",
      "Saved ./data/output3374.csv\n",
      "Saved ./data/output3375.csv\n",
      "Saved ./data/output3376.csv\n",
      "Saved ./data/output3377.csv\n",
      "Saved ./data/output3378.csv\n",
      "Saved ./data/output3379.csv\n",
      "Saved ./data/output3380.csv\n",
      "Saved ./data/output3381.csv\n",
      "Saved ./data/output3382.csv\n",
      "Saved ./data/output3383.csv\n",
      "Saved ./data/output3384.csv\n",
      "Saved ./data/output3385.csv\n",
      "Saved ./data/output3386.csv\n",
      "Saved ./data/output3387.csv\n",
      "Saved ./data/output3388.csv\n",
      "Saved ./data/output3389.csv\n",
      "Saved ./data/output3390.csv\n",
      "Saved ./data/output3391.csv\n",
      "Saved ./data/output3392.csv\n",
      "Saved ./data/output3393.csv\n",
      "Saved ./data/output3394.csv\n",
      "Saved ./data/output3395.csv\n",
      "Saved ./data/output3396.csv\n",
      "Saved ./data/output3397.csv\n",
      "Saved ./data/output3398.csv\n",
      "Saved ./data/output3399.csv\n",
      "Saved ./data/output3400.csv\n",
      "Saved ./data/output3401.csv\n",
      "Saved ./data/output3402.csv\n",
      "Saved ./data/output3403.csv\n",
      "Saved ./data/output3404.csv\n",
      "Saved ./data/output3405.csv\n",
      "Saved ./data/output3406.csv\n",
      "Saved ./data/output3407.csv\n",
      "Saved ./data/output3408.csv\n",
      "Saved ./data/output3409.csv\n",
      "Saved ./data/output3410.csv\n",
      "Saved ./data/output3411.csv\n",
      "Saved ./data/output3412.csv\n",
      "Saved ./data/output3413.csv\n",
      "Saved ./data/output3414.csv\n",
      "Saved ./data/output3415.csv\n",
      "Saved ./data/output3416.csv\n",
      "Saved ./data/output3417.csv\n",
      "Saved ./data/output3418.csv\n",
      "Saved ./data/output3419.csv\n",
      "Saved ./data/output3420.csv\n",
      "Saved ./data/output3421.csv\n",
      "Saved ./data/output3422.csv\n",
      "Saved ./data/output3423.csv\n",
      "Saved ./data/output3424.csv\n",
      "Saved ./data/output3425.csv\n",
      "Saved ./data/output3426.csv\n",
      "Saved ./data/output3427.csv\n",
      "Saved ./data/output3428.csv\n",
      "Saved ./data/output3429.csv\n",
      "Saved ./data/output3430.csv\n",
      "Saved ./data/output3431.csv\n",
      "Saved ./data/output3432.csv\n",
      "Saved ./data/output3433.csv\n",
      "Saved ./data/output3434.csv\n",
      "Saved ./data/output3435.csv\n",
      "Saved ./data/output3436.csv\n",
      "Saved ./data/output3437.csv\n",
      "Saved ./data/output3438.csv\n",
      "Saved ./data/output3439.csv\n",
      "Saved ./data/output3440.csv\n",
      "Saved ./data/output3441.csv\n",
      "Saved ./data/output3442.csv\n",
      "Saved ./data/output3443.csv\n",
      "Saved ./data/output3444.csv\n",
      "Saved ./data/output3445.csv\n",
      "Saved ./data/output3446.csv\n",
      "Saved ./data/output3447.csv\n",
      "Saved ./data/output3448.csv\n",
      "Saved ./data/output3449.csv\n",
      "Saved ./data/output3450.csv\n",
      "Saved ./data/output3451.csv\n",
      "Saved ./data/output3452.csv\n",
      "Saved ./data/output3453.csv\n",
      "Saved ./data/output3454.csv\n",
      "Saved ./data/output3455.csv\n",
      "Saved ./data/output3456.csv\n",
      "Saved ./data/output3457.csv\n",
      "Saved ./data/output3458.csv\n",
      "Saved ./data/output3459.csv\n",
      "Saved ./data/output3460.csv\n",
      "Saved ./data/output3461.csv\n",
      "Saved ./data/output3462.csv\n",
      "Saved ./data/output3463.csv\n",
      "Saved ./data/output3464.csv\n",
      "Saved ./data/output3465.csv\n",
      "Saved ./data/output3466.csv\n",
      "Saved ./data/output3467.csv\n",
      "Saved ./data/output3468.csv\n",
      "Saved ./data/output3469.csv\n",
      "Saved ./data/output3470.csv\n",
      "Saved ./data/output3471.csv\n",
      "Saved ./data/output3472.csv\n",
      "Saved ./data/output3473.csv\n",
      "Saved ./data/output3474.csv\n",
      "Saved ./data/output3475.csv\n",
      "Saved ./data/output3476.csv\n",
      "Saved ./data/output3477.csv\n",
      "Saved ./data/output3478.csv\n",
      "Saved ./data/output3479.csv\n",
      "Saved ./data/output3480.csv\n",
      "Saved ./data/output3481.csv\n",
      "Saved ./data/output3482.csv\n",
      "Saved ./data/output3483.csv\n",
      "Saved ./data/output3484.csv\n",
      "Saved ./data/output3485.csv\n",
      "Saved ./data/output3486.csv\n",
      "Saved ./data/output3487.csv\n",
      "Saved ./data/output3488.csv\n",
      "Saved ./data/output3489.csv\n",
      "Saved ./data/output3490.csv\n",
      "Saved ./data/output3491.csv\n",
      "Saved ./data/output3492.csv\n",
      "Saved ./data/output3493.csv\n",
      "Saved ./data/output3494.csv\n",
      "Saved ./data/output3495.csv\n",
      "Saved ./data/output3496.csv\n",
      "Saved ./data/output3497.csv\n",
      "Saved ./data/output3498.csv\n",
      "Saved ./data/output3499.csv\n",
      "Saved ./data/output3500.csv\n",
      "Saved ./data/output3501.csv\n",
      "Saved ./data/output3502.csv\n",
      "Saved ./data/output3503.csv\n",
      "Saved ./data/output3504.csv\n",
      "Saved ./data/output3505.csv\n",
      "Saved ./data/output3506.csv\n",
      "Saved ./data/output3507.csv\n",
      "Saved ./data/output3508.csv\n",
      "Saved ./data/output3509.csv\n",
      "Saved ./data/output3510.csv\n",
      "Saved ./data/output3511.csv\n",
      "Saved ./data/output3512.csv\n",
      "Saved ./data/output3513.csv\n",
      "Saved ./data/output3514.csv\n",
      "Saved ./data/output3515.csv\n",
      "Saved ./data/output3516.csv\n",
      "Saved ./data/output3517.csv\n",
      "Saved ./data/output3518.csv\n",
      "Saved ./data/output3519.csv\n",
      "Saved ./data/output3520.csv\n",
      "Saved ./data/output3521.csv\n",
      "Saved ./data/output3522.csv\n",
      "Saved ./data/output3523.csv\n",
      "Saved ./data/output3524.csv\n",
      "Saved ./data/output3525.csv\n",
      "Saved ./data/output3526.csv\n",
      "Saved ./data/output3527.csv\n",
      "Saved ./data/output3528.csv\n",
      "Saved ./data/output3529.csv\n",
      "Saved ./data/output3530.csv\n",
      "Saved ./data/output3531.csv\n",
      "Saved ./data/output3532.csv\n",
      "Saved ./data/output3533.csv\n",
      "Saved ./data/output3534.csv\n",
      "Saved ./data/output3535.csv\n",
      "Saved ./data/output3536.csv\n",
      "Saved ./data/output3537.csv\n",
      "Saved ./data/output3538.csv\n",
      "Saved ./data/output3539.csv\n",
      "Saved ./data/output3540.csv\n",
      "Saved ./data/output3541.csv\n",
      "Saved ./data/output3542.csv\n",
      "Saved ./data/output3543.csv\n",
      "Saved ./data/output3544.csv\n",
      "Saved ./data/output3545.csv\n",
      "Saved ./data/output3546.csv\n",
      "Saved ./data/output3547.csv\n",
      "Saved ./data/output3548.csv\n",
      "Saved ./data/output3549.csv\n",
      "Saved ./data/output3550.csv\n",
      "Saved ./data/output3551.csv\n",
      "Saved ./data/output3552.csv\n",
      "Saved ./data/output3553.csv\n",
      "Saved ./data/output3554.csv\n",
      "Saved ./data/output3555.csv\n",
      "Saved ./data/output3556.csv\n",
      "Saved ./data/output3557.csv\n",
      "Saved ./data/output3558.csv\n",
      "Saved ./data/output3559.csv\n",
      "Saved ./data/output3560.csv\n",
      "Saved ./data/output3561.csv\n",
      "Saved ./data/output3562.csv\n",
      "Saved ./data/output3563.csv\n",
      "Saved ./data/output3564.csv\n",
      "Saved ./data/output3565.csv\n",
      "Saved ./data/output3566.csv\n",
      "Saved ./data/output3567.csv\n",
      "Saved ./data/output3568.csv\n",
      "Saved ./data/output3569.csv\n",
      "Saved ./data/output3570.csv\n",
      "Saved ./data/output3571.csv\n",
      "Saved ./data/output3572.csv\n",
      "Saved ./data/output3573.csv\n",
      "Saved ./data/output3574.csv\n",
      "Saved ./data/output3575.csv\n",
      "Saved ./data/output3576.csv\n",
      "Saved ./data/output3577.csv\n",
      "Saved ./data/output3578.csv\n",
      "Saved ./data/output3579.csv\n",
      "Saved ./data/output3580.csv\n",
      "Saved ./data/output3581.csv\n",
      "Saved ./data/output3582.csv\n",
      "Saved ./data/output3583.csv\n",
      "Saved ./data/output3584.csv\n",
      "Saved ./data/output3585.csv\n",
      "Saved ./data/output3586.csv\n",
      "Saved ./data/output3587.csv\n",
      "Saved ./data/output3588.csv\n",
      "Saved ./data/output3589.csv\n",
      "Saved ./data/output3590.csv\n",
      "Saved ./data/output3591.csv\n",
      "Saved ./data/output3592.csv\n",
      "Saved ./data/output3593.csv\n",
      "Saved ./data/output3594.csv\n",
      "Saved ./data/output3595.csv\n",
      "Saved ./data/output3596.csv\n",
      "Saved ./data/output3597.csv\n",
      "Saved ./data/output3598.csv\n",
      "Saved ./data/output3599.csv\n",
      "Saved ./data/output3600.csv\n",
      "Saved ./data/output3601.csv\n",
      "Saved ./data/output3602.csv\n",
      "Saved ./data/output3603.csv\n",
      "Saved ./data/output3604.csv\n",
      "Saved ./data/output3605.csv\n",
      "Saved ./data/output3606.csv\n",
      "Saved ./data/output3607.csv\n",
      "Saved ./data/output3608.csv\n",
      "Saved ./data/output3609.csv\n",
      "Saved ./data/output3610.csv\n",
      "Saved ./data/output3611.csv\n",
      "Saved ./data/output3612.csv\n",
      "Saved ./data/output3613.csv\n",
      "Saved ./data/output3614.csv\n",
      "Saved ./data/output3615.csv\n",
      "Saved ./data/output3616.csv\n",
      "Saved ./data/output3617.csv\n",
      "Saved ./data/output3618.csv\n",
      "Saved ./data/output3619.csv\n",
      "Saved ./data/output3620.csv\n",
      "Saved ./data/output3621.csv\n",
      "Saved ./data/output3622.csv\n",
      "Saved ./data/output3623.csv\n",
      "Saved ./data/output3624.csv\n",
      "Saved ./data/output3625.csv\n",
      "Saved ./data/output3626.csv\n",
      "Saved ./data/output3627.csv\n",
      "Saved ./data/output3628.csv\n",
      "Saved ./data/output3629.csv\n",
      "Saved ./data/output3630.csv\n",
      "Saved ./data/output3631.csv\n",
      "Saved ./data/output3632.csv\n",
      "Saved ./data/output3633.csv\n",
      "Saved ./data/output3634.csv\n",
      "Saved ./data/output3635.csv\n",
      "Saved ./data/output3636.csv\n",
      "Saved ./data/output3637.csv\n",
      "Saved ./data/output3638.csv\n",
      "Saved ./data/output3639.csv\n",
      "Saved ./data/output3640.csv\n",
      "Saved ./data/output3641.csv\n",
      "Saved ./data/output3642.csv\n",
      "Saved ./data/output3643.csv\n",
      "Saved ./data/output3644.csv\n",
      "Saved ./data/output3645.csv\n",
      "Saved ./data/output3646.csv\n",
      "Saved ./data/output3647.csv\n",
      "Saved ./data/output3648.csv\n",
      "Saved ./data/output3649.csv\n",
      "Saved ./data/output3650.csv\n",
      "Saved ./data/output3651.csv\n",
      "Saved ./data/output3652.csv\n",
      "Saved ./data/output3653.csv\n",
      "Saved ./data/output3654.csv\n",
      "Saved ./data/output3655.csv\n",
      "Saved ./data/output3656.csv\n",
      "Saved ./data/output3657.csv\n",
      "Saved ./data/output3658.csv\n",
      "Saved ./data/output3659.csv\n",
      "Saved ./data/output3660.csv\n",
      "Saved ./data/output3661.csv\n",
      "Saved ./data/output3662.csv\n",
      "Saved ./data/output3663.csv\n",
      "Saved ./data/output3664.csv\n",
      "Saved ./data/output3665.csv\n",
      "Saved ./data/output3666.csv\n",
      "Saved ./data/output3667.csv\n",
      "Saved ./data/output3668.csv\n",
      "Saved ./data/output3669.csv\n",
      "Saved ./data/output3670.csv\n",
      "Saved ./data/output3671.csv\n",
      "Saved ./data/output3672.csv\n",
      "Saved ./data/output3673.csv\n",
      "Saved ./data/output3674.csv\n",
      "Saved ./data/output3675.csv\n",
      "Saved ./data/output3676.csv\n",
      "Saved ./data/output3677.csv\n",
      "Saved ./data/output3678.csv\n",
      "Saved ./data/output3679.csv\n",
      "Saved ./data/output3680.csv\n",
      "Saved ./data/output3681.csv\n",
      "Saved ./data/output3682.csv\n",
      "Saved ./data/output3683.csv\n",
      "Saved ./data/output3684.csv\n",
      "Saved ./data/output3685.csv\n",
      "Saved ./data/output3686.csv\n",
      "Saved ./data/output3687.csv\n",
      "Saved ./data/output3688.csv\n",
      "Saved ./data/output3689.csv\n",
      "Saved ./data/output3690.csv\n",
      "Saved ./data/output3691.csv\n",
      "Saved ./data/output3692.csv\n",
      "Saved ./data/output3693.csv\n",
      "Saved ./data/output3694.csv\n",
      "Saved ./data/output3695.csv\n",
      "Saved ./data/output3696.csv\n",
      "Saved ./data/output3697.csv\n",
      "Saved ./data/output3698.csv\n",
      "Saved ./data/output3699.csv\n",
      "Saved ./data/output3700.csv\n",
      "Saved ./data/output3701.csv\n",
      "Saved ./data/output3702.csv\n",
      "Saved ./data/output3703.csv\n",
      "Saved ./data/output3704.csv\n",
      "Saved ./data/output3705.csv\n",
      "Saved ./data/output3706.csv\n",
      "Saved ./data/output3707.csv\n",
      "Saved ./data/output3708.csv\n",
      "Saved ./data/output3709.csv\n",
      "Saved ./data/output3710.csv\n",
      "Saved ./data/output3711.csv\n",
      "Saved ./data/output3712.csv\n",
      "Saved ./data/output3713.csv\n",
      "Saved ./data/output3714.csv\n",
      "Saved ./data/output3715.csv\n",
      "Saved ./data/output3716.csv\n",
      "Saved ./data/output3717.csv\n",
      "Saved ./data/output3718.csv\n",
      "Saved ./data/output3719.csv\n",
      "Saved ./data/output3720.csv\n",
      "Saved ./data/output3721.csv\n",
      "Saved ./data/output3722.csv\n",
      "Saved ./data/output3723.csv\n",
      "Saved ./data/output3724.csv\n",
      "Saved ./data/output3725.csv\n",
      "Saved ./data/output3726.csv\n",
      "Saved ./data/output3727.csv\n",
      "Saved ./data/output3728.csv\n",
      "Saved ./data/output3729.csv\n",
      "Saved ./data/output3730.csv\n",
      "Saved ./data/output3731.csv\n",
      "Saved ./data/output3732.csv\n",
      "Saved ./data/output3733.csv\n",
      "Saved ./data/output3734.csv\n",
      "Saved ./data/output3735.csv\n",
      "Saved ./data/output3736.csv\n",
      "Saved ./data/output3737.csv\n",
      "Saved ./data/output3738.csv\n",
      "Saved ./data/output3739.csv\n",
      "Saved ./data/output3740.csv\n",
      "Saved ./data/output3741.csv\n",
      "Saved ./data/output3742.csv\n",
      "Saved ./data/output3743.csv\n",
      "Saved ./data/output3744.csv\n",
      "Saved ./data/output3745.csv\n",
      "Saved ./data/output3746.csv\n",
      "Saved ./data/output3747.csv\n",
      "Saved ./data/output3748.csv\n",
      "Saved ./data/output3749.csv\n",
      "Saved ./data/output3750.csv\n",
      "Saved ./data/output3751.csv\n",
      "Saved ./data/output3752.csv\n",
      "Saved ./data/output3753.csv\n",
      "Saved ./data/output3754.csv\n",
      "Saved ./data/output3755.csv\n",
      "Saved ./data/output3756.csv\n",
      "Saved ./data/output3757.csv\n",
      "Saved ./data/output3758.csv\n",
      "Saved ./data/output3759.csv\n",
      "Saved ./data/output3760.csv\n",
      "Saved ./data/output3761.csv\n",
      "Saved ./data/output3762.csv\n",
      "Saved ./data/output3763.csv\n",
      "Saved ./data/output3764.csv\n",
      "Saved ./data/output3765.csv\n",
      "Saved ./data/output3766.csv\n",
      "Saved ./data/output3767.csv\n",
      "Saved ./data/output3768.csv\n",
      "Saved ./data/output3769.csv\n",
      "Saved ./data/output3770.csv\n",
      "Saved ./data/output3771.csv\n",
      "Saved ./data/output3772.csv\n",
      "Saved ./data/output3773.csv\n",
      "Saved ./data/output3774.csv\n",
      "Saved ./data/output3775.csv\n",
      "Saved ./data/output3776.csv\n",
      "Saved ./data/output3777.csv\n",
      "Saved ./data/output3778.csv\n",
      "Saved ./data/output3779.csv\n",
      "Saved ./data/output3780.csv\n",
      "Saved ./data/output3781.csv\n",
      "Saved ./data/output3782.csv\n",
      "Saved ./data/output3783.csv\n",
      "Saved ./data/output3784.csv\n",
      "Saved ./data/output3785.csv\n",
      "Saved ./data/output3786.csv\n",
      "Saved ./data/output3787.csv\n",
      "Saved ./data/output3788.csv\n",
      "Saved ./data/output3789.csv\n",
      "Saved ./data/output3790.csv\n",
      "Saved ./data/output3791.csv\n",
      "Saved ./data/output3792.csv\n",
      "Saved ./data/output3793.csv\n",
      "Saved ./data/output3794.csv\n",
      "Saved ./data/output3795.csv\n",
      "Saved ./data/output3796.csv\n",
      "Saved ./data/output3797.csv\n",
      "Saved ./data/output3798.csv\n",
      "Saved ./data/output3799.csv\n",
      "Saved ./data/output3800.csv\n",
      "Saved ./data/output3801.csv\n",
      "Saved ./data/output3802.csv\n",
      "Saved ./data/output3803.csv\n",
      "Saved ./data/output3804.csv\n",
      "Saved ./data/output3805.csv\n",
      "Saved ./data/output3806.csv\n",
      "Saved ./data/output3807.csv\n",
      "Saved ./data/output3808.csv\n",
      "Saved ./data/output3809.csv\n",
      "Saved ./data/output3810.csv\n",
      "Saved ./data/output3811.csv\n",
      "Saved ./data/output3812.csv\n",
      "Saved ./data/output3813.csv\n",
      "Saved ./data/output3814.csv\n",
      "Saved ./data/output3815.csv\n",
      "Saved ./data/output3816.csv\n",
      "Saved ./data/output3817.csv\n",
      "Saved ./data/output3818.csv\n",
      "Saved ./data/output3819.csv\n",
      "Saved ./data/output3820.csv\n",
      "Saved ./data/output3821.csv\n",
      "Saved ./data/output3822.csv\n",
      "Saved ./data/output3823.csv\n",
      "Saved ./data/output3824.csv\n",
      "Saved ./data/output3825.csv\n",
      "Saved ./data/output3826.csv\n",
      "Saved ./data/output3827.csv\n",
      "Saved ./data/output3828.csv\n",
      "Saved ./data/output3829.csv\n",
      "Saved ./data/output3830.csv\n",
      "Saved ./data/output3831.csv\n",
      "Saved ./data/output3832.csv\n",
      "Saved ./data/output3833.csv\n",
      "Saved ./data/output3834.csv\n",
      "Saved ./data/output3835.csv\n",
      "Saved ./data/output3836.csv\n",
      "Saved ./data/output3837.csv\n",
      "Saved ./data/output3838.csv\n",
      "Saved ./data/output3839.csv\n",
      "Saved ./data/output3840.csv\n",
      "Saved ./data/output3841.csv\n",
      "Saved ./data/output3842.csv\n",
      "Saved ./data/output3843.csv\n",
      "Saved ./data/output3844.csv\n",
      "Saved ./data/output3845.csv\n",
      "Saved ./data/output3846.csv\n",
      "Saved ./data/output3847.csv\n",
      "Saved ./data/output3848.csv\n",
      "Saved ./data/output3849.csv\n",
      "Saved ./data/output3850.csv\n",
      "Saved ./data/output3851.csv\n",
      "Saved ./data/output3852.csv\n",
      "Saved ./data/output3853.csv\n",
      "Saved ./data/output3854.csv\n",
      "Saved ./data/output3855.csv\n",
      "Saved ./data/output3856.csv\n",
      "Saved ./data/output3857.csv\n",
      "Saved ./data/output3858.csv\n",
      "Saved ./data/output3859.csv\n",
      "Saved ./data/output3860.csv\n",
      "Saved ./data/output3861.csv\n",
      "Saved ./data/output3862.csv\n",
      "Saved ./data/output3863.csv\n",
      "Saved ./data/output3864.csv\n",
      "Saved ./data/output3865.csv\n",
      "Saved ./data/output3866.csv\n",
      "Saved ./data/output3867.csv\n",
      "Saved ./data/output3868.csv\n",
      "Saved ./data/output3869.csv\n",
      "Saved ./data/output3870.csv\n",
      "Saved ./data/output3871.csv\n",
      "Saved ./data/output3872.csv\n",
      "Saved ./data/output3873.csv\n",
      "Saved ./data/output3874.csv\n",
      "Saved ./data/output3875.csv\n",
      "Saved ./data/output3876.csv\n",
      "Saved ./data/output3877.csv\n",
      "Saved ./data/output3878.csv\n",
      "Saved ./data/output3879.csv\n",
      "Saved ./data/output3880.csv\n",
      "Saved ./data/output3881.csv\n",
      "Saved ./data/output3882.csv\n",
      "Saved ./data/output3883.csv\n",
      "Saved ./data/output3884.csv\n",
      "Saved ./data/output3885.csv\n",
      "Saved ./data/output3886.csv\n",
      "Saved ./data/output3887.csv\n",
      "Saved ./data/output3888.csv\n",
      "Saved ./data/output3889.csv\n",
      "Saved ./data/output3890.csv\n",
      "Saved ./data/output3891.csv\n",
      "Saved ./data/output3892.csv\n",
      "Saved ./data/output3893.csv\n",
      "Saved ./data/output3894.csv\n",
      "Saved ./data/output3895.csv\n",
      "Saved ./data/output3896.csv\n",
      "Saved ./data/output3897.csv\n",
      "Saved ./data/output3898.csv\n",
      "Saved ./data/output3899.csv\n",
      "Saved ./data/output3900.csv\n",
      "Saved ./data/output3901.csv\n",
      "Saved ./data/output3902.csv\n",
      "Saved ./data/output3903.csv\n",
      "Saved ./data/output3904.csv\n",
      "Saved ./data/output3905.csv\n",
      "Saved ./data/output3906.csv\n",
      "Saved ./data/output3907.csv\n",
      "Saved ./data/output3908.csv\n",
      "Saved ./data/output3909.csv\n",
      "Saved ./data/output3910.csv\n",
      "Saved ./data/output3911.csv\n",
      "Saved ./data/output3912.csv\n",
      "Saved ./data/output3913.csv\n",
      "Saved ./data/output3914.csv\n",
      "Saved ./data/output3915.csv\n",
      "Saved ./data/output3916.csv\n",
      "Saved ./data/output3917.csv\n",
      "Saved ./data/output3918.csv\n",
      "Saved ./data/output3919.csv\n",
      "Saved ./data/output3920.csv\n",
      "Saved ./data/output3921.csv\n",
      "Saved ./data/output3922.csv\n",
      "Saved ./data/output3923.csv\n",
      "Saved ./data/output3924.csv\n",
      "Saved ./data/output3925.csv\n",
      "Saved ./data/output3926.csv\n",
      "Saved ./data/output3927.csv\n",
      "Saved ./data/output3928.csv\n",
      "Saved ./data/output3929.csv\n",
      "Saved ./data/output3930.csv\n",
      "Saved ./data/output3931.csv\n",
      "Saved ./data/output3932.csv\n",
      "Saved ./data/output3933.csv\n",
      "Saved ./data/output3934.csv\n",
      "Saved ./data/output3935.csv\n",
      "Saved ./data/output3936.csv\n",
      "Saved ./data/output3937.csv\n",
      "Saved ./data/output3938.csv\n",
      "Saved ./data/output3939.csv\n",
      "Saved ./data/output3940.csv\n",
      "Saved ./data/output3941.csv\n",
      "Saved ./data/output3942.csv\n",
      "Saved ./data/output3943.csv\n",
      "Saved ./data/output3944.csv\n",
      "Saved ./data/output3945.csv\n",
      "Saved ./data/output3946.csv\n",
      "Saved ./data/output3947.csv\n",
      "Saved ./data/output3948.csv\n",
      "Saved ./data/output3949.csv\n",
      "Saved ./data/output3950.csv\n",
      "Saved ./data/output3951.csv\n",
      "Saved ./data/output3952.csv\n",
      "Saved ./data/output3953.csv\n",
      "Saved ./data/output3954.csv\n",
      "Saved ./data/output3955.csv\n",
      "Saved ./data/output3956.csv\n",
      "Saved ./data/output3957.csv\n",
      "Saved ./data/output3958.csv\n",
      "Saved ./data/output3959.csv\n",
      "Saved ./data/output3960.csv\n",
      "Saved ./data/output3961.csv\n",
      "Saved ./data/output3962.csv\n",
      "Saved ./data/output3963.csv\n",
      "Saved ./data/output3964.csv\n",
      "Saved ./data/output3965.csv\n",
      "Saved ./data/output3966.csv\n",
      "Saved ./data/output3967.csv\n",
      "Saved ./data/output3968.csv\n",
      "Saved ./data/output3969.csv\n",
      "Saved ./data/output3970.csv\n",
      "Saved ./data/output3971.csv\n",
      "Saved ./data/output3972.csv\n",
      "Saved ./data/output3973.csv\n",
      "Saved ./data/output3974.csv\n",
      "Saved ./data/output3975.csv\n",
      "Saved ./data/output3976.csv\n",
      "Saved ./data/output3977.csv\n",
      "Saved ./data/output3978.csv\n",
      "Saved ./data/output3979.csv\n",
      "Saved ./data/output3980.csv\n",
      "Saved ./data/output3981.csv\n",
      "Saved ./data/output3982.csv\n",
      "Saved ./data/output3983.csv\n",
      "Saved ./data/output3984.csv\n",
      "Saved ./data/output3985.csv\n",
      "Saved ./data/output3986.csv\n",
      "Saved ./data/output3987.csv\n",
      "Saved ./data/output3988.csv\n",
      "Saved ./data/output3989.csv\n",
      "Saved ./data/output3990.csv\n",
      "Saved ./data/output3991.csv\n",
      "Saved ./data/output3992.csv\n",
      "Saved ./data/output3993.csv\n",
      "Saved ./data/output3994.csv\n",
      "Saved ./data/output3995.csv\n",
      "Saved ./data/output3996.csv\n",
      "Saved ./data/output3997.csv\n",
      "Saved ./data/output3998.csv\n",
      "Saved ./data/output3999.csv\n"
     ]
    }
   ],
   "source": [
    "import pandas as pd\n",
    "import requests\n",
    "\n",
    "for id in my_list2:\n",
    "    match_data = get_match_data(id)  \n",
    "    if match_data is None:  # match_data가 None이면 스킵\n",
    "        print(f\"Skipping {id} due to missing match data\")\n",
    "        continue  \n",
    "\n",
    "    telemetry_url = get_telemetry_url(match_data)  \n",
    "    if not telemetry_url:  # URL이 None이면 스킵\n",
    "        print(f\"Skipping {id} due to missing telemetry URL\")\n",
    "        continue  \n",
    "\n",
    "    try:\n",
    "        telemetryData = get_telemetry_data(telemetry_url)\n",
    "        telemetry_df = pd.json_normalize(telemetryData)\n",
    "        \n",
    "        # 📁 CSV 저장 경로 설정 (디렉토리 없으면 생성)\n",
    "        save_path = f'./data/output{my_list.index(id)}.csv'\n",
    "        telemetry_df.to_csv(save_path, index=False)\n",
    "        print(f\"Saved {save_path}\")  # ✅ 저장 완료 로그 출력\n",
    "\n",
    "    except Exception as e:\n",
    "        print(f\"Error processing {id}: {e}\")  # ⚠️ 오류 발생 시 로그 출력\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 24,
   "metadata": {},
   "outputs": [],
   "source": [
    "import pandas as pd\n",
    "import sqlite3\n",
    "\n",
    "def make_df(csvUrl):\n",
    "    conn = sqlite3.connect(\":memory:\")\n",
    "      # 메모리 DB 생성 (혹은 파일 DB 사용 가능)\n",
    "    output = pd.read_csv(csvUrl)\n",
    "    output.to_sql(\"output\", conn, if_exists=\"replace\", index=False)\n",
    "\n",
    "    query_cte = \"\"\"\n",
    "    WITH name_cte AS (\n",
    "        SELECT DISTINCT \"character.name\" AS name\n",
    "        FROM output\n",
    "        WHERE \"character.teamId\" IN (\n",
    "            SELECT DISTINCT \"character.teamId\"\n",
    "            FROM output\n",
    "            WHERE \"character.accountId\" IN (\n",
    "                SELECT DISTINCT substr(teamKillers_AccountId, 3, 40) FROM output\n",
    "            )\n",
    "        )\n",
    "    )\n",
    "    \"\"\"\n",
    "\n",
    "    query1 = query_cte + \"\"\"\n",
    "    SELECT \"attacker.name\" AS name, COUNT(damage) AS damage_count, damageTypeCategory\n",
    "    FROM output\n",
    "    WHERE \"attacker.teamId\" = \"victim.teamId\"\n",
    "      AND \"attacker.name\" IN (SELECT name FROM name_cte)\n",
    "      AND \"victim.name\" IN (SELECT name FROM name_cte)\n",
    "      AND \"attacker.name\" != \"victim.name\"\n",
    "    GROUP BY \"attacker.name\", damageTypeCategory\n",
    "    \"\"\"\n",
    "\n",
    "\n",
    "    query2 = \"\"\"\n",
    "    select distinct \"character.name\" as name\n",
    "    from output\n",
    "    where \"character.teamId\" in (select distinct \"character.teamId\"\n",
    "    from output\n",
    "    where \"character.accountId\" in (select distinct substring(teamKillers_AccountId,3,40) from output))\n",
    "    \"\"\"\n",
    "\n",
    "    query3 = query_cte + \"\"\"\n",
    "    SELECT \"victim.name\" AS name, COUNT(*) AS victim_count\n",
    "    FROM output\n",
    "    WHERE _T = 'LogPlayerRevive'\n",
    "      AND \"victim.name\" IN (SELECT name FROM name_cte)\n",
    "      AND \"reviver.name\" IN (SELECT name FROM name_cte)\n",
    "    GROUP BY \"victim.name\"\n",
    "    \"\"\"\n",
    "\n",
    "    query4 = query_cte + \"\"\"\n",
    "    SELECT \"reviver.name\" AS name, COUNT(*) AS revive_count\n",
    "    FROM output\n",
    "    WHERE _T = 'LogPlayerRevive'\n",
    "      AND \"victim.name\" IN (SELECT name FROM name_cte)\n",
    "      AND \"reviver.name\" IN (SELECT name FROM name_cte)\n",
    "    GROUP BY \"reviver.name\"\n",
    "    \"\"\"\n",
    "\n",
    "    query5 = query_cte + \"\"\"\n",
    "    SELECT \"character.name\" AS name, COUNT(*) AS vehicle_count\n",
    "    FROM output\n",
    "    WHERE _T IN ('LogVehicleRide', 'LogVehicleLeave')\n",
    "      AND \"character.name\" IN (SELECT name FROM name_cte)\n",
    "    GROUP BY \"character.name\"\n",
    "    \"\"\"\n",
    "\n",
    "    # SQL 실행\n",
    "    result1 = pd.read_sql(query1, conn)\n",
    "    result2 = pd.read_sql(query2, conn)\n",
    "    result3 = pd.read_sql(query3, conn)\n",
    "    result4 = pd.read_sql(query4, conn)\n",
    "    result5 = pd.read_sql(query5, conn)\n",
    "    \n",
    "    result1 = result1.pivot_table(\n",
    "    index='name',\n",
    "    columns='damageTypeCategory',\n",
    "    values='damage_count',\n",
    "    fill_value=0\n",
    "    ).reset_index()\n",
    "\n",
    "    result1.columns.name = None \n",
    "\n",
    "    # 데이터 병합\n",
    "    merged = result2 \\\n",
    "        .merge(result1, on=\"name\", how=\"left\") \\\n",
    "        .merge(result3, on=\"name\", how=\"left\") \\\n",
    "        .merge(result4, on=\"name\", how=\"left\") \\\n",
    "        .merge(result5, on=\"name\", how=\"left\")\n",
    "\n",
    "    # 결측값(NaN) 0으로 채우기\n",
    "    # merged[[\"damage_count\", \"victim_count\", \"revive_count\", \"vehicle_count\"]] = \\\n",
    "    #     merged[[\"damage_count\", \"victim_count\", \"revive_count\", \"vehicle_count\"]].fillna(0)\n",
    "\n",
    "    return merged"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 41,
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,4,42,44,45,47,48,49,50,51,52,54,55,56,105,106,107,108,110,111,112,113,115,116,117,118,122,123,125,126,134,135,136,138,139,140,141,142,143,144,146,148,149,150,167,168,169,170,171,172,179,180,181,185,193,194,195,197,198,199,200,201,202,203,205,206,214,215,216,218,219,220,221,222,223,224,226,227,235,236,237,239,240,241,242,243,244,245,247,248,249,256,257,258,263,264,265,273,274,275,277,278,279,281,285,289,291,292,297,298,306,307,308,310,311,312,313,314) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "⚠️ 파일 output3001.csv 처리 중 오류 발생: Execution failed on sql '\n",
      "    WITH name_cte AS (\n",
      "        SELECT DISTINCT \"character.name\" AS name\n",
      "        FROM output\n",
      "        WHERE \"character.teamId\" IN (\n",
      "            SELECT DISTINCT \"character.teamId\"\n",
      "            FROM output\n",
      "            WHERE \"character.accountId\" IN (\n",
      "                SELECT DISTINCT substr(teamKillers_AccountId, 3, 40) FROM output\n",
      "            )\n",
      "        )\n",
      "    )\n",
      "    \n",
      "    SELECT \"attacker.name\" AS name, COUNT(damage) AS damage_count, damageTypeCategory\n",
      "    FROM output\n",
      "    WHERE \"attacker.teamId\" = \"victim.teamId\"\n",
      "      AND \"attacker.name\" IN (SELECT name FROM name_cte)\n",
      "      AND \"victim.name\" IN (SELECT name FROM name_cte)\n",
      "      AND \"attacker.name\" != \"victim.name\"\n",
      "    GROUP BY \"attacker.name\", damageTypeCategory\n",
      "    ': no such column: damage\n",
      "⚠️ 파일 output3002.csv 처리 중 오류 발생: Execution failed on sql '\n",
      "    WITH name_cte AS (\n",
      "        SELECT DISTINCT \"character.name\" AS name\n",
      "        FROM output\n",
      "        WHERE \"character.teamId\" IN (\n",
      "            SELECT DISTINCT \"character.teamId\"\n",
      "            FROM output\n",
      "            WHERE \"character.accountId\" IN (\n",
      "                SELECT DISTINCT substr(teamKillers_AccountId, 3, 40) FROM output\n",
      "            )\n",
      "        )\n",
      "    )\n",
      "    \n",
      "    SELECT \"attacker.name\" AS name, COUNT(damage) AS damage_count, damageTypeCategory\n",
      "    FROM output\n",
      "    WHERE \"attacker.teamId\" = \"victim.teamId\"\n",
      "      AND \"attacker.name\" IN (SELECT name FROM name_cte)\n",
      "      AND \"victim.name\" IN (SELECT name FROM name_cte)\n",
      "      AND \"attacker.name\" != \"victim.name\"\n",
      "    GROUP BY \"attacker.name\", damageTypeCategory\n",
      "    ': no such column: damage\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,23,26,27,28,29,31,32,33,35,36,37,44,45,46,87,129,132,133,135,136,137,141,142,143,144,147,149,151,152,153,170,171,172,173,182,183,184,188,196,197,198,200,201,202,203,204,205,206,208,209,217,218,219,221,222,223,224,225,226,227,229,230,238,239,240,242,243,244,245,246,247,248,250,251,252,259,260,261,266,268,272,274,279,280,288,289,290,292,293,294,296,297) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,23,42,44,45,47,48,49,50,51,52,54,55,56,58,59,60,67,68,69,106,107,116,138,139,140,141,144,145,147,148,149,166,167,168,169,178,179,180,184,192,193,194,196,197,198,199,200,201,202,204,205,213,214,215,217,218,219,220,221,222,223,225,226,234,235,236,238,239,240,241,242,243,244,246,255,256,257,265,268,269,277,278,279,281,282,283,285,289,293,297,298,299) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,23,42,44,45,49,50,51,52,54,55,56,58,59,60,67,68,69,141,142,143,144,146,149,150,151,152,169,170,171,172,181,182,183,187,195,196,197,199,200,201,202,203,204,205,207,208,216,217,218,220,221,222,223,224,225,226,228,229,237,238,239,241,242,243,244,245,246,247,249,258,259,260,266,267,271,274,275,283,284,285,287,288,289,292,297,298) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,59,60,61,62,64,65,66,68,69,70,77,78,79,110,112,113,114,115,117,118,119,120,121,123,124,125,133,134,135,137,138,139,141,142,144,145,146,163,164,165,166,175,176,177,181,182,183,184,186,187,195,196,197,199,200,201,202,203,204,205,207,208,216,217,218,220,221,222,223,224,225,226,228,237,238,239,244,245,246,247,255,256,257,259,260,261,266,268,269,277,278,279,281,282,283,287,291,294,296,297) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "⚠️ 파일 output3007.csv 처리 중 오류 발생: Execution failed on sql '\n",
      "    WITH name_cte AS (\n",
      "        SELECT DISTINCT \"character.name\" AS name\n",
      "        FROM output\n",
      "        WHERE \"character.teamId\" IN (\n",
      "            SELECT DISTINCT \"character.teamId\"\n",
      "            FROM output\n",
      "            WHERE \"character.accountId\" IN (\n",
      "                SELECT DISTINCT substr(teamKillers_AccountId, 3, 40) FROM output\n",
      "            )\n",
      "        )\n",
      "    )\n",
      "    \n",
      "    SELECT \"attacker.name\" AS name, COUNT(damage) AS damage_count, damageTypeCategory\n",
      "    FROM output\n",
      "    WHERE \"attacker.teamId\" = \"victim.teamId\"\n",
      "      AND \"attacker.name\" IN (SELECT name FROM name_cte)\n",
      "      AND \"victim.name\" IN (SELECT name FROM name_cte)\n",
      "      AND \"attacker.name\" != \"victim.name\"\n",
      "    GROUP BY \"attacker.name\", damageTypeCategory\n",
      "    ': no such column: damage\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,42,44,45,47,48,49,50,51,52,54,55,56,58,59,60,67,68,69,105,106,107,108,109,111,112,113,121,122,123,125,126,127,128,130,131,132,133,135,136,137,138,139,140,141,146,149,150,151,168,169,170,171,172,173,180,181,182,186,187,188,189,191,192,200,201,202,204,205,206,207,208,209,210,212,213,221,222,223,225,226,227,228,229,230,231,233,234,235,242,243,244,248,256,257,258,260,261,262,264,266,268,269,270,278,279,280,282,283,284,285,289,290,291,299,300,301,303,304,305,309,312,313) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,20,42,44,45,47,48,49,50,51,52,54,55,56,58,59,60,67,68,69,105,106,107,108,110,111,112,113,115,116,117,118,119,121,122,123,131,132,133,135,136,137,138,139,140,141,144,145,147,148,149,166,167,168,169,178,179,180,184,192,193,194,196,197,198,199,200,201,202,204,205,213,214,215,217,218,219,220,221,222,223,225,226,234,235,236,238,239,240,241,242,243,244,246,255,256,257,262,268,272,273,274,282,283,284,286,287,288,289,290,298,299,300,302,303,304,307,310,311) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "⚠️ 파일 output3010.csv 처리 중 오류 발생: Execution failed on sql '\n",
      "    WITH name_cte AS (\n",
      "        SELECT DISTINCT \"character.name\" AS name\n",
      "        FROM output\n",
      "        WHERE \"character.teamId\" IN (\n",
      "            SELECT DISTINCT \"character.teamId\"\n",
      "            FROM output\n",
      "            WHERE \"character.accountId\" IN (\n",
      "                SELECT DISTINCT substr(teamKillers_AccountId, 3, 40) FROM output\n",
      "            )\n",
      "        )\n",
      "    )\n",
      "    \n",
      "    SELECT \"attacker.name\" AS name, COUNT(damage) AS damage_count, damageTypeCategory\n",
      "    FROM output\n",
      "    WHERE \"attacker.teamId\" = \"victim.teamId\"\n",
      "      AND \"attacker.name\" IN (SELECT name FROM name_cte)\n",
      "      AND \"victim.name\" IN (SELECT name FROM name_cte)\n",
      "      AND \"attacker.name\" != \"victim.name\"\n",
      "    GROUP BY \"attacker.name\", damageTypeCategory\n",
      "    ': no such column: damage\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,4,42,44,45,47,48,49,50,51,52,53,54,55,57,58,59,61,62,63,70,71,72,108,112,114,115,116,117,119,120,121,122,123,125,126,134,135,136,138,139,140,142,143,144,145,146,148,150,151,152,169,170,171,172,173,174,181,182,183,187,195,196,197,199,200,201,202,203,204,205,207,208,216,217,218,220,221,222,223,224,225,226,228,229,237,238,239,241,242,243,244,245,246,247,249,250,251,258,259,260,265,267,268,276,277,278,280,281,282,284,285,293,294,295,297,298,299,300,304,309,313,314) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,4,24,25,26,27,29,30,31,88,129,132,135,136,137,138,139,143,147,149,150) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "⚠️ 파일 output3012.csv 처리 중 오류 발생: Execution failed on sql '\n",
      "    WITH name_cte AS (\n",
      "        SELECT DISTINCT \"character.name\" AS name\n",
      "        FROM output\n",
      "        WHERE \"character.teamId\" IN (\n",
      "            SELECT DISTINCT \"character.teamId\"\n",
      "            FROM output\n",
      "            WHERE \"character.accountId\" IN (\n",
      "                SELECT DISTINCT substr(teamKillers_AccountId, 3, 40) FROM output\n",
      "            )\n",
      "        )\n",
      "    )\n",
      "    \n",
      "    SELECT \"attacker.name\" AS name, COUNT(damage) AS damage_count, damageTypeCategory\n",
      "    FROM output\n",
      "    WHERE \"attacker.teamId\" = \"victim.teamId\"\n",
      "      AND \"attacker.name\" IN (SELECT name FROM name_cte)\n",
      "      AND \"victim.name\" IN (SELECT name FROM name_cte)\n",
      "      AND \"attacker.name\" != \"victim.name\"\n",
      "    GROUP BY \"attacker.name\", damageTypeCategory\n",
      "    ': no such column: teamKillers_AccountId\n",
      "⚠️ 파일 output3013.csv 처리 중 오류 발생: Execution failed on sql '\n",
      "    WITH name_cte AS (\n",
      "        SELECT DISTINCT \"character.name\" AS name\n",
      "        FROM output\n",
      "        WHERE \"character.teamId\" IN (\n",
      "            SELECT DISTINCT \"character.teamId\"\n",
      "            FROM output\n",
      "            WHERE \"character.accountId\" IN (\n",
      "                SELECT DISTINCT substr(teamKillers_AccountId, 3, 40) FROM output\n",
      "            )\n",
      "        )\n",
      "    )\n",
      "    \n",
      "    SELECT \"attacker.name\" AS name, COUNT(damage) AS damage_count, damageTypeCategory\n",
      "    FROM output\n",
      "    WHERE \"attacker.teamId\" = \"victim.teamId\"\n",
      "      AND \"attacker.name\" IN (SELECT name FROM name_cte)\n",
      "      AND \"victim.name\" IN (SELECT name FROM name_cte)\n",
      "      AND \"attacker.name\" != \"victim.name\"\n",
      "    GROUP BY \"attacker.name\", damageTypeCategory\n",
      "    ': no such column: damage\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,17,38,48,49,52,53,54,55,57,58,59,127,169,170,183,191,192,193,195,196,197,200,262,266,268,269,277,278,279,281,282,283,285,289,294,296,297) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,4,49,50,51,52,54,55,56,58,59,60,67,68,69,217,218,239,246,248,249,252,256,258,264,265) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,4,17,38,42,44,45,47,48,49,50,51,52,53,54,55,57,58,59,61,62,63,70,71,72,108,110,111,112,113,115,116,117,118,119,121,122,123,131,132,133,134,135,136,137,138,139,140,141,143,149,150,151,152,169,170,171,172,173,174,181,182,183,187,195,196,197,199,200,201,202,203,204,205,207,208,216,217,218,220,221,222,223,224,225,226,228,229,237,238,239,241,242,243,244,245,246,247,249,250,251,258,259,260,265,267,268,276,277,278,279,280,281,282,284,288,291,292,300,301,302,304,305,306,307,309,312,313) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,4,42,44,45,47,48,49,50,51,52,53,54,55,57,58,59,61,62,63,70,71,72,108,110,111,112,113,115,116,117,118,119,121,122,123,131,132,133,135,136,137,141,142,143,144,146,148,149,150,167,168,169,170,171,172,179,180,181,185,193,194,195,197,198,199,200,201,202,203,205,206,214,215,216,218,219,220,221,222,223,224,226,227,235,236,237,239,240,241,242,243,244,245,247,256,257,258,264,266,268,269,277,278,279,281,282,283,284,285,289,293,298,299) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,59,60,61,62,64,65,66,68,69,70,77,78,79,110,111,113,114,115,123,124,125,127,128,129,130,132,133,134,135,137,138,139,141,142,144,145,146,163,164,165,166,167,168,175,176,177,181,182,184,186,187,195,196,197,199,200,201,202,203,204,205,207,208,216,217,218,220,221,222,223,224,225,226,228,237,238,239,244,250,254,258,260,261,269,270,271,273,274,275,277,279,280) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "⚠️ 파일 output3019.csv 처리 중 오류 발생: Execution failed on sql '\n",
      "    WITH name_cte AS (\n",
      "        SELECT DISTINCT \"character.name\" AS name\n",
      "        FROM output\n",
      "        WHERE \"character.teamId\" IN (\n",
      "            SELECT DISTINCT \"character.teamId\"\n",
      "            FROM output\n",
      "            WHERE \"character.accountId\" IN (\n",
      "                SELECT DISTINCT substr(teamKillers_AccountId, 3, 40) FROM output\n",
      "            )\n",
      "        )\n",
      "    )\n",
      "    \n",
      "    SELECT \"attacker.name\" AS name, COUNT(damage) AS damage_count, damageTypeCategory\n",
      "    FROM output\n",
      "    WHERE \"attacker.teamId\" = \"victim.teamId\"\n",
      "      AND \"attacker.name\" IN (SELECT name FROM name_cte)\n",
      "      AND \"victim.name\" IN (SELECT name FROM name_cte)\n",
      "      AND \"attacker.name\" != \"victim.name\"\n",
      "    GROUP BY \"attacker.name\", damageTypeCategory\n",
      "    ': no such column: damage\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,17,24,25,44,46,47,49,50,51,52,53,54,55,57,58,59,61,62,63,70,71,72,108,110,111,112,113,115,116,117,118,122,123,125,126,134,135,136,137,138,139,140,141,142,143,144,146,148,149,150,167,168,169,170,171,172,179,180,181,185,193,194,195,197,198,199,200,201,202,203,205,206,214,215,216,218,219,220,221,222,223,224,226,227,235,236,237,239,240,241,242,243,244,245,247,248,249,256,257,258,264,267,268,269,277,278,279,280,281,282,283,288,289,293,296,298,299,307,308,309,311,312,313,314,315) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,20,42,44,45,52,53,54,55,57,58,59,116,119,138,139,140,141,143,145,146,147,164,165,166,167,176,177,178,182,190,191,192,194,195,196,197,198,199,200,202,203,211,212,213,215,216,217,218,219,220,221,223,224,232,233,234,236,237,238,239,240,241,242,244,245,246,253,254,255,260,264,268,269,277,278,279,281,282,283,284,288,290,292,293,301,302,303,305,306,307,313,314) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "⚠️ 파일 output3022.csv 처리 중 오류 발생: Execution failed on sql '\n",
      "    WITH name_cte AS (\n",
      "        SELECT DISTINCT \"character.name\" AS name\n",
      "        FROM output\n",
      "        WHERE \"character.teamId\" IN (\n",
      "            SELECT DISTINCT \"character.teamId\"\n",
      "            FROM output\n",
      "            WHERE \"character.accountId\" IN (\n",
      "                SELECT DISTINCT substr(teamKillers_AccountId, 3, 40) FROM output\n",
      "            )\n",
      "        )\n",
      "    )\n",
      "    \n",
      "    SELECT \"attacker.name\" AS name, COUNT(damage) AS damage_count, damageTypeCategory\n",
      "    FROM output\n",
      "    WHERE \"attacker.teamId\" = \"victim.teamId\"\n",
      "      AND \"attacker.name\" IN (SELECT name FROM name_cte)\n",
      "      AND \"victim.name\" IN (SELECT name FROM name_cte)\n",
      "      AND \"attacker.name\" != \"victim.name\"\n",
      "    GROUP BY \"attacker.name\", damageTypeCategory\n",
      "    ': no such column: damage\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,4,17,38,42,44,45,47,48,49,50,51,52,54,55,56,58,59,60,67,68,69,105,106,107,108,110,111,112,113,115,116,117,118,119,121,122,123,131,132,133,134,135,136,137,141,143,144,145,146,148,149,150,167,168,169,170,171,172,179,180,181,185,193,194,195,196,197,198,199,200,201,202,203,205,206,214,215,216,217,218,219,220,221,222,223,224,226,227,235,236,237,238,239,240,241,242,243,244,245,247,248,249,256,257,258,263,265,266,268,269,277,278,279,281,282,283,285,289,291,292,300,301,302,304,305,306,309,312,313) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "⚠️ 파일 output3024.csv 처리 중 오류 발생: Execution failed on sql '\n",
      "    WITH name_cte AS (\n",
      "        SELECT DISTINCT \"character.name\" AS name\n",
      "        FROM output\n",
      "        WHERE \"character.teamId\" IN (\n",
      "            SELECT DISTINCT \"character.teamId\"\n",
      "            FROM output\n",
      "            WHERE \"character.accountId\" IN (\n",
      "                SELECT DISTINCT substr(teamKillers_AccountId, 3, 40) FROM output\n",
      "            )\n",
      "        )\n",
      "    )\n",
      "    \n",
      "    SELECT \"attacker.name\" AS name, COUNT(damage) AS damage_count, damageTypeCategory\n",
      "    FROM output\n",
      "    WHERE \"attacker.teamId\" = \"victim.teamId\"\n",
      "      AND \"attacker.name\" IN (SELECT name FROM name_cte)\n",
      "      AND \"victim.name\" IN (SELECT name FROM name_cte)\n",
      "      AND \"attacker.name\" != \"victim.name\"\n",
      "    GROUP BY \"attacker.name\", damageTypeCategory\n",
      "    ': no such column: damage\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,4,42,44,45,47,48,49,50,51,52,53,54,55,57,58,59,61,108,110,111,112,113,115,116,117,118,119,121,122,123,131,132,133,135,136,137,138,139,140,141,147,148,151,152,153,170,171,172,173,174,175,182,183,184,188,196,197,198,200,201,202,203,204,205,206,208,209,217,218,219,221,222,223,224,225,226,227,229,230,238,239,240,242,243,244,245,246,247,248,250,251,252,259,260,261,266,267,268,276,277,278,280,281,282,285,289,294,297,298,299) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "⚠️ 파일 output3026.csv 처리 중 오류 발생: Execution failed on sql '\n",
      "    WITH name_cte AS (\n",
      "        SELECT DISTINCT \"character.name\" AS name\n",
      "        FROM output\n",
      "        WHERE \"character.teamId\" IN (\n",
      "            SELECT DISTINCT \"character.teamId\"\n",
      "            FROM output\n",
      "            WHERE \"character.accountId\" IN (\n",
      "                SELECT DISTINCT substr(teamKillers_AccountId, 3, 40) FROM output\n",
      "            )\n",
      "        )\n",
      "    )\n",
      "    \n",
      "    SELECT \"attacker.name\" AS name, COUNT(damage) AS damage_count, damageTypeCategory\n",
      "    FROM output\n",
      "    WHERE \"attacker.teamId\" = \"victim.teamId\"\n",
      "      AND \"attacker.name\" IN (SELECT name FROM name_cte)\n",
      "      AND \"victim.name\" IN (SELECT name FROM name_cte)\n",
      "      AND \"attacker.name\" != \"victim.name\"\n",
      "    GROUP BY \"attacker.name\", damageTypeCategory\n",
      "    ': no such column: damage\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,4,17,38,52,53,54,55,57,58,59,124,148,149,150,167,168,169,170,171,172,179,180,181,185,193,194,195,197,198,199,200,201,202,203,205,206,214,215,216,218,219,220,221,222,223,224,226,227,235,236,237,239,240,241,242,243,244,245,247,256,257,258,263,265,268,269,277,278,279,281,282,283,284,288,289,290,298,299,300,302,303,304,308,310,311,312) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,4,17,24,25,26,52,53,54,55,57,58,59,61,62,63,70,71,72,148,149,150,167,168,169,170,171,172,179,180,181,185,193,194,195,197,198,199,200,201,202,203,205,206,214,215,216,218,219,220,221,222,223,224,226,227,235,236,237,239,240,241,242,243,244,245,247,248,249,256,257,258,263,265,267,268,276,277,278,280,281,282,286,290,294,295,303,304,305,307,308,309,311,312,313) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,4,17,38,42,44,45,47,48,49,50,51,52,54,55,56,58,59,60,67,68,69,105,106,107,108,112,114,115,116,117,119,120,121,122,123,125,126,134,135,136,137,138,139,140,141,142,143,144,147,148,149,150,167,168,169,170,171,172,179,180,181,185,193,194,195,196,197,198,199,200,201,202,203,205,206,214,215,216,217,218,219,220,221,222,223,224,226,227,235,236,237,238,239,240,241,242,243,244,245,247,248,249,256,257,258,262,265,267,268,276,277,278,280,281,282,285,289,291,292,293,301,302,303,305,306,307,311,312,313) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,4,17,26,27,35,36,37,38,39,40,41,42,44,45,46,47,48,49,50,51,52,53,54,55,57,58,59,61,62,63,70,71,72,108,112,113,115,116,124,125,126,127,128,129,130,131,133,134,135,136,138,139,140,141,142,143,144,146,148,149,150,167,168,169,170,171,172,179,180,181,185,193,194,195,196,197,198,199,200,201,202,203,205,206,214,215,216,217,218,219,220,221,222,223,224,226,227,235,236,237,238,239,240,241,242,243,244,245,247,248,249,256,257,258,263,265,268,269,277,278,279,281,282,283,285,289,292,294,295,303,304,305,307,308,309,311,312) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,20,26,42,44,45,46,49,50,51,52,54,55,56,58,59,60,67,68,69,113,115,116,117,138,139,140,141,144,149,151,152,153,170,171,172,173,182,183,184,188,196,197,198,200,201,202,203,204,205,206,208,209,217,218,219,221,222,223,224,225,226,227,229,230,238,239,240,242,243,244,245,246,247,248,250,259,260,261,266,267,269,270,278,279,280,282,283,284,285,289,293,294) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,4,52,53,54,55,56,59,60,61,62,64,65,66,68,110,111,113,114,115,123,124,125,127,128,129,130,131,132,133,137,139,140,141,142,144,145,146,147,148,149,166,167,168,169,178,179,180,184,192,193,194,196,197,198,199,200,201,202,204,205,213,214,215,217,218,219,220,221,222,223,225,226,234,235,236,238,239,240,241,242,243,244,246,255,256,257,264,266,271,272,280,281,282,284,285,286,287,291,293,294,302,303,304,306,307,308,311,313,314,315) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,4,49,50,51,52,53,54,55,57,58,59,118,144,145,146,147,148,150,151,152,169,170,171,172,173,174,181,182,183,187,195,196,197,199,200,201,202,203,204,205,207,208,216,217,218,220,221,222,223,224,225,226,228,229,237,238,239,241,242,243,244,245,246,247,249,258,259,260,265,267,268,276,277,278,280,281,282,284,288,290,291,293,294,302,303,304,306,307,308,311,312) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,20,26,27,28,29,31,32,33,35,36,37,44,45,46,93,96,97,99,100,101,109,110,111,113,114,115,116,124,125,126,128,129,130,132,133,135,136,137,142,143,145,146,147,164,165,166,167,176,177,178,182,183,184,185,187,188,196,197,198,200,201,202,203,204,205,206,208,209,217,218,219,221,222,223,224,225,226,227,229,230,231,238,239,240,244,246,247,249,250,258,259,260,262,263,264,266,268,272,277,278,279,287,288,289,291,292,293,295,296) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "⚠️ 파일 output3035.csv 처리 중 오류 발생: Execution failed on sql '\n",
      "    WITH name_cte AS (\n",
      "        SELECT DISTINCT \"character.name\" AS name\n",
      "        FROM output\n",
      "        WHERE \"character.teamId\" IN (\n",
      "            SELECT DISTINCT \"character.teamId\"\n",
      "            FROM output\n",
      "            WHERE \"character.accountId\" IN (\n",
      "                SELECT DISTINCT substr(teamKillers_AccountId, 3, 40) FROM output\n",
      "            )\n",
      "        )\n",
      "    )\n",
      "    \n",
      "    SELECT \"attacker.name\" AS name, COUNT(damage) AS damage_count, damageTypeCategory\n",
      "    FROM output\n",
      "    WHERE \"attacker.teamId\" = \"victim.teamId\"\n",
      "      AND \"attacker.name\" IN (SELECT name FROM name_cte)\n",
      "      AND \"victim.name\" IN (SELECT name FROM name_cte)\n",
      "      AND \"attacker.name\" != \"victim.name\"\n",
      "    GROUP BY \"attacker.name\", damageTypeCategory\n",
      "    ': no such column: damage\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,4,42,44,45,52,53,54,55,57,58,59,61,62,63,70,71,72,108,110,111,112,113,115,116,117,118,122,123,125,126,134,135,136,138,139,140,141,143,144,145,146,149,150,151,152,169,170,171,172,173,174,181,182,183,187,195,196,197,199,200,201,202,203,204,205,207,208,216,217,218,220,221,222,223,224,225,226,228,229,237,238,239,241,242,243,244,245,246,247,249,250,251,258,259,260,266,271,272,280,281,282,284,285,286,287,291,295,296,297,305,306,307,309,310,311,313,314) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,4,24,25,44,46,47,49,50,51,52,53,54,55,57,58,59,61,62,63,70,71,72,108,110,111,112,113,115,116,117,118,119,121,122,123,131,132,133,135,136,137,138,143,144,145,146,148,149,150,167,168,169,170,171,172,179,180,181,185,193,194,195,197,198,199,200,201,202,203,205,206,214,215,216,218,219,220,221,222,223,224,226,227,235,236,237,239,240,241,242,243,244,245,247,256,257,258,264,267,268,269,277,278,279,281,282,283,284,288,290,291,299,300,301,303,304,305,308,313,314) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,20,49,50,51,52,54,55,56,58,59,60,67,68,69,133,135,136,137,138,139,140,141,147,149,152,153,154,171,172,173,174,175,176,183,184,185,189,190,191,192,194,195,203,204,205,207,208,209,210,211,212,213,215,216,224,225,226,228,229,230,231,232,233,234,236,237,238,245,246,247,251,259,260,261,263,264,265,267,268,269,277,278,279,281,282,283,284,288,290,291,299,300,301,303,304,305,307,311,312) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,4,42,44,45,47,48,49,50,51,52,54,55,56,58,59,60,67,68,69,105,106,107,108,112,114,115,116,117,119,120,121,122,123,125,126,134,135,136,138,139,140,141,142,143,144,146,147,148,165,166,167,168,169,170,177,178,179,183,191,192,193,195,196,197,198,199,200,201,203,204,212,213,214,216,217,218,219,220,221,222,224,225,233,234,235,237,238,239,240,241,242,243,245,246,247,254,255,256,261,262,265,268,269,270,278,279,280,282,283,284,288,292,297,298,299,307,308,309,311,312,313,314,315) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,17,49,50,51,52,53,54,55,57,58,59,61,62,63,70,71,72,141,144,186,249,250,258,259,260,262,263,264,267,268,269,277,278,279,281,282,283,285,286,290,295,296,297) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,44,46,47,52,53,54,55,57,58,59,108,110,111,112,113,115,116,117,118,119,121,122,123,131,132,133,135,136,137,138,139,140,141,143,148,149,150,167,168,169,170,171,172,179,180,181,185,193,194,195,197,198,199,200,201,202,203,205,206,214,215,216,218,219,220,221,222,223,224,226,227,235,236,237,239,240,241,242,243,244,245,247,256,257,258,263,265,271,272,280,281,282,284,285,286,288,289,297,298,299,301,302,303,304,305,309,311,314,315) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,4,42,44,45,47,48,49,50,51,52,53,54,55,57,58,59,108,110,111,112,113,115,116,117,118,119,121,122,123,131,132,133,135,136,137,138,139,140,141,143,145,146,147,164,165,166,167,168,169,176,177,178,182,190,191,192,194,195,196,197,198,199,200,202,203,211,212,213,215,216,217,218,219,220,221,223,224,232,233,234,236,237,238,239,240,241,242,244,245,246,253,254,255,260,267,268,269,277,278,279,281,282,283,287,291,293,297,298,306,307,308,310,311,312,313,314,315) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,4,42,44,45,47,48,49,50,51,52,54,55,56,115,116,117,118,122,123,125,126,134,135,136,138,139,140,141,144,145,147,148,149,166,167,168,169,170,171,178,179,180,184,185,186,187,189,190,198,199,200,202,203,204,205,206,207,208,210,211,219,220,221,223,224,225,226,227,228,229,231,232,233,240,241,242,247,249,250,251,259,260,261,263,264,265,267,268,269,277,278,279,281,282,283,284,288,290,295,296) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,20,26,27,28,29,31,32,33,35,123,125,126,129,141,146,148,149,150,167,168,169,170,171,172,179,180,181,185,193,194,195,197,198,199,200,201,202,203,205,206,214,215,216,218,219,220,221,222,223,224,226,227,235,236,237,239,240,241,242,243,244,245,247,248,249,256,257,258,263,265,268,272,274,277,278,286,287,288,290,291,292,295,296) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,4,5,6,7,9,10,11,61,63,64,65,66,68,69,70,73,74,82,83,84,86,87,88,89,91,92,93,94,95,97,98,99,107,108,109,111,112,113,114,117,118,125,126,127,132,135,136,137,141,142,146,147) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "⚠️ 파일 output3045.csv 처리 중 오류 발생: Execution failed on sql '\n",
      "    WITH name_cte AS (\n",
      "        SELECT DISTINCT \"character.name\" AS name\n",
      "        FROM output\n",
      "        WHERE \"character.teamId\" IN (\n",
      "            SELECT DISTINCT \"character.teamId\"\n",
      "            FROM output\n",
      "            WHERE \"character.accountId\" IN (\n",
      "                SELECT DISTINCT substr(teamKillers_AccountId, 3, 40) FROM output\n",
      "            )\n",
      "        )\n",
      "    )\n",
      "    \n",
      "    SELECT \"attacker.name\" AS name, COUNT(damage) AS damage_count, damageTypeCategory\n",
      "    FROM output\n",
      "    WHERE \"attacker.teamId\" = \"victim.teamId\"\n",
      "      AND \"attacker.name\" IN (SELECT name FROM name_cte)\n",
      "      AND \"victim.name\" IN (SELECT name FROM name_cte)\n",
      "      AND \"attacker.name\" != \"victim.name\"\n",
      "    GROUP BY \"attacker.name\", damageTypeCategory\n",
      "    ': no such column: teamKillers_AccountId\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,4,17,44,46,47,49,50,51,52,54,55,56,58,105,106,107,108,109,111,112,113,121,122,123,124,125,126,127,128,130,131,132,133,135,136,137,142,143,145,146,147,148,150,151,152,169,170,171,172,173,174,181,182,183,187,195,196,197,199,200,201,202,203,204,205,207,208,216,217,218,220,221,222,223,224,225,226,228,229,237,238,239,241,242,243,244,245,246,247,249,250,251,258,259,260,267,268,269,277,278,279,281,282,283,284,288,291,292,296,297,305,306,307,309,310,311,312,313) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,4,42,44,45,47,48,49,50,51,52,53,54,55,57,58,59,61,62,63,70,71,72,108,109,111,112,113,121,122,123,125,126,127,129,130,132,133,134,151,152,153,154,155,156,163,164,165,169,170,171,172,174,175,183,184,185,187,188,189,190,191,192,193,195,196,204,205,206,208,209,210,211,212,213,214,216,225,226,227,231,233,234,235,236,238,239,240,242,246,247,248,250,258,259,260,262,263,264,266,268,269,277,278,279,281,282,283,285,289,291,292,300,301,302,304,305,306,308,311,312) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,4,42,44,45,47,48,49,50,51,52,53,54,55,57,58,59,61,62,63,70,71,72,108,110,111,112,113,115,116,117,118,122,123,125,126,134,135,136,138,139,140,141,143,144,145,146,148,149,150,167,168,169,170,171,172,179,180,181,185,193,194,195,197,198,199,200,201,202,203,205,206,214,215,216,218,219,220,221,222,223,224,226,227,235,236,237,239,240,241,242,243,244,245,247,248,249,256,257,258,263,266,268,269,277,278,279,281,282,283,284,288,290,292,293,301,302,303,305,306,307,311,312) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,4,24,25,44,46,47,49,50,51,52,53,54,55,57,58,59,61,107,108,110,111,112,120,121,122,124,125,126,131,133,134,135,136,138,139,140,141,142,143,144,146,148,149,150,167,168,169,170,171,172,179,180,181,185,193,194,195,197,198,199,200,201,202,203,205,206,214,215,216,218,219,220,221,222,223,224,226,227,235,236,237,239,240,241,242,243,244,245,247,248,249,256,257,258,264,266,267,268,276,277,278,280,281,282,285,289,291,295,298,299) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,4,52,53,54,56,57,58,59,60,61,62,64,65,66,68,69,70,77,78,79,110,111,113,114,115,123,124,125,127,128,129,130,132,133,134,135,137,138,139,143,144,145,146,149,150,151,168,169,170,171,180,181,182,186,194,195,196,198,199,200,201,202,203,204,206,207,215,216,217,219,220,221,222,223,224,225,227,228,236,237,238,240,241,242,243,244,245,246,248,257,258,259,265,267,268,269,277,278,279,281,282,283,287,291,292,293,301,302,303,305,306,307,311,312,314,315) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,42,44,45,47,48,49,50,51,52,53,54,55,57,58,59,61,62,63,70,71,72,107,108,110,111,112,120,121,122,124,125,126,128,130,131,132,133,135,136,137,143,146,147,149,150,151,168,169,170,171,172,173,180,181,182,186,187,188,189,191,192,200,201,202,204,205,206,207,208,209,210,212,213,221,222,223,225,226,227,228,229,230,231,233,234,235,242,243,244,249,251,254,258,260,264,265,266,274,275,276,278,279,280,281,282,290,291,292,294,295,296,297,298) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "⚠️ 파일 output3052.csv 처리 중 오류 발생: Execution failed on sql '\n",
      "    WITH name_cte AS (\n",
      "        SELECT DISTINCT \"character.name\" AS name\n",
      "        FROM output\n",
      "        WHERE \"character.teamId\" IN (\n",
      "            SELECT DISTINCT \"character.teamId\"\n",
      "            FROM output\n",
      "            WHERE \"character.accountId\" IN (\n",
      "                SELECT DISTINCT substr(teamKillers_AccountId, 3, 40) FROM output\n",
      "            )\n",
      "        )\n",
      "    )\n",
      "    \n",
      "    SELECT \"attacker.name\" AS name, COUNT(damage) AS damage_count, damageTypeCategory\n",
      "    FROM output\n",
      "    WHERE \"attacker.teamId\" = \"victim.teamId\"\n",
      "      AND \"attacker.name\" IN (SELECT name FROM name_cte)\n",
      "      AND \"victim.name\" IN (SELECT name FROM name_cte)\n",
      "      AND \"attacker.name\" != \"victim.name\"\n",
      "    GROUP BY \"attacker.name\", damageTypeCategory\n",
      "    ': no such column: damage\n",
      "⚠️ 파일 output3053.csv 처리 중 오류 발생: Execution failed on sql '\n",
      "    WITH name_cte AS (\n",
      "        SELECT DISTINCT \"character.name\" AS name\n",
      "        FROM output\n",
      "        WHERE \"character.teamId\" IN (\n",
      "            SELECT DISTINCT \"character.teamId\"\n",
      "            FROM output\n",
      "            WHERE \"character.accountId\" IN (\n",
      "                SELECT DISTINCT substr(teamKillers_AccountId, 3, 40) FROM output\n",
      "            )\n",
      "        )\n",
      "    )\n",
      "    \n",
      "    SELECT \"attacker.name\" AS name, COUNT(damage) AS damage_count, damageTypeCategory\n",
      "    FROM output\n",
      "    WHERE \"attacker.teamId\" = \"victim.teamId\"\n",
      "      AND \"attacker.name\" IN (SELECT name FROM name_cte)\n",
      "      AND \"victim.name\" IN (SELECT name FROM name_cte)\n",
      "      AND \"attacker.name\" != \"victim.name\"\n",
      "    GROUP BY \"attacker.name\", damageTypeCategory\n",
      "    ': no such column: damage\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,4,17,40,44,46,47,52,53,54,55,57,58,59,61,62,63,70,71,72,108,109,111,112,113,121,122,123,124,125,126,127,128,130,131,132,133,135,136,137,141,142,143,144,146,149,150,151,152,169,170,171,172,173,174,181,182,183,187,195,196,197,199,200,201,202,203,204,205,207,208,216,217,218,219,220,221,222,223,224,225,226,228,229,237,238,239,241,242,243,244,245,246,247,249,250,251,258,259,260,266,268,269,277,278,279,280,281,282,283,285,289,293,294) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,23,42,44,45,47,48,49,50,52,53,54,56,57,58,65,66,67,103,104,105,107,134,136,139,141,142,143,144,145,162,163,164,165,174,175,176,180,188,189,190,192,193,194,195,196,197,198,200,201,209,210,211,213,214,215,216,217,218,219,221,222,230,231,232,234,235,236,237,238,239,240,242,243,244,251,252,253,258,259,263,267,268,276,277,278,280,281,282,285,289,293,295,296) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,52,53,56,57,58,59,61,62,63,65,66,67,74,75,76,107,108,109,110,112,113,114,115,117,118,119,120,121,123,124,125,133,134,135,137,138,139,140,141,142,143,145,146,147,164,165,166,167,168,169,176,177,178,182,190,191,192,194,195,196,197,198,199,200,202,203,211,212,213,215,216,217,218,219,220,221,223,224,232,233,234,236,237,238,239,240,241,242,244,253,254,255,260,262,268,269,277,278,279,281,282,283,285,289,293,294,302,303,304,306,307,308,311,312,313) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "⚠️ 파일 output3057.csv 처리 중 오류 발생: Execution failed on sql '\n",
      "    WITH name_cte AS (\n",
      "        SELECT DISTINCT \"character.name\" AS name\n",
      "        FROM output\n",
      "        WHERE \"character.teamId\" IN (\n",
      "            SELECT DISTINCT \"character.teamId\"\n",
      "            FROM output\n",
      "            WHERE \"character.accountId\" IN (\n",
      "                SELECT DISTINCT substr(teamKillers_AccountId, 3, 40) FROM output\n",
      "            )\n",
      "        )\n",
      "    )\n",
      "    \n",
      "    SELECT \"attacker.name\" AS name, COUNT(damage) AS damage_count, damageTypeCategory\n",
      "    FROM output\n",
      "    WHERE \"attacker.teamId\" = \"victim.teamId\"\n",
      "      AND \"attacker.name\" IN (SELECT name FROM name_cte)\n",
      "      AND \"victim.name\" IN (SELECT name FROM name_cte)\n",
      "      AND \"attacker.name\" != \"victim.name\"\n",
      "    GROUP BY \"attacker.name\", damageTypeCategory\n",
      "    ': no such column: damage\n",
      "⚠️ 파일 output3058.csv 처리 중 오류 발생: Execution failed on sql '\n",
      "    WITH name_cte AS (\n",
      "        SELECT DISTINCT \"character.name\" AS name\n",
      "        FROM output\n",
      "        WHERE \"character.teamId\" IN (\n",
      "            SELECT DISTINCT \"character.teamId\"\n",
      "            FROM output\n",
      "            WHERE \"character.accountId\" IN (\n",
      "                SELECT DISTINCT substr(teamKillers_AccountId, 3, 40) FROM output\n",
      "            )\n",
      "        )\n",
      "    )\n",
      "    \n",
      "    SELECT \"attacker.name\" AS name, COUNT(damage) AS damage_count, damageTypeCategory\n",
      "    FROM output\n",
      "    WHERE \"attacker.teamId\" = \"victim.teamId\"\n",
      "      AND \"attacker.name\" IN (SELECT name FROM name_cte)\n",
      "      AND \"victim.name\" IN (SELECT name FROM name_cte)\n",
      "      AND \"attacker.name\" != \"victim.name\"\n",
      "    GROUP BY \"attacker.name\", damageTypeCategory\n",
      "    ': no such column: damage\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,4,42,44,45,50,51,52,53,54,55,57,58,59,61,62,63,70,71,72,108,109,111,112,113,121,122,123,125,126,127,128,130,131,132,133,135,136,137,138,141,142,143,144,147,148,149,150,167,168,169,170,171,172,179,180,181,185,193,194,195,197,198,199,200,201,202,203,205,206,214,215,216,218,219,220,221,222,223,224,226,227,235,236,237,239,240,241,242,243,244,245,247,248,249,256,257,258,264,265,266,274,275,276,278,279,280,284,288,290,297,298,306,307,308,310,311,312,313,314,315) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,4,42,44,45,47,48,49,50,51,52,53,54,55,57,58,59,61,62,63,70,71,72,108,110,111,112,113,115,116,117,118,119,121,122,123,131,132,133,135,136,137,138,139,140,141,143,145,146,147,164,165,166,167,168,169,176,177,178,182,190,191,192,194,195,196,197,198,199,200,202,203,211,212,213,215,216,217,218,219,220,221,223,224,232,233,234,236,237,238,239,240,241,242,244,245,246,253,254,255,264,266,267,268,276,277,278,280,281,282,284,288,291,293,294,302,303,304,306,307,308,309,312,313) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,4,44,46,47,49,50,51,52,54,55,56,105,107,109,110,111,112,114,115,116,117,118,119,120,121,123,124,125,133,134,135,137,138,139,140,141,142,143,148,149,150,167,168,169,170,171,172,179,180,181,185,193,194,195,197,198,199,200,201,202,203,205,206,214,215,216,218,219,220,221,222,223,224,226,227,235,236,237,239,240,241,242,243,244,245,247,256,257,258,263,266,268,269,277,278,279,281,282,283,284,288,292,294,295,303,304,305,307,308,309,311,313,314) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,4,42,44,45,52,53,54,55,57,58,59,61,108,112,114,115,116,117,119,120,121,122,123,125,126,134,135,136,138,139,140,141,143,144,145,146,149,151,152,153,170,171,172,173,174,175,182,183,184,188,196,197,198,200,201,202,203,204,205,206,208,209,217,218,219,221,222,223,224,225,226,227,229,230,238,239,240,242,243,244,245,246,247,248,250,259,260,261,267,268,269,277,278,279,281,282,283,284,288,289,293,294,302,303,304,306,307,308,310,314,315) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,28,47,49,50,53,54,57,58,59,60,62,63,64,108,110,111,112,113,115,116,117,118,119,121,122,123,131,132,133,135,136,137,141,142,143,144,146,147,148,165,166,167,168,177,178,179,183,191,192,193,195,196,197,198,199,200,201,203,204,212,213,214,216,217,218,219,220,221,222,224,225,233,234,235,237,238,239,240,241,242,243,245,254,255,256,261,263,267,270,274,275,276,284,285,286,288,289,290,294,295) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,4,42,44,45,47,48,49,50,51,52,54,55,56,105,107,108,109,110,112,113,114,115,116,117,118,122,124,125,127,128,136,137,138,140,141,142,143,144,145,146,148,149,150,167,168,169,170,171,172,179,180,181,185,193,194,195,197,198,199,200,201,202,203,205,206,214,215,216,218,219,220,221,222,223,224,226,227,235,236,237,239,240,241,242,243,244,245,247,248,249,256,257,258,263,265,267,268,276,277,278,280,281,282,286,290,295,296,304,305,306,308,309,310,312,313,314,315) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,4,42,44,45,47,48,49,50,51,52,53,54,55,57,58,59,61,62,63,70,71,72,108,110,111,112,113,115,116,117,118,119,121,122,123,131,132,133,135,136,137,141,143,144,145,146,149,150,151,168,169,170,171,180,181,182,186,194,195,196,198,199,200,201,202,203,204,206,207,215,216,217,219,220,221,222,223,224,225,227,228,236,237,238,240,241,242,243,244,245,246,248,249,250,257,258,259,265,267,268,269,277,278,279,281,282,283,285,289,295,297,298,299) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,4,42,44,45,52,53,54,55,57,58,59,108,109,111,112,113,121,122,123,125,126,127,128,130,131,132,133,135,136,137,138,140,141,142,143,145,146,147,164,165,166,167,168,169,176,177,178,182,190,191,192,194,195,196,197,198,199,200,202,203,211,212,213,215,216,217,218,219,220,221,223,224,232,233,234,236,237,238,239,240,241,242,244,253,254,255,264,266,267,268,269,277,278,279,281,282,283,286,290,292,296,297,305,306,307,309,310,311,312,313) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,23,26,42,44,45,46,47,48,49,50,51,52,54,55,56,58,59,60,67,68,69,125,126,127,136,139,140,141,142,143,145,146,147,164,165,166,167,176,177,178,182,190,191,192,194,195,196,197,198,199,200,202,203,211,212,213,215,216,217,218,219,220,221,223,224,232,233,234,236,237,238,239,240,241,242,244,245,246,253,254,255,260,261,268,272,279,280,281) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,52,53,56,57,58,59,60,61,62,64,65,66,68,69,70,77,78,79,110,112,113,114,115,117,118,119,120,121,123,124,125,133,134,135,137,138,139,140,141,142,143,145,146,147,164,165,166,167,176,177,178,182,190,191,192,194,195,196,197,198,199,200,202,203,211,212,213,215,216,217,218,219,220,221,223,224,232,233,234,236,237,238,239,240,241,242,244,253,254,255,260,262,270,271,279,280,281,283,284,285,288,292,295,296,297) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "⚠️ 파일 output3068.csv 처리 중 오류 발생: Execution failed on sql '\n",
      "    WITH name_cte AS (\n",
      "        SELECT DISTINCT \"character.name\" AS name\n",
      "        FROM output\n",
      "        WHERE \"character.teamId\" IN (\n",
      "            SELECT DISTINCT \"character.teamId\"\n",
      "            FROM output\n",
      "            WHERE \"character.accountId\" IN (\n",
      "                SELECT DISTINCT substr(teamKillers_AccountId, 3, 40) FROM output\n",
      "            )\n",
      "        )\n",
      "    )\n",
      "    \n",
      "    SELECT \"attacker.name\" AS name, COUNT(damage) AS damage_count, damageTypeCategory\n",
      "    FROM output\n",
      "    WHERE \"attacker.teamId\" = \"victim.teamId\"\n",
      "      AND \"attacker.name\" IN (SELECT name FROM name_cte)\n",
      "      AND \"victim.name\" IN (SELECT name FROM name_cte)\n",
      "      AND \"attacker.name\" != \"victim.name\"\n",
      "    GROUP BY \"attacker.name\", damageTypeCategory\n",
      "    ': no such column: damage\n",
      "⚠️ 파일 output3070.csv 처리 중 오류 발생: Execution failed on sql '\n",
      "    WITH name_cte AS (\n",
      "        SELECT DISTINCT \"character.name\" AS name\n",
      "        FROM output\n",
      "        WHERE \"character.teamId\" IN (\n",
      "            SELECT DISTINCT \"character.teamId\"\n",
      "            FROM output\n",
      "            WHERE \"character.accountId\" IN (\n",
      "                SELECT DISTINCT substr(teamKillers_AccountId, 3, 40) FROM output\n",
      "            )\n",
      "        )\n",
      "    )\n",
      "    \n",
      "    SELECT \"attacker.name\" AS name, COUNT(damage) AS damage_count, damageTypeCategory\n",
      "    FROM output\n",
      "    WHERE \"attacker.teamId\" = \"victim.teamId\"\n",
      "      AND \"attacker.name\" IN (SELECT name FROM name_cte)\n",
      "      AND \"victim.name\" IN (SELECT name FROM name_cte)\n",
      "      AND \"attacker.name\" != \"victim.name\"\n",
      "    GROUP BY \"attacker.name\", damageTypeCategory\n",
      "    ': no such column: damage\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,23,42,44,45,47,48,49,50,52,53,54,56,57,58,65,66,67,103,104,105,134,143,144,145,162,163,164,165,174,175,176,180,188,189,190,192,193,194,195,196,197,198,200,201,209,210,211,213,214,215,216,217,218,219,221,222,230,231,232,234,235,236,237,238,239,240,242,243,244,251,252,253,257,260,262,263,271,272,273,275,276,277,279,284,288,292,293) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,4,26,42,44,45,46,47,48,50,51,52,53,54,55,57,58,59,61,62,63,70,71,72,108,112,114,115,116,117,119,120,121,122,123,125,126,134,135,136,138,139,140,141,142,143,144,146,148,149,150,167,168,169,170,171,172,179,180,181,185,193,194,195,197,198,199,200,201,202,203,205,206,214,215,216,218,219,220,221,222,223,224,226,227,235,236,237,239,240,241,242,243,244,245,247,256,257,258,263,267,270,274,275,276,284,285,286,288,289,290,292,295,296,304,305,306,308,309,310,313,314) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,20,42,44,45,47,48,49,50,51,52,54,55,56,58,59,60,67,68,69,105,106,107,116,119,141,142,143,144,147,149,151,152,153,170,171,172,173,182,183,184,188,196,197,198,200,201,202,203,204,205,206,208,209,217,218,219,221,222,223,224,225,226,227,229,230,238,239,240,242,243,244,245,246,247,248,250,259,260,261,266,268,272,273,274,282,283,284,286,287,288,291,296,297) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,20,24,25,26,27,28,29,31,32,33,35,36,37,44,45,46,119,128,130,131,143,148,149,150,167,168,169,170,171,172,179,180,181,185,193,194,195,197,198,199,200,201,202,203,205,206,214,215,216,218,219,220,221,222,223,224,226,227,235,236,237,239,240,241,242,243,244,245,247,248,249,256,257,258,263,265,268,272,274,275,276,277,285,286,287,289,290,291,296,297) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "⚠️ 파일 output3074.csv 처리 중 오류 발생: Execution failed on sql '\n",
      "    WITH name_cte AS (\n",
      "        SELECT DISTINCT \"character.name\" AS name\n",
      "        FROM output\n",
      "        WHERE \"character.teamId\" IN (\n",
      "            SELECT DISTINCT \"character.teamId\"\n",
      "            FROM output\n",
      "            WHERE \"character.accountId\" IN (\n",
      "                SELECT DISTINCT substr(teamKillers_AccountId, 3, 40) FROM output\n",
      "            )\n",
      "        )\n",
      "    )\n",
      "    \n",
      "    SELECT \"attacker.name\" AS name, COUNT(damage) AS damage_count, damageTypeCategory\n",
      "    FROM output\n",
      "    WHERE \"attacker.teamId\" = \"victim.teamId\"\n",
      "      AND \"attacker.name\" IN (SELECT name FROM name_cte)\n",
      "      AND \"victim.name\" IN (SELECT name FROM name_cte)\n",
      "      AND \"attacker.name\" != \"victim.name\"\n",
      "    GROUP BY \"attacker.name\", damageTypeCategory\n",
      "    ': no such column: damage\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "⚠️ 파일 output3076.csv 처리 중 오류 발생: Execution failed on sql '\n",
      "    WITH name_cte AS (\n",
      "        SELECT DISTINCT \"character.name\" AS name\n",
      "        FROM output\n",
      "        WHERE \"character.teamId\" IN (\n",
      "            SELECT DISTINCT \"character.teamId\"\n",
      "            FROM output\n",
      "            WHERE \"character.accountId\" IN (\n",
      "                SELECT DISTINCT substr(teamKillers_AccountId, 3, 40) FROM output\n",
      "            )\n",
      "        )\n",
      "    )\n",
      "    \n",
      "    SELECT \"attacker.name\" AS name, COUNT(damage) AS damage_count, damageTypeCategory\n",
      "    FROM output\n",
      "    WHERE \"attacker.teamId\" = \"victim.teamId\"\n",
      "      AND \"attacker.name\" IN (SELECT name FROM name_cte)\n",
      "      AND \"victim.name\" IN (SELECT name FROM name_cte)\n",
      "      AND \"attacker.name\" != \"victim.name\"\n",
      "    GROUP BY \"attacker.name\", damageTypeCategory\n",
      "    ': no such column: damage\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,4,56,57,58,59,60,61,62,64,65,66,68,69,70,77,78,79,110,112,113,114,115,117,118,119,120,124,125,127,128,136,137,138,140,141,142,143,144,145,146,148,149,150,167,168,169,170,179,180,181,185,193,194,195,197,198,199,200,201,202,203,205,206,214,215,216,218,219,220,221,222,223,224,226,227,235,236,237,239,240,241,242,243,244,245,247,256,257,258,263,266,268,269,277,278,279,281,282,283,286,290,293,295,296,304,305,306,308,309,310,312,313,314) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,4,55,56,59,60,61,62,64,65,66,68,69,70,77,78,79,110,111,113,114,115,123,124,125,127,128,129,130,132,133,134,135,137,138,139,140,141,142,143,148,149,150,167,168,169,170,171,172,179,180,181,185,193,194,195,197,198,199,200,201,202,203,205,206,214,215,216,218,219,220,221,222,223,224,226,227,235,236,237,239,240,241,242,243,244,245,247,256,257,258,263,266,267,268,276,277,278,280,281,282,287,291,293,295,296,304,305,306,308,309,310,313,314) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,4,42,44,45,47,48,49,50,51,52,53,54,55,57,58,59,61,62,63,70,71,72,108,110,112,113,114,115,117,118,119,120,121,123,124,125,133,134,135,137,138,139,143,144,145,146,149,150,151,152,169,170,171,172,173,174,181,182,183,187,195,196,197,199,200,201,202,203,204,205,207,208,216,217,218,220,221,222,223,224,225,226,228,229,237,238,239,241,242,243,244,245,246,247,249,250,251,258,259,260,265,266,267,275,276,277,279,280,281,286,290,293,294,302,303,304,306,307,308,312,313,314,315) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,4,42,44,45,47,48,49,50,51,52,54,55,56,58,59,60,67,68,69,105,106,107,108,110,111,112,113,115,116,117,118,119,121,122,123,131,132,133,135,136,137,141,142,143,144,146,149,150,151,152,169,170,171,172,173,174,181,182,183,187,195,196,197,199,200,201,202,203,204,205,207,208,216,217,218,220,221,222,223,224,225,226,228,229,237,238,239,241,242,243,244,245,246,247,249,250,251,258,259,260,266,267,275,276,277,279,280,281,283,287,291,293,294,295,303,304,305,307,308,309,313,314) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,4,42,44,45,47,48,49,50,51,52,53,54,55,57,58,59,61,62,63,70,71,72,118,119,121,122,123,131,132,133,135,136,137,141,142,143,144,145,151,153,154,155,172,173,174,175,176,177,184,185,186,190,198,199,200,202,203,204,205,206,207,208,210,211,219,220,221,223,224,225,226,227,228,229,231,232,240,241,242,244,245,246,247,248,249,250,252,253,254,261,262,263,268,270,271,279,280,281,283,284,285,286,290,296,297,298) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,20,42,44,45,47,48,49,50,52,53,54,56,57,58,65,66,67,114,116,117,119,139,146,148,149,150,167,168,169,170,179,180,181,185,193,194,195,197,198,199,200,201,202,203,205,206,214,215,216,218,219,220,221,222,223,224,226,227,235,236,237,239,240,241,242,243,244,245,247,248,249,256,257,258,263,265,268,272,277,279,280) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "⚠️ 파일 output3082.csv 처리 중 오류 발생: Execution failed on sql '\n",
      "    WITH name_cte AS (\n",
      "        SELECT DISTINCT \"character.name\" AS name\n",
      "        FROM output\n",
      "        WHERE \"character.teamId\" IN (\n",
      "            SELECT DISTINCT \"character.teamId\"\n",
      "            FROM output\n",
      "            WHERE \"character.accountId\" IN (\n",
      "                SELECT DISTINCT substr(teamKillers_AccountId, 3, 40) FROM output\n",
      "            )\n",
      "        )\n",
      "    )\n",
      "    \n",
      "    SELECT \"attacker.name\" AS name, COUNT(damage) AS damage_count, damageTypeCategory\n",
      "    FROM output\n",
      "    WHERE \"attacker.teamId\" = \"victim.teamId\"\n",
      "      AND \"attacker.name\" IN (SELECT name FROM name_cte)\n",
      "      AND \"victim.name\" IN (SELECT name FROM name_cte)\n",
      "      AND \"attacker.name\" != \"victim.name\"\n",
      "    GROUP BY \"attacker.name\", damageTypeCategory\n",
      "    ': no such column: damage\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,4,42,44,45,47,48,49,50,51,52,53,54,55,57,58,59,61,62,63,70,71,72,108,112,113,115,116,124,125,126,128,129,130,131,133,134,135,136,138,139,140,141,142,143,144,146,148,149,150,167,168,169,170,171,172,179,180,181,185,193,194,195,197,198,199,200,201,202,203,205,206,214,215,216,218,219,220,221,222,223,224,226,227,235,236,237,239,240,241,242,243,244,245,247,256,257,258,263,266,268,269,277,278,279,281,282,283,284,288,289,294,295,303,304,305,307,308,309,311,314,315) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,4,52,53,54,55,57,58,59,61,62,63,70,71,72,171,172,263,265,268,269,277,278,279,281,282,283,284,288,291,292,300,301,302,304,305,306,307,308) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,4,42,44,45,49,50,51,52,54,55,56,105,106,107,108,110,111,112,113,115,116,117,118,119,121,122,123,131,132,133,135,136,137,141,142,143,144,146,149,150,151,152,169,170,171,172,173,174,181,182,183,187,195,196,197,199,200,201,202,203,204,205,207,208,216,217,218,220,221,222,223,224,225,226,228,229,237,238,239,241,242,243,244,245,246,247,249,250,251,258,259,260,265,267,268,276,277,278,280,281,282,284,288,292,297,298) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,4,52,53,54,55,56,59,60,61,62,64,65,66,68,69,70,77,78,79,110,112,113,114,115,117,118,119,120,121,123,124,125,133,134,135,137,138,139,140,141,142,143,145,146,147,164,165,166,167,168,169,176,177,178,182,190,191,192,194,195,196,197,198,199,200,202,203,211,212,213,215,216,217,218,219,220,221,223,224,232,233,234,236,237,238,239,240,241,242,244,245,246,253,254,255,260,263,267,268,276,277,278,280,281,282,286,290,292,293,301,302,303,305,306,307,311,313,314) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "⚠️ 파일 output3088.csv 처리 중 오류 발생: Execution failed on sql '\n",
      "    WITH name_cte AS (\n",
      "        SELECT DISTINCT \"character.name\" AS name\n",
      "        FROM output\n",
      "        WHERE \"character.teamId\" IN (\n",
      "            SELECT DISTINCT \"character.teamId\"\n",
      "            FROM output\n",
      "            WHERE \"character.accountId\" IN (\n",
      "                SELECT DISTINCT substr(teamKillers_AccountId, 3, 40) FROM output\n",
      "            )\n",
      "        )\n",
      "    )\n",
      "    \n",
      "    SELECT \"attacker.name\" AS name, COUNT(damage) AS damage_count, damageTypeCategory\n",
      "    FROM output\n",
      "    WHERE \"attacker.teamId\" = \"victim.teamId\"\n",
      "      AND \"attacker.name\" IN (SELECT name FROM name_cte)\n",
      "      AND \"victim.name\" IN (SELECT name FROM name_cte)\n",
      "      AND \"attacker.name\" != \"victim.name\"\n",
      "    GROUP BY \"attacker.name\", damageTypeCategory\n",
      "    ': no such column: damage\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,4,15,16,17,18,26,27,35,36,37,38,39,40,41,42,44,45,46,47,48,49,50,51,52,53,54,55,57,58,59,61,62,63,70,71,72,76,78,79,108,112,114,115,116,117,119,120,121,122,123,125,126,134,135,136,137,138,139,140,141,143,144,145,146,149,150,151,152,169,170,171,172,173,174,181,182,183,187,195,196,197,198,199,200,201,202,203,204,205,207,208,216,217,218,219,220,221,222,223,224,225,226,228,229,237,238,239,240,241,242,243,244,245,246,247,249,258,259,260,266,268,269,277,278,279,281,282,283,284,288,291,292,300,301,302,304,305,306,310,311,312) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,4,17,52,53,54,55,57,58,59,61,62,63,70,71,72,124,148,149,150,167,168,169,170,171,172,179,180,181,185,193,194,195,197,198,199,200,201,202,203,205,206,214,215,216,218,219,220,221,222,223,224,226,227,235,236,237,239,240,241,242,243,244,245,247,256,257,258,265,266,267,275,276,277,279,280,281,284,288,290,291,299,300,301,303,304,305,308,309,310) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,20,26,42,44,45,46,49,50,51,52,54,55,56,58,59,60,67,68,69,109,129,141,144,146,148,149,150,167,168,169,170,179,180,181,185,193,194,195,197,198,199,200,201,202,203,205,206,214,215,216,218,219,220,221,222,223,224,226,227,235,236,237,239,240,241,242,243,244,245,247,248,249,256,257,258,263,271,275,278,279) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,4,24,25,44,46,47,49,50,51,52,54,55,56,126,169,194,195,196,200,201,214,215,216,225,227,235,236,237,239,240,241,244,246,249,253,257,263,264,265,266,274,275,276,278,279,280,281,282,290,291,292,294,295,296,297,298) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,4,24,25,52,53,54,55,57,58,59,148,149,150,167,168,169,170,171,172,179,180,181,185,193,194,195,197,198,199,200,201,202,203,205,206,214,215,216,218,219,220,221,222,223,224,226,227,235,236,237,239,240,241,242,243,244,245,247,248,249,256,257,258,264,266,267,268,276,277,278,280,281,282,284,288,290,292,293,301,302,303,305,306,307,313,314) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,4,42,44,45,50,51,52,53,54,55,57,58,59,61,108,109,111,112,113,121,122,123,125,126,127,131,133,134,135,136,138,139,140,141,143,144,145,146,148,149,150,167,168,169,170,171,172,179,180,181,185,193,194,195,197,198,199,200,201,202,203,205,206,214,215,216,218,219,220,221,222,223,224,226,227,235,236,237,239,240,241,242,243,244,245,247,256,257,258,264,266,267,268,276,277,278,280,281,282,285,289,291,294,295,303,304,305,307,308,309,311,314,315) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,4,17,24,25,44,46,47,49,50,51,52,53,54,55,57,58,59,61,62,63,70,71,72,108,109,111,112,113,121,122,123,125,126,127,128,130,131,132,133,135,136,137,138,139,140,141,143,148,149,150,167,168,169,170,171,172,179,180,181,185,193,194,195,197,198,199,200,201,202,203,205,206,214,215,216,218,219,220,221,222,223,224,226,227,235,236,237,239,240,241,242,243,244,245,247,256,257,258,263,264,265,273,274,275,277,278,279,280,282,286,290,295,296,297) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "⚠️ 파일 output3096.csv 처리 중 오류 발생: Execution failed on sql '\n",
      "    WITH name_cte AS (\n",
      "        SELECT DISTINCT \"character.name\" AS name\n",
      "        FROM output\n",
      "        WHERE \"character.teamId\" IN (\n",
      "            SELECT DISTINCT \"character.teamId\"\n",
      "            FROM output\n",
      "            WHERE \"character.accountId\" IN (\n",
      "                SELECT DISTINCT substr(teamKillers_AccountId, 3, 40) FROM output\n",
      "            )\n",
      "        )\n",
      "    )\n",
      "    \n",
      "    SELECT \"attacker.name\" AS name, COUNT(damage) AS damage_count, damageTypeCategory\n",
      "    FROM output\n",
      "    WHERE \"attacker.teamId\" = \"victim.teamId\"\n",
      "      AND \"attacker.name\" IN (SELECT name FROM name_cte)\n",
      "      AND \"victim.name\" IN (SELECT name FROM name_cte)\n",
      "      AND \"attacker.name\" != \"victim.name\"\n",
      "    GROUP BY \"attacker.name\", damageTypeCategory\n",
      "    ': no such column: damage\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,13,14,16,23,24,25,26,27,28,29,31,32,33,35,36,37,44,45,46,50,52,53,82,83,84,85,87,88,89,90,92,93,94,96,97,99,100,101,109,110,111,113,114,115,116,124,125,126,128,129,130,131,132,133,134,137,139,140,142,143,144,145,151,152,153,170,171,172,173,182,183,184,188,196,197,198,200,201,202,203,204,205,206,208,209,217,218,219,221,222,223,224,225,226,227,229,230,238,239,240,242,243,244,245,246,247,248,250,251,252,259,260,261,266,268,272,273,274,282,283,284,286,287,288,296,297,298) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,4,42,44,45,47,48,49,50,51,52,53,54,55,57,58,59,61,108,109,111,112,113,121,122,123,125,126,127,129,130,134,135,136,153,154,155,156,157,158,165,166,167,171,172,173,174,176,177,178,179,180,182,183,184,185,186,188,197,198,199,215,217,219,220,224,232,233,234,236,237,238,239,247,248,249,251,252,253,254,262,263,264,266,267,268,270,271,272,280,281,282,284,285,286,289,293,296,297,298,306,307,308,310,311,312,313,314,315) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,17,24,25,26,27,28,52,53,54,55,57,58,59,61,62,63,70,71,72,141,144,148,149,150,167,168,169,170,171,172,179,180,181,185,193,194,195,197,198,199,200,201,202,203,205,206,214,215,216,218,219,220,221,222,223,224,226,227,235,236,237,239,240,241,242,243,244,245,247,248,249,256,257,258,263,266,267,275,276,277,279,280,281,283,284,288,290,291,292,300,301,302,304,305,306,310,311,312) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,15,28,29,30,31,32,34,35,36,38,39,40,47,48,49,81,82,84,85,86,94,95,96,97,98,99,100,101,109,110,111,112,113,114,115,116,117,118,119,121,122,123,124,125,126,128,129,130,131,133,134,135,140,141,142,159,160,161,162,171,172,173,177,178,179,180,182,183,191,192,193,194,195,196,197,198,199,200,201,203,204,212,213,214,215,216,217,218,219,220,221,222,224,225,226,233,234,235,239,247,248,249,250,251,252,253,255,257,261,264,265,267,268,269,271,272,276,277) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,20,26,27,28,29,31,32,33,35,36,37,44,45,46,90,92,93,94,97,132,137,138,140,141,142,143,146,147,148,149,166,167,168,169,178,179,180,184,192,193,194,196,197,198,199,200,201,202,204,205,213,214,215,217,218,219,220,221,222,223,225,226,234,235,236,238,239,240,241,242,243,244,246,247,248,255,256,257,265,271,275,276,277,285,286,287,289,290,291,295,296,297) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "⚠️ 파일 output3101.csv 처리 중 오류 발생: Execution failed on sql '\n",
      "    WITH name_cte AS (\n",
      "        SELECT DISTINCT \"character.name\" AS name\n",
      "        FROM output\n",
      "        WHERE \"character.teamId\" IN (\n",
      "            SELECT DISTINCT \"character.teamId\"\n",
      "            FROM output\n",
      "            WHERE \"character.accountId\" IN (\n",
      "                SELECT DISTINCT substr(teamKillers_AccountId, 3, 40) FROM output\n",
      "            )\n",
      "        )\n",
      "    )\n",
      "    \n",
      "    SELECT \"attacker.name\" AS name, COUNT(damage) AS damage_count, damageTypeCategory\n",
      "    FROM output\n",
      "    WHERE \"attacker.teamId\" = \"victim.teamId\"\n",
      "      AND \"attacker.name\" IN (SELECT name FROM name_cte)\n",
      "      AND \"victim.name\" IN (SELECT name FROM name_cte)\n",
      "      AND \"attacker.name\" != \"victim.name\"\n",
      "    GROUP BY \"attacker.name\", damageTypeCategory\n",
      "    ': no such column: damage\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,4,42,44,45,52,53,54,55,57,58,59,108,109,111,112,113,121,122,123,125,126,127,128,130,131,132,133,135,136,137,141,143,144,145,146,148,149,150,167,168,169,170,171,172,179,180,181,185,193,194,195,197,198,199,200,201,202,203,205,206,214,215,216,218,219,220,221,222,223,224,226,227,235,236,237,239,240,241,242,243,244,245,247,256,257,258,263,265,268,269,277,278,279,281,282,283,285,289,290,295,298,299) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "⚠️ 파일 output3104.csv 처리 중 오류 발생: Execution failed on sql '\n",
      "    WITH name_cte AS (\n",
      "        SELECT DISTINCT \"character.name\" AS name\n",
      "        FROM output\n",
      "        WHERE \"character.teamId\" IN (\n",
      "            SELECT DISTINCT \"character.teamId\"\n",
      "            FROM output\n",
      "            WHERE \"character.accountId\" IN (\n",
      "                SELECT DISTINCT substr(teamKillers_AccountId, 3, 40) FROM output\n",
      "            )\n",
      "        )\n",
      "    )\n",
      "    \n",
      "    SELECT \"attacker.name\" AS name, COUNT(damage) AS damage_count, damageTypeCategory\n",
      "    FROM output\n",
      "    WHERE \"attacker.teamId\" = \"victim.teamId\"\n",
      "      AND \"attacker.name\" IN (SELECT name FROM name_cte)\n",
      "      AND \"victim.name\" IN (SELECT name FROM name_cte)\n",
      "      AND \"attacker.name\" != \"victim.name\"\n",
      "    GROUP BY \"attacker.name\", damageTypeCategory\n",
      "    ': no such column: damage\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,4,17,43,47,49,50,52,53,54,55,57,58,59,61,108,110,111,112,113,115,116,117,118,119,121,122,123,131,132,133,134,135,136,137,141,142,143,144,146,148,149,150,167,168,169,170,171,172,179,180,181,185,193,194,195,196,197,198,199,200,201,202,203,205,206,214,215,216,217,218,219,220,221,222,223,224,226,227,235,236,237,238,239,240,241,242,243,244,245,247,256,257,258,264,266,268,269,277,278,279,281,282,283,284,288,291,293,294,302,303,304,306,307,308,310,314,315) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,4,17,24,25,40,44,46,47,50,51,52,53,54,55,57,58,59,61,62,63,70,71,72,108,110,111,112,113,115,116,117,118,119,121,122,123,131,132,133,134,135,136,137,138,139,140,141,143,150,151,152,153,170,171,172,173,174,175,182,183,184,188,196,197,198,200,201,202,203,204,205,206,208,209,217,218,219,221,222,223,224,225,226,227,229,230,238,239,240,242,243,244,245,246,247,248,250,251,252,259,260,261,266,267,268,276,277,278,280,281,282,284,288,291,294,295,303,304,305,307,308,309,311,312) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,20,42,44,45,47,48,49,50,52,53,54,128,131,133,135,136,137,138,140,141,142,143,145,146,147,164,165,166,167,168,169,176,177,178,182,190,191,192,194,195,196,197,198,199,200,202,203,211,212,213,215,216,217,218,219,220,221,223,224,232,233,234,236,237,238,239,240,241,242,244,245,246,253,254,255,260,262,268,269,270,278,279,280,282,283,284,286,290,292,296,297) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "⚠️ 파일 output3107.csv 처리 중 오류 발생: Execution failed on sql '\n",
      "    WITH name_cte AS (\n",
      "        SELECT DISTINCT \"character.name\" AS name\n",
      "        FROM output\n",
      "        WHERE \"character.teamId\" IN (\n",
      "            SELECT DISTINCT \"character.teamId\"\n",
      "            FROM output\n",
      "            WHERE \"character.accountId\" IN (\n",
      "                SELECT DISTINCT substr(teamKillers_AccountId, 3, 40) FROM output\n",
      "            )\n",
      "        )\n",
      "    )\n",
      "    \n",
      "    SELECT \"attacker.name\" AS name, COUNT(damage) AS damage_count, damageTypeCategory\n",
      "    FROM output\n",
      "    WHERE \"attacker.teamId\" = \"victim.teamId\"\n",
      "      AND \"attacker.name\" IN (SELECT name FROM name_cte)\n",
      "      AND \"victim.name\" IN (SELECT name FROM name_cte)\n",
      "      AND \"attacker.name\" != \"victim.name\"\n",
      "    GROUP BY \"attacker.name\", damageTypeCategory\n",
      "    ': no such column: damage\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,4,59,60,61,62,64,65,66,68,69,70,77,78,79,110,112,113,114,115,117,118,119,120,121,123,124,125,133,134,135,137,138,139,140,141,142,143,146,147,148,149,166,167,168,169,178,179,180,184,192,193,194,196,197,198,199,200,201,202,204,205,213,214,215,217,218,219,220,221,222,223,225,226,234,235,236,238,239,240,241,242,243,244,246,255,256,257,263,268,272,274,275,282,283,291,292,293,295,296,297,298,299) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,4,24,25,44,46,47,49,50,51,52,53,54,55,57,58,59,128,130,131,132,133,135,136,137,141,142,143,144,146,147,148,165,166,167,168,169,170,177,178,179,183,191,192,193,195,196,197,198,199,200,201,203,204,212,213,214,216,217,218,219,220,221,222,224,225,233,234,235,237,238,239,240,241,242,243,245,246,247,254,255,256,260,263,265,268,269,277,278,279,281,282,283,287,291,295,297,298) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,4,42,44,45,47,48,49,50,51,52,53,54,55,57,58,59,61,62,63,70,71,72,108,110,111,112,113,115,116,117,118,122,123,125,126,134,135,136,138,139,140,141,142,143,144,146,148,149,150,167,168,169,170,171,172,179,180,181,185,193,194,195,197,198,199,200,201,202,203,205,206,214,215,216,218,219,220,221,222,223,224,226,227,235,236,237,239,240,241,242,243,244,245,247,248,249,256,257,258,263,265,267,271,272,280,281,282,284,285,286,287,291,293,298,299) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,4,17,38,42,44,45,49,50,51,52,54,55,56,58,59,60,67,68,69,105,106,107,108,110,111,112,113,115,116,117,118,119,121,122,123,131,132,133,134,135,136,137,142,143,145,146,147,148,151,152,153,170,171,172,173,174,175,182,183,184,188,196,197,198,199,200,201,202,203,204,205,206,208,209,217,218,219,220,221,222,223,224,225,226,227,229,230,238,239,240,241,242,243,244,245,246,247,248,250,251,252,259,260,261,266,269,270,278,279,280,282,283,284,285,289,292,293,294,302,303,304,306,307,308,309,312,313) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,4,52,53,54,55,57,58,59,143,144,145,146,148,149,150,167,168,169,170,171,172,179,180,181,185,193,194,195,197,198,199,200,201,202,203,205,206,214,215,216,218,219,220,221,222,223,224,226,227,235,236,237,239,240,241,242,243,244,245,247,256,257,258,263,266,268,269,277,278,279,281,282,283,284,288,289,290,298,299,300,302,303,304,307,308,309) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,4,47,48,49,50,51,52,53,54,55,57,58,59,61,62,63,70,71,72,128,129,130,131,145,146,147,164,165,166,167,168,169,176,177,178,182,190,191,192,194,195,196,197,198,199,200,202,203,211,212,213,215,216,217,218,219,220,221,223,224,232,233,234,236,237,238,239,240,241,242,244,245,246,253,254,255,260,262,267,268,276,277,278,280,281,282,284,288,293,295,296,304,305,306,308,309,310,313,314) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,4,24,25,44,46,47,49,50,51,52,54,55,56,58,59,60,67,68,69,105,106,107,108,110,111,112,113,115,116,117,118,122,124,125,127,128,136,137,138,140,141,142,143,144,145,146,148,149,150,167,168,169,170,179,180,181,185,193,194,195,197,198,199,200,201,202,203,205,206,214,215,216,218,219,220,221,222,223,224,226,227,235,236,237,239,240,241,242,243,244,245,247,248,249,256,257,258,264,266,268,269,277,278,279,281,282,283,286,290,292,295,296,304,305,306,308,309,310,313,314,315) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,4,52,53,56,57,58,59,60,61,62,64,65,66,68,69,70,77,78,79,110,112,113,114,115,117,118,119,120,121,123,124,125,133,134,135,137,138,139,140,141,142,143,145,146,147,164,165,166,167,168,169,176,177,178,182,190,191,192,194,195,196,197,198,199,200,202,203,211,212,213,215,216,217,218,219,220,221,223,224,232,233,234,236,237,238,239,240,241,242,244,253,254,255,263,265,267,268,276,277,278,280,281,282,287,288,292,294,297,298,306,307,308,310,311,312,314,315) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,4,24,25,44,46,47,50,51,52,53,54,55,57,58,59,61,62,63,70,71,72,108,110,111,112,113,115,116,117,118,119,121,122,123,131,132,133,135,136,137,142,143,144,145,146,148,149,150,167,168,169,170,171,172,179,180,181,185,193,194,195,197,198,199,200,201,202,203,205,206,214,215,216,218,219,220,221,222,223,224,226,227,235,236,237,239,240,241,242,243,244,245,247,256,257,258,262,265,267,268,276,277,278,280,281,282,284,288,292,293,301,302,303,305,306,307,312,313,314,315) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "⚠️ 파일 output3118.csv 처리 중 오류 발생: Execution failed on sql '\n",
      "    WITH name_cte AS (\n",
      "        SELECT DISTINCT \"character.name\" AS name\n",
      "        FROM output\n",
      "        WHERE \"character.teamId\" IN (\n",
      "            SELECT DISTINCT \"character.teamId\"\n",
      "            FROM output\n",
      "            WHERE \"character.accountId\" IN (\n",
      "                SELECT DISTINCT substr(teamKillers_AccountId, 3, 40) FROM output\n",
      "            )\n",
      "        )\n",
      "    )\n",
      "    \n",
      "    SELECT \"attacker.name\" AS name, COUNT(damage) AS damage_count, damageTypeCategory\n",
      "    FROM output\n",
      "    WHERE \"attacker.teamId\" = \"victim.teamId\"\n",
      "      AND \"attacker.name\" IN (SELECT name FROM name_cte)\n",
      "      AND \"victim.name\" IN (SELECT name FROM name_cte)\n",
      "      AND \"attacker.name\" != \"victim.name\"\n",
      "    GROUP BY \"attacker.name\", damageTypeCategory\n",
      "    ': no such column: damage\n",
      "⚠️ 파일 output3119.csv 처리 중 오류 발생: Execution failed on sql '\n",
      "    WITH name_cte AS (\n",
      "        SELECT DISTINCT \"character.name\" AS name\n",
      "        FROM output\n",
      "        WHERE \"character.teamId\" IN (\n",
      "            SELECT DISTINCT \"character.teamId\"\n",
      "            FROM output\n",
      "            WHERE \"character.accountId\" IN (\n",
      "                SELECT DISTINCT substr(teamKillers_AccountId, 3, 40) FROM output\n",
      "            )\n",
      "        )\n",
      "    )\n",
      "    \n",
      "    SELECT \"attacker.name\" AS name, COUNT(damage) AS damage_count, damageTypeCategory\n",
      "    FROM output\n",
      "    WHERE \"attacker.teamId\" = \"victim.teamId\"\n",
      "      AND \"attacker.name\" IN (SELECT name FROM name_cte)\n",
      "      AND \"victim.name\" IN (SELECT name FROM name_cte)\n",
      "      AND \"attacker.name\" != \"victim.name\"\n",
      "    GROUP BY \"attacker.name\", damageTypeCategory\n",
      "    ': no such column: damage\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,4,17,38,42,44,45,47,48,49,50,51,52,53,54,55,57,58,59,61,62,63,70,71,72,108,110,111,112,113,115,116,117,118,122,123,125,126,134,135,136,137,138,139,140,141,142,143,144,147,148,150,151,152,169,170,171,172,173,174,181,182,183,187,195,196,197,199,200,201,202,203,204,205,207,208,216,217,218,220,221,222,223,224,225,226,228,229,237,238,239,241,242,243,244,245,246,247,249,250,251,258,259,260,267,268,269,277,278,279,281,282,283,285,289,290,291,299,300,301,303,304,305,307,310,312,313) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,4,24,25,44,46,47,49,50,51,52,53,54,55,57,58,59,61,62,63,70,71,72,108,109,111,112,113,121,122,123,125,126,127,132,134,135,136,137,139,140,141,142,144,145,146,147,149,150,151,168,169,170,171,172,173,180,181,182,186,194,195,196,198,199,200,201,202,203,204,206,207,215,216,217,219,220,221,222,223,224,225,227,228,236,237,238,240,241,242,243,244,245,246,248,249,250,257,258,259,266,269,270,278,279,280,282,283,284,286,288,292,294,295,296,304,305,306,308,309,310,311,314,315) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,4,59,60,61,62,64,65,66,68,69,70,77,78,79,110,111,113,114,115,123,124,125,127,128,129,130,132,133,134,135,137,138,139,140,141,142,143,145,146,147,164,165,166,167,168,169,176,177,178,182,190,191,192,194,195,196,197,198,199,200,202,203,211,212,213,215,216,217,218,219,220,221,223,224,232,233,234,236,237,238,239,240,241,242,244,253,254,255,261,266,268,269,277,278,279,281,282,283,286,290,294,295,296,304,305,306,308,309,310,313,314) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,4,42,44,45,47,48,49,50,51,52,53,54,55,57,58,59,108,109,111,112,113,121,122,123,125,126,127,128,129,130,131,133,135,136,137,154,155,156,157,158,159,166,167,168,172,180,181,182,184,185,186,187,188,189,190,192,193,201,202,203,205,206,207,208,209,210,211,213,214,222,223,224,226,227,228,229,230,231,232,234,243,244,245,249,251,252,253,254,256,257,258,260,263,268,269,277,278,279,281,282,283,287,291,294,296,297,305,306,307,309,310,311,313,314,315) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,4,42,44,45,52,53,54,55,57,58,59,108,112,114,115,116,117,119,120,121,122,123,125,126,134,135,136,138,139,140,141,142,143,144,146,147,148,165,166,167,168,169,170,177,178,179,183,191,192,193,195,196,197,198,199,200,201,203,204,212,213,214,216,217,218,219,220,221,222,224,225,233,234,235,237,238,239,240,241,242,243,245,254,255,256,260,263,265,268,269,277,278,279,281,282,283,285,289,292,297,298,299) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,20,42,44,45,49,50,51,52,54,55,56,58,59,60,67,68,69,106,107,116,119,138,139,140,141,144,145,146,147,164,165,166,167,176,177,178,182,190,191,192,194,195,196,197,198,199,200,202,203,211,212,213,215,216,217,218,219,220,221,223,224,232,233,234,236,237,238,239,240,241,242,244,245,246,253,254,255,259,262,268,272,273,274,282,283,284,286,287,288,293,294) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,20,42,44,45,47,48,49,50,52,53,54,56,57,58,65,66,67,114,117,198,219,242,244,247,248,252,260,261,262) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "⚠️ 파일 output3127.csv 처리 중 오류 발생: Execution failed on sql '\n",
      "    WITH name_cte AS (\n",
      "        SELECT DISTINCT \"character.name\" AS name\n",
      "        FROM output\n",
      "        WHERE \"character.teamId\" IN (\n",
      "            SELECT DISTINCT \"character.teamId\"\n",
      "            FROM output\n",
      "            WHERE \"character.accountId\" IN (\n",
      "                SELECT DISTINCT substr(teamKillers_AccountId, 3, 40) FROM output\n",
      "            )\n",
      "        )\n",
      "    )\n",
      "    \n",
      "    SELECT \"attacker.name\" AS name, COUNT(damage) AS damage_count, damageTypeCategory\n",
      "    FROM output\n",
      "    WHERE \"attacker.teamId\" = \"victim.teamId\"\n",
      "      AND \"attacker.name\" IN (SELECT name FROM name_cte)\n",
      "      AND \"victim.name\" IN (SELECT name FROM name_cte)\n",
      "      AND \"attacker.name\" != \"victim.name\"\n",
      "    GROUP BY \"attacker.name\", damageTypeCategory\n",
      "    ': no such column: damage\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,4,17,42,44,45,52,53,54,55,57,58,59,108,109,111,112,113,121,122,123,125,126,127,128,130,131,132,133,135,136,137,141,142,143,144,146,147,148,165,166,167,168,169,170,177,178,179,183,191,192,193,195,196,197,198,199,200,201,203,204,212,213,214,216,217,218,219,220,221,222,224,225,233,234,235,237,238,239,240,241,242,243,245,246,247,254,255,256,261,262,266,269,270,278,279,280,282,283,284,285,289,290,294,296,297) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,4,52,53,56,57,58,59,60,61,62,64,65,66,68,69,70,77,78,79,110,111,113,114,115,123,124,125,127,128,129,130,132,133,134,135,137,138,139,140,141,142,143,145,146,147,164,165,166,167,168,169,176,177,178,182,190,191,192,194,195,196,197,198,199,200,202,203,211,212,213,215,216,217,218,219,220,221,223,224,232,233,234,236,237,238,239,240,241,242,244,245,246,253,254,255,260,262,266,267,275,276,277,279,280,281,286,290,295,296,304,305,306,308,309,310,312,313,314) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,4,44,46,47,49,50,51,52,54,55,56,58,59,60,67,68,69,139,142,143,145,146,147,164,165,166,167,168,169,176,177,178,182,183,184,185,187,188,196,197,198,200,201,202,203,204,205,206,208,209,217,218,219,221,222,223,224,225,226,227,229,230,231,238,239,240,245,247,250,251,255,260,264,265,273,274,275,277,278,279,280,281,282,290,291,292,294,295,296,297,298,306,307,308,310,311,312,313,314) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,20,42,44,45,48,49,50,51,52,53,55,56,57,59,60,61,68,69,70,116,142,147,148,150,151,152,169,170,171,172,181,182,183,187,195,196,197,199,200,201,202,203,204,205,207,208,216,217,218,220,221,222,223,224,225,226,228,229,237,238,239,241,242,243,244,245,246,247,249,250,251,258,259,260,265,268,272,275,276,284,285,286,288,289,290,292,293) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,4,42,44,45,49,50,51,52,54,55,56,58,59,60,67,68,69,105,106,107,142,143,145,146,147,164,165,166,167,168,169,176,177,178,182,183,184,185,187,188,196,197,198,200,201,202,203,204,205,206,208,209,217,218,219,221,222,223,224,225,226,227,229,230,231,238,239,240,244,246,247,249,250,258,259,260,262,263,264,266,269,270,278,279,280,282,283,284,285,289,291,295,296) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "⚠️ 파일 output3133.csv 처리 중 오류 발생: Execution failed on sql '\n",
      "    WITH name_cte AS (\n",
      "        SELECT DISTINCT \"character.name\" AS name\n",
      "        FROM output\n",
      "        WHERE \"character.teamId\" IN (\n",
      "            SELECT DISTINCT \"character.teamId\"\n",
      "            FROM output\n",
      "            WHERE \"character.accountId\" IN (\n",
      "                SELECT DISTINCT substr(teamKillers_AccountId, 3, 40) FROM output\n",
      "            )\n",
      "        )\n",
      "    )\n",
      "    \n",
      "    SELECT \"attacker.name\" AS name, COUNT(damage) AS damage_count, damageTypeCategory\n",
      "    FROM output\n",
      "    WHERE \"attacker.teamId\" = \"victim.teamId\"\n",
      "      AND \"attacker.name\" IN (SELECT name FROM name_cte)\n",
      "      AND \"victim.name\" IN (SELECT name FROM name_cte)\n",
      "      AND \"attacker.name\" != \"victim.name\"\n",
      "    GROUP BY \"attacker.name\", damageTypeCategory\n",
      "    ': no such column: damage\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,4,24,25,28,29,37,38,39,41,42,43,44,46,47,48,50,51,52,53,54,55,57,58,59,61,62,63,70,71,72,108,109,111,112,113,121,122,123,125,126,127,128,129,130,131,133,135,137,138,139,140,142,143,144,145,146,147,164,165,166,167,168,169,176,177,178,182,190,191,192,194,195,196,197,198,199,200,202,203,211,212,213,215,216,217,218,219,220,221,223,224,232,233,234,236,237,238,239,240,241,242,244,245,246,253,254,255,260,262,264,265,273,274,275,277,278,279,284,288,293,294,302,303,304,306,307,308,312,313,314) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "⚠️ 파일 output3135.csv 처리 중 오류 발생: Execution failed on sql '\n",
      "    WITH name_cte AS (\n",
      "        SELECT DISTINCT \"character.name\" AS name\n",
      "        FROM output\n",
      "        WHERE \"character.teamId\" IN (\n",
      "            SELECT DISTINCT \"character.teamId\"\n",
      "            FROM output\n",
      "            WHERE \"character.accountId\" IN (\n",
      "                SELECT DISTINCT substr(teamKillers_AccountId, 3, 40) FROM output\n",
      "            )\n",
      "        )\n",
      "    )\n",
      "    \n",
      "    SELECT \"attacker.name\" AS name, COUNT(damage) AS damage_count, damageTypeCategory\n",
      "    FROM output\n",
      "    WHERE \"attacker.teamId\" = \"victim.teamId\"\n",
      "      AND \"attacker.name\" IN (SELECT name FROM name_cte)\n",
      "      AND \"victim.name\" IN (SELECT name FROM name_cte)\n",
      "      AND \"attacker.name\" != \"victim.name\"\n",
      "    GROUP BY \"attacker.name\", damageTypeCategory\n",
      "    ': no such column: damage\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,4,52,53,54,55,56,59,60,61,62,64,65,66,68,69,70,77,78,79,110,111,113,114,115,123,124,125,127,128,129,130,132,133,134,135,137,138,139,143,144,145,146,148,149,150,167,168,169,170,171,172,179,180,181,185,193,194,195,197,198,199,200,201,202,203,205,206,214,215,216,218,219,220,221,222,223,224,226,227,235,236,237,239,240,241,242,243,244,245,247,256,257,258,264,266,268,269,277,278,279,281,282,283,287,291,293,297,298,306,307,308,310,311,312,313,314,315) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "⚠️ 파일 output3137.csv 처리 중 오류 발생: Execution failed on sql '\n",
      "    WITH name_cte AS (\n",
      "        SELECT DISTINCT \"character.name\" AS name\n",
      "        FROM output\n",
      "        WHERE \"character.teamId\" IN (\n",
      "            SELECT DISTINCT \"character.teamId\"\n",
      "            FROM output\n",
      "            WHERE \"character.accountId\" IN (\n",
      "                SELECT DISTINCT substr(teamKillers_AccountId, 3, 40) FROM output\n",
      "            )\n",
      "        )\n",
      "    )\n",
      "    \n",
      "    SELECT \"attacker.name\" AS name, COUNT(damage) AS damage_count, damageTypeCategory\n",
      "    FROM output\n",
      "    WHERE \"attacker.teamId\" = \"victim.teamId\"\n",
      "      AND \"attacker.name\" IN (SELECT name FROM name_cte)\n",
      "      AND \"victim.name\" IN (SELECT name FROM name_cte)\n",
      "      AND \"attacker.name\" != \"victim.name\"\n",
      "    GROUP BY \"attacker.name\", damageTypeCategory\n",
      "    ': no such column: damage\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "⚠️ 파일 output3139.csv 처리 중 오류 발생: Execution failed on sql '\n",
      "    WITH name_cte AS (\n",
      "        SELECT DISTINCT \"character.name\" AS name\n",
      "        FROM output\n",
      "        WHERE \"character.teamId\" IN (\n",
      "            SELECT DISTINCT \"character.teamId\"\n",
      "            FROM output\n",
      "            WHERE \"character.accountId\" IN (\n",
      "                SELECT DISTINCT substr(teamKillers_AccountId, 3, 40) FROM output\n",
      "            )\n",
      "        )\n",
      "    )\n",
      "    \n",
      "    SELECT \"attacker.name\" AS name, COUNT(damage) AS damage_count, damageTypeCategory\n",
      "    FROM output\n",
      "    WHERE \"attacker.teamId\" = \"victim.teamId\"\n",
      "      AND \"attacker.name\" IN (SELECT name FROM name_cte)\n",
      "      AND \"victim.name\" IN (SELECT name FROM name_cte)\n",
      "      AND \"attacker.name\" != \"victim.name\"\n",
      "    GROUP BY \"attacker.name\", damageTypeCategory\n",
      "    ': no such column: damage\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,4,5,6,7,9,10,11,13,86,87,89,92,93,101,102,103,105,106,107,119,120,127,128,129,134,137,138,139,143,144) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "⚠️ 파일 output3140.csv 처리 중 오류 발생: Execution failed on sql '\n",
      "    WITH name_cte AS (\n",
      "        SELECT DISTINCT \"character.name\" AS name\n",
      "        FROM output\n",
      "        WHERE \"character.teamId\" IN (\n",
      "            SELECT DISTINCT \"character.teamId\"\n",
      "            FROM output\n",
      "            WHERE \"character.accountId\" IN (\n",
      "                SELECT DISTINCT substr(teamKillers_AccountId, 3, 40) FROM output\n",
      "            )\n",
      "        )\n",
      "    )\n",
      "    \n",
      "    SELECT \"attacker.name\" AS name, COUNT(damage) AS damage_count, damageTypeCategory\n",
      "    FROM output\n",
      "    WHERE \"attacker.teamId\" = \"victim.teamId\"\n",
      "      AND \"attacker.name\" IN (SELECT name FROM name_cte)\n",
      "      AND \"victim.name\" IN (SELECT name FROM name_cte)\n",
      "      AND \"attacker.name\" != \"victim.name\"\n",
      "    GROUP BY \"attacker.name\", damageTypeCategory\n",
      "    ': no such column: teamKillers_AccountId\n",
      "⚠️ 파일 output3141.csv 처리 중 오류 발생: Execution failed on sql '\n",
      "    WITH name_cte AS (\n",
      "        SELECT DISTINCT \"character.name\" AS name\n",
      "        FROM output\n",
      "        WHERE \"character.teamId\" IN (\n",
      "            SELECT DISTINCT \"character.teamId\"\n",
      "            FROM output\n",
      "            WHERE \"character.accountId\" IN (\n",
      "                SELECT DISTINCT substr(teamKillers_AccountId, 3, 40) FROM output\n",
      "            )\n",
      "        )\n",
      "    )\n",
      "    \n",
      "    SELECT \"attacker.name\" AS name, COUNT(damage) AS damage_count, damageTypeCategory\n",
      "    FROM output\n",
      "    WHERE \"attacker.teamId\" = \"victim.teamId\"\n",
      "      AND \"attacker.name\" IN (SELECT name FROM name_cte)\n",
      "      AND \"victim.name\" IN (SELECT name FROM name_cte)\n",
      "      AND \"attacker.name\" != \"victim.name\"\n",
      "    GROUP BY \"attacker.name\", damageTypeCategory\n",
      "    ': no such column: damage\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,4,42,44,45,49,50,51,52,53,54,55,57,58,59,61,62,63,70,71,72,108,112,113,115,116,124,125,126,128,129,130,131,132,133,134,136,138,139,140,141,143,144,145,146,147,148,165,166,167,168,169,170,177,178,179,183,191,192,193,195,196,197,198,199,200,201,203,204,212,213,214,216,217,218,219,220,221,222,224,225,233,234,235,237,238,239,240,241,242,243,245,254,255,256,260,263,265,268,269,277,278,279,281,282,283,285,289,290,292,296,297) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,4,56,57,58,59,61,62,63,65,66,67,74,75,76,107,108,109,110,112,113,114,115,117,118,119,120,121,123,124,125,133,134,135,137,138,139,140,141,142,143,145,146,147,164,165,166,167,168,169,176,177,178,182,190,191,192,194,195,196,197,198,199,200,202,203,211,212,213,215,216,217,218,219,220,221,223,224,232,233,234,236,237,238,239,240,241,242,244,253,254,255,260,262,266,267,275,276,277,279,280,281,284,288,295,297,298,299) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,4,17,52,53,54,55,57,58,59,138,141,168,169,245,246,263,265,269,270,278,279,280,282,283,284,285,289,293,295,296) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,4,24,25,44,46,47,50,51,52,53,54,55,57,58,59,61,62,63,70,71,72,108,109,111,112,113,121,122,123,125,126,127,128,129,130,131,133,135,136,137,154,155,156,157,158,159,166,167,168,172,180,181,182,184,185,186,187,188,189,190,192,193,201,202,203,205,206,207,208,209,210,211,213,214,222,223,224,226,227,228,229,230,231,232,234,243,244,245,250,251,253,254,255,256,258,259,260,265,268,269,277,278,279,281,282,283,286,290,292,293,297,298,306,307,308,310,311,312,314,315) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,4,52,53,56,57,58,59,60,61,62,64,65,66,68,69,70,77,78,79,110,112,113,114,115,117,118,119,120,124,125,127,128,136,137,138,140,141,142,143,144,145,146,148,149,150,167,168,169,170,179,180,181,185,193,194,195,197,198,199,200,201,202,203,205,206,214,215,216,218,219,220,221,222,223,224,226,227,235,236,237,239,240,241,242,243,244,245,247,256,257,258,263,265,266,268,269,277,278,279,281,282,283,285,289,291,296,297,305,306,307,309,310,311,314,315) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,4,24,25,44,46,47,49,50,51,52,53,54,55,57,58,59,61,62,63,70,71,72,108,109,111,112,113,121,122,123,125,126,127,128,130,131,132,133,135,136,137,143,144,145,146,148,149,150,167,168,169,170,171,172,179,180,181,185,193,194,195,197,198,199,200,201,202,203,205,206,214,215,216,218,219,220,221,222,223,224,226,227,235,236,237,239,240,241,242,243,244,245,247,256,257,258,262,265,267,268,276,277,278,280,281,282,284,286,290,293,295,296,304,305,306,308,309,310,311,314,315) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,4,24,25,26,27,29,30,31,84,85,87,88,89,97,98,99,101,102,103,107,108,115,116,117,129,132,135,136,137,138,139,140,144,149,154,155) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "⚠️ 파일 output3148.csv 처리 중 오류 발생: Execution failed on sql '\n",
      "    WITH name_cte AS (\n",
      "        SELECT DISTINCT \"character.name\" AS name\n",
      "        FROM output\n",
      "        WHERE \"character.teamId\" IN (\n",
      "            SELECT DISTINCT \"character.teamId\"\n",
      "            FROM output\n",
      "            WHERE \"character.accountId\" IN (\n",
      "                SELECT DISTINCT substr(teamKillers_AccountId, 3, 40) FROM output\n",
      "            )\n",
      "        )\n",
      "    )\n",
      "    \n",
      "    SELECT \"attacker.name\" AS name, COUNT(damage) AS damage_count, damageTypeCategory\n",
      "    FROM output\n",
      "    WHERE \"attacker.teamId\" = \"victim.teamId\"\n",
      "      AND \"attacker.name\" IN (SELECT name FROM name_cte)\n",
      "      AND \"victim.name\" IN (SELECT name FROM name_cte)\n",
      "      AND \"attacker.name\" != \"victim.name\"\n",
      "    GROUP BY \"attacker.name\", damageTypeCategory\n",
      "    ': no such column: teamKillers_AccountId\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,4,42,44,45,47,48,49,50,51,52,53,54,55,57,58,59,108,110,111,112,113,115,116,117,118,119,121,122,123,131,132,133,135,136,137,138,139,140,141,143,148,149,150,167,168,169,170,171,172,179,180,181,185,193,194,195,197,198,199,200,201,202,203,205,206,214,215,216,218,219,220,221,222,223,224,226,227,235,236,237,239,240,241,242,243,244,245,247,256,257,258,264,266,267,268,276,277,278,280,281,282,284,285,289,293,294,295,303,304,305,307,308,309,314,315) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,15,19,21,22,28,31,32,40,41,42,43,44,45,46,47,49,50,51,52,53,54,55,56,57,58,59,60,62,63,64,66,67,68,75,76,77,108,112,114,115,116,117,119,120,121,122,123,125,126,134,135,136,137,138,139,140,141,142,143,144,146,148,149,150,167,168,169,170,171,172,179,180,181,185,193,194,195,197,198,199,200,201,202,203,205,206,214,215,216,218,219,220,221,222,223,224,226,227,235,236,237,239,240,241,242,243,244,245,247,256,257,258,263,265,267,268,276,277,278,280,281,282,284,285,289,293,294,295,303,304,305,307,308,309,314,315) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,52,53,59,60,61,62,64,65,66,68,69,70,77,78,79,83,114,115,117,118,126,127,128,130,131,132,134,135,137,138,139,156,157,158,159,168,169,170,174,175,177,179,180,188,189,190,192,193,194,195,196,197,198,200,201,209,210,211,213,214,215,216,217,218,219,221,230,231,232,236,238,239,240,241,243,244,245,247,249,251,255,261,262,263,264,272,273,274,276,277,278,280,281,282) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,4,24,25,26,50,51,52,53,54,55,57,58,59,61,62,63,70,71,72,136,141,142,144,145,146,163,164,165,166,167,168,175,176,177,181,182,183,184,186,187,195,196,197,199,200,201,202,203,204,205,207,208,216,217,218,220,221,222,223,224,225,226,228,237,238,239,244,246,247,248,250,258,259,260,262,263,264,265,266,274,275,276,278,279,280,284,285,289,291,294,295,303,304,305,307,308,309,314,315) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,17,42,44,45,52,53,54,55,57,58,59,61,62,63,70,71,72,108,109,111,112,113,121,122,123,124,125,126,127,128,130,131,132,133,135,136,137,138,139,140,141,144,145,148,149,150,167,168,169,170,171,172,179,180,181,185,186,187,188,190,191,199,200,201,203,204,205,206,207,208,209,211,212,220,221,222,224,225,226,227,228,229,230,232,233,234,241,242,243,247,255,256,257,259,260,261,267,268,269,277,278,279,281,282,283,284,288,290,294,296,297,305,306,307,309,310,311,312,313) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,42,44,45,52,53,54,55,57,58,59,61,62,63,70,71,72,108,112,113,115,116,124,125,126,128,129,130,131,132,133,134,136,138,140,141,142,143,145,146,147,148,149,150,167,168,169,170,171,172,179,180,181,185,193,194,195,197,198,199,200,201,202,203,205,206,214,215,216,218,219,220,221,222,223,224,226,227,235,236,237,239,240,241,242,243,244,245,247,248,249,256,257,258,263,267,268,269,277,278,279,281,282,283,287,291,292,293,301,302,303,305,306,307,309,313,314) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,4,44,46,47,52,53,54,55,57,58,59,143,144,146,147,148,149,151,152,153,170,171,172,173,174,175,182,183,184,188,196,197,198,200,201,202,203,204,205,206,208,209,217,218,219,221,222,223,224,225,226,227,229,230,238,239,240,242,243,244,245,246,247,248,250,251,252,259,260,261,268,269,270,278,279,280,282,283,284,285,289,291,292,300,301,302,304,305,306,309,311,314,315) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,4,42,44,45,52,53,54,55,57,58,59,61,62,63,70,71,72,108,110,111,112,113,115,116,117,118,119,121,122,123,131,132,133,135,136,137,138,139,140,141,143,145,146,147,164,165,166,167,168,169,176,177,178,182,190,191,192,194,195,196,197,198,199,200,202,203,211,212,213,215,216,217,218,219,220,221,223,224,232,233,234,236,237,238,239,240,241,242,244,245,246,253,254,255,263,268,269,270,278,279,280,282,283,284,286,287,295,296,297,299,300,301,302,306,308,313,314) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "⚠️ 파일 output3157.csv 처리 중 오류 발생: Execution failed on sql '\n",
      "    WITH name_cte AS (\n",
      "        SELECT DISTINCT \"character.name\" AS name\n",
      "        FROM output\n",
      "        WHERE \"character.teamId\" IN (\n",
      "            SELECT DISTINCT \"character.teamId\"\n",
      "            FROM output\n",
      "            WHERE \"character.accountId\" IN (\n",
      "                SELECT DISTINCT substr(teamKillers_AccountId, 3, 40) FROM output\n",
      "            )\n",
      "        )\n",
      "    )\n",
      "    \n",
      "    SELECT \"attacker.name\" AS name, COUNT(damage) AS damage_count, damageTypeCategory\n",
      "    FROM output\n",
      "    WHERE \"attacker.teamId\" = \"victim.teamId\"\n",
      "      AND \"attacker.name\" IN (SELECT name FROM name_cte)\n",
      "      AND \"victim.name\" IN (SELECT name FROM name_cte)\n",
      "      AND \"attacker.name\" != \"victim.name\"\n",
      "    GROUP BY \"attacker.name\", damageTypeCategory\n",
      "    ': no such column: damage\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,4,52,53,59,60,61,62,64,65,66,68,69,70,77,78,79,110,111,113,114,115,123,124,125,127,128,129,130,132,133,134,135,137,138,139,140,141,142,143,145,146,147,164,165,166,167,168,169,176,177,178,182,190,191,192,194,195,196,197,198,199,200,202,203,211,212,213,215,216,217,218,219,220,221,223,224,232,233,234,236,237,238,239,240,241,242,244,253,254,255,263,265,267,268,276,277,278,280,281,282,284,288,291,292,293,301,302,303,305,306,307,309,312,313) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "⚠️ 파일 output3159.csv 처리 중 오류 발생: Execution failed on sql '\n",
      "    WITH name_cte AS (\n",
      "        SELECT DISTINCT \"character.name\" AS name\n",
      "        FROM output\n",
      "        WHERE \"character.teamId\" IN (\n",
      "            SELECT DISTINCT \"character.teamId\"\n",
      "            FROM output\n",
      "            WHERE \"character.accountId\" IN (\n",
      "                SELECT DISTINCT substr(teamKillers_AccountId, 3, 40) FROM output\n",
      "            )\n",
      "        )\n",
      "    )\n",
      "    \n",
      "    SELECT \"attacker.name\" AS name, COUNT(damage) AS damage_count, damageTypeCategory\n",
      "    FROM output\n",
      "    WHERE \"attacker.teamId\" = \"victim.teamId\"\n",
      "      AND \"attacker.name\" IN (SELECT name FROM name_cte)\n",
      "      AND \"victim.name\" IN (SELECT name FROM name_cte)\n",
      "      AND \"attacker.name\" != \"victim.name\"\n",
      "    GROUP BY \"attacker.name\", damageTypeCategory\n",
      "    ': no such column: teamKillers_AccountId\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,4,42,44,45,47,48,49,50,51,52,53,54,55,57,58,59,61,62,63,70,71,72,108,112,114,115,116,117,119,120,121,122,123,125,126,134,135,136,138,139,140,141,142,143,144,146,148,149,150,167,168,169,170,171,172,179,180,181,185,193,194,195,197,198,199,200,201,202,203,205,206,214,215,216,218,219,220,221,222,223,224,226,227,235,236,237,239,240,241,242,243,244,245,247,256,257,258,263,265,266,267,275,276,277,279,280,281,287,291,293,295,296,304,305,306,308,309,310,313,314) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,4,42,44,45,47,48,49,50,51,52,53,54,55,57,58,59,108,110,111,112,113,115,116,117,118,119,121,122,123,131,132,133,135,136,137,138,139,140,141,143,145,146,147,164,165,166,167,168,169,176,177,178,182,190,191,192,194,195,196,197,198,199,200,202,203,211,212,213,215,216,217,218,219,220,221,223,224,232,233,234,236,237,238,239,240,241,242,244,245,246,253,254,255,263,264,265,273,274,275,277,278,279,281,284,288,292,297,298) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "⚠️ 파일 output3162.csv 처리 중 오류 발생: Execution failed on sql '\n",
      "    WITH name_cte AS (\n",
      "        SELECT DISTINCT \"character.name\" AS name\n",
      "        FROM output\n",
      "        WHERE \"character.teamId\" IN (\n",
      "            SELECT DISTINCT \"character.teamId\"\n",
      "            FROM output\n",
      "            WHERE \"character.accountId\" IN (\n",
      "                SELECT DISTINCT substr(teamKillers_AccountId, 3, 40) FROM output\n",
      "            )\n",
      "        )\n",
      "    )\n",
      "    \n",
      "    SELECT \"attacker.name\" AS name, COUNT(damage) AS damage_count, damageTypeCategory\n",
      "    FROM output\n",
      "    WHERE \"attacker.teamId\" = \"victim.teamId\"\n",
      "      AND \"attacker.name\" IN (SELECT name FROM name_cte)\n",
      "      AND \"victim.name\" IN (SELECT name FROM name_cte)\n",
      "      AND \"attacker.name\" != \"victim.name\"\n",
      "    GROUP BY \"attacker.name\", damageTypeCategory\n",
      "    ': no such column: damage\n",
      "⚠️ 파일 output3163.csv 처리 중 오류 발생: Execution failed on sql '\n",
      "    WITH name_cte AS (\n",
      "        SELECT DISTINCT \"character.name\" AS name\n",
      "        FROM output\n",
      "        WHERE \"character.teamId\" IN (\n",
      "            SELECT DISTINCT \"character.teamId\"\n",
      "            FROM output\n",
      "            WHERE \"character.accountId\" IN (\n",
      "                SELECT DISTINCT substr(teamKillers_AccountId, 3, 40) FROM output\n",
      "            )\n",
      "        )\n",
      "    )\n",
      "    \n",
      "    SELECT \"attacker.name\" AS name, COUNT(damage) AS damage_count, damageTypeCategory\n",
      "    FROM output\n",
      "    WHERE \"attacker.teamId\" = \"victim.teamId\"\n",
      "      AND \"attacker.name\" IN (SELECT name FROM name_cte)\n",
      "      AND \"victim.name\" IN (SELECT name FROM name_cte)\n",
      "      AND \"attacker.name\" != \"victim.name\"\n",
      "    GROUP BY \"attacker.name\", damageTypeCategory\n",
      "    ': no such column: damage\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,4,17,24,25,40,44,46,47,52,53,54,55,57,58,59,108,112,114,115,116,117,119,120,121,122,123,125,126,134,135,136,137,138,139,140,141,143,144,145,146,149,150,151,152,169,170,171,172,173,174,181,182,183,187,195,196,197,198,199,200,201,202,203,204,205,207,208,216,217,218,219,220,221,222,223,224,225,226,228,229,237,238,239,240,241,242,243,244,245,246,247,249,250,251,258,259,260,265,267,268,276,277,278,280,281,282,285,289,291,292,296,297) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,4,42,44,45,49,50,51,52,53,54,55,57,58,59,61,62,63,70,71,72,108,109,111,112,113,121,122,123,125,126,127,128,130,131,132,133,135,136,137,139,140,141,142,145,146,151,152,153,170,171,172,173,174,175,182,183,184,188,196,197,198,200,201,202,203,204,205,206,208,209,217,218,219,221,222,223,224,225,226,227,229,230,238,239,240,242,243,244,245,246,247,248,250,251,252,259,260,261,266,268,269,277,278,279,281,282,283,286,290,292,294,295,303,304,305,307,308,309,311,314,315) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,4,42,44,45,47,48,49,52,53,54,55,57,58,59,61,62,63,70,71,72,108,110,111,112,113,115,116,117,118,119,121,122,123,131,132,133,135,136,137,141,142,143,144,146,149,150,151,152,169,170,171,172,173,174,181,182,183,187,195,196,197,199,200,201,202,203,204,205,207,208,216,217,218,220,221,222,223,224,225,226,228,229,237,238,239,241,242,243,244,245,246,247,249,250,251,258,259,260,264,265,273,274,275,277,278,279,281,285,289,293,295,297,298) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,20,42,44,45,47,48,49,50,51,52,54,55,56,58,59,60,67,68,69,105,106,107,116,138,139,140,141,143,144,145,162,163,164,165,174,175,176,180,188,189,190,192,193,194,195,196,197,198,200,201,209,210,211,213,214,215,216,217,218,219,221,222,230,231,232,234,235,236,237,238,239,240,242,243,244,251,252,253,258,259,266,268,272,273,274,282,283,284,286,287,288,295,296,297) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,4,42,44,45,47,48,52,53,54,55,57,58,59,61,62,63,70,71,72,132,134,135,136,137,139,140,141,142,144,145,146,147,149,150,151,168,169,170,171,172,173,180,181,182,186,194,195,196,198,199,200,201,202,203,204,206,207,215,216,217,219,220,221,222,223,224,225,227,228,236,237,238,240,241,242,243,244,245,246,248,249,250,257,258,259,266,268,269,270,278,279,280,282,283,284,287,291,292,293,301,302,303,305,306,307,309,310,311) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,59,60,61,62,64,65,66,68,69,70,77,78,79,110,111,113,114,115,123,124,125,127,128,129,130,131,132,133,135,136,137,154,155,156,157,158,159,166,167,168,172,180,181,182,184,185,186,187,188,189,190,192,193,201,202,203,205,206,207,208,209,210,211,213,214,222,223,224,226,227,228,229,230,231,232,234,243,244,245,250,252,253,254,255,257,258,259,261,263,264,265,273,274,275,277,278,279,286,290,292,295,296,297,305,306,307,309,310,311,314,315) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "⚠️ 파일 output3170.csv 처리 중 오류 발생: Execution failed on sql '\n",
      "    WITH name_cte AS (\n",
      "        SELECT DISTINCT \"character.name\" AS name\n",
      "        FROM output\n",
      "        WHERE \"character.teamId\" IN (\n",
      "            SELECT DISTINCT \"character.teamId\"\n",
      "            FROM output\n",
      "            WHERE \"character.accountId\" IN (\n",
      "                SELECT DISTINCT substr(teamKillers_AccountId, 3, 40) FROM output\n",
      "            )\n",
      "        )\n",
      "    )\n",
      "    \n",
      "    SELECT \"attacker.name\" AS name, COUNT(damage) AS damage_count, damageTypeCategory\n",
      "    FROM output\n",
      "    WHERE \"attacker.teamId\" = \"victim.teamId\"\n",
      "      AND \"attacker.name\" IN (SELECT name FROM name_cte)\n",
      "      AND \"victim.name\" IN (SELECT name FROM name_cte)\n",
      "      AND \"attacker.name\" != \"victim.name\"\n",
      "    GROUP BY \"attacker.name\", damageTypeCategory\n",
      "    ': no such column: damage\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,23,26,27,28,29,31,32,33,35,36,37,44,45,46,93,96,97,99,100,101,109,110,111,113,114,115,116,124,125,126,128,129,130,132,133,135,136,137,139,140,141,142,143,145,147,148,149,166,167,168,169,178,179,180,184,192,193,194,196,197,198,199,200,201,202,204,205,213,214,215,217,218,219,220,221,222,223,225,226,234,235,236,238,239,240,241,242,243,244,246,247,248,255,256,257,263,269,273,278,279,280) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,20,42,44,45,49,50,51,52,54,55,56,58,59,60,67,68,69,113,116,117,119,138,139,140,141,143,146,147,148,149,166,167,168,169,170,171,178,179,180,184,192,193,194,196,197,198,199,200,201,202,204,205,213,214,215,217,218,219,220,221,222,223,225,226,234,235,236,238,239,240,241,242,243,244,246,247,248,255,256,257,263,268,272,276,278,279,287,288,289,291,292,293,294,295) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,4,24,25,44,46,47,49,50,51,52,54,55,56,58,59,60,67,68,69,116,139,140,142,143,144,161,162,163,164,165,166,173,174,175,179,180,182,184,185,193,194,195,197,198,199,200,201,202,203,205,206,214,215,216,218,219,220,221,222,223,224,226,227,228,235,236,237,245,248,251,252,256,258,259,267,268,269,271,272,273,277,280,281) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "⚠️ 파일 output3173.csv 처리 중 오류 발생: Execution failed on sql '\n",
      "    WITH name_cte AS (\n",
      "        SELECT DISTINCT \"character.name\" AS name\n",
      "        FROM output\n",
      "        WHERE \"character.teamId\" IN (\n",
      "            SELECT DISTINCT \"character.teamId\"\n",
      "            FROM output\n",
      "            WHERE \"character.accountId\" IN (\n",
      "                SELECT DISTINCT substr(teamKillers_AccountId, 3, 40) FROM output\n",
      "            )\n",
      "        )\n",
      "    )\n",
      "    \n",
      "    SELECT \"attacker.name\" AS name, COUNT(damage) AS damage_count, damageTypeCategory\n",
      "    FROM output\n",
      "    WHERE \"attacker.teamId\" = \"victim.teamId\"\n",
      "      AND \"attacker.name\" IN (SELECT name FROM name_cte)\n",
      "      AND \"victim.name\" IN (SELECT name FROM name_cte)\n",
      "      AND \"attacker.name\" != \"victim.name\"\n",
      "    GROUP BY \"attacker.name\", damageTypeCategory\n",
      "    ': no such column: damage\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,4,42,44,45,47,48,49,50,51,52,53,54,55,57,58,59,61,108,110,111,112,113,115,116,117,118,119,121,122,123,131,132,133,135,136,137,141,142,143,144,146,148,149,150,167,168,169,170,171,172,179,180,181,185,193,194,195,197,198,199,200,201,202,203,205,206,214,215,216,218,219,220,221,222,223,224,226,227,235,236,237,239,240,241,242,243,244,245,247,248,249,256,257,258,263,265,267,268,276,277,278,280,281,282,284,288,289,291,292,300,301,302,304,305,306,313,314,315) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,20,42,44,45,49,50,51,52,54,55,56,58,59,60,67,68,69,118,122,123,125,126,134,135,136,138,139,140,141,142,143,144,147,148,149,150,167,168,169,170,179,180,181,185,193,194,195,197,198,199,200,201,202,203,205,206,214,215,216,218,219,220,221,222,223,224,226,227,235,236,237,239,240,241,242,243,244,245,247,248,249,256,257,258,262,266,268,269,277,278,279,281,282,283,284,288,290,294,295) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "⚠️ 파일 output3176.csv 처리 중 오류 발생: Execution failed on sql '\n",
      "    WITH name_cte AS (\n",
      "        SELECT DISTINCT \"character.name\" AS name\n",
      "        FROM output\n",
      "        WHERE \"character.teamId\" IN (\n",
      "            SELECT DISTINCT \"character.teamId\"\n",
      "            FROM output\n",
      "            WHERE \"character.accountId\" IN (\n",
      "                SELECT DISTINCT substr(teamKillers_AccountId, 3, 40) FROM output\n",
      "            )\n",
      "        )\n",
      "    )\n",
      "    \n",
      "    SELECT \"attacker.name\" AS name, COUNT(damage) AS damage_count, damageTypeCategory\n",
      "    FROM output\n",
      "    WHERE \"attacker.teamId\" = \"victim.teamId\"\n",
      "      AND \"attacker.name\" IN (SELECT name FROM name_cte)\n",
      "      AND \"victim.name\" IN (SELECT name FROM name_cte)\n",
      "      AND \"attacker.name\" != \"victim.name\"\n",
      "    GROUP BY \"attacker.name\", damageTypeCategory\n",
      "    ': no such column: damage\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "⚠️ 파일 output3178.csv 처리 중 오류 발생: Execution failed on sql '\n",
      "    WITH name_cte AS (\n",
      "        SELECT DISTINCT \"character.name\" AS name\n",
      "        FROM output\n",
      "        WHERE \"character.teamId\" IN (\n",
      "            SELECT DISTINCT \"character.teamId\"\n",
      "            FROM output\n",
      "            WHERE \"character.accountId\" IN (\n",
      "                SELECT DISTINCT substr(teamKillers_AccountId, 3, 40) FROM output\n",
      "            )\n",
      "        )\n",
      "    )\n",
      "    \n",
      "    SELECT \"attacker.name\" AS name, COUNT(damage) AS damage_count, damageTypeCategory\n",
      "    FROM output\n",
      "    WHERE \"attacker.teamId\" = \"victim.teamId\"\n",
      "      AND \"attacker.name\" IN (SELECT name FROM name_cte)\n",
      "      AND \"victim.name\" IN (SELECT name FROM name_cte)\n",
      "      AND \"attacker.name\" != \"victim.name\"\n",
      "    GROUP BY \"attacker.name\", damageTypeCategory\n",
      "    ': no such column: damage\n",
      "⚠️ 파일 output3179.csv 처리 중 오류 발생: Execution failed on sql '\n",
      "    WITH name_cte AS (\n",
      "        SELECT DISTINCT \"character.name\" AS name\n",
      "        FROM output\n",
      "        WHERE \"character.teamId\" IN (\n",
      "            SELECT DISTINCT \"character.teamId\"\n",
      "            FROM output\n",
      "            WHERE \"character.accountId\" IN (\n",
      "                SELECT DISTINCT substr(teamKillers_AccountId, 3, 40) FROM output\n",
      "            )\n",
      "        )\n",
      "    )\n",
      "    \n",
      "    SELECT \"attacker.name\" AS name, COUNT(damage) AS damage_count, damageTypeCategory\n",
      "    FROM output\n",
      "    WHERE \"attacker.teamId\" = \"victim.teamId\"\n",
      "      AND \"attacker.name\" IN (SELECT name FROM name_cte)\n",
      "      AND \"victim.name\" IN (SELECT name FROM name_cte)\n",
      "      AND \"attacker.name\" != \"victim.name\"\n",
      "    GROUP BY \"attacker.name\", damageTypeCategory\n",
      "    ': no such column: damage\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,4,59,60,61,62,64,65,66,68,69,70,77,78,79,110,111,113,114,115,123,124,125,127,128,129,130,132,133,134,135,137,138,139,140,141,142,143,145,146,147,164,165,166,167,168,169,176,177,178,182,190,191,192,194,195,196,197,198,199,200,202,203,211,212,213,215,216,217,218,219,220,221,223,224,232,233,234,236,237,238,239,240,241,242,244,253,254,255,261,263,264,265,273,274,275,277,278,279,285,289,292,294,295) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,42,44,45,47,48,49,50,51,52,53,54,55,57,58,59,61,62,63,70,71,72,142,143,145,146,147,164,165,166,167,176,177,178,182,183,184,185,187,188,196,197,198,200,201,202,203,204,205,206,208,209,217,218,219,221,222,223,224,225,226,227,229,238,239,240,245,246,247,248,250,258,259,260,262,263,264,266,267,275,276,277,279,280,281,283,286,290,292,293,294,302,303,304,306,307,308,311,312) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,52,53,56,57,58,59,61,62,63,65,66,67,74,75,76,107,108,109,110,112,113,114,115,117,118,119,120,121,123,124,125,133,134,135,137,138,139,140,141,142,143,145,146,147,164,165,166,167,168,169,176,177,178,182,190,191,192,194,195,196,197,198,199,200,202,203,211,212,213,215,216,217,218,219,220,221,223,224,232,233,234,236,237,238,239,240,241,242,244,245,246,253,254,255,260,266,268,272,274,275,276,284,285,286,288,289,290,295,296,304,305,306,308,309,310,313,314) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,4,59,60,61,62,64,65,66,68,69,70,77,78,79,110,111,113,114,115,123,124,125,127,128,129,130,131,132,133,135,137,138,139,140,142,143,144,145,146,147,164,165,166,167,168,169,176,177,178,182,190,191,192,194,195,196,197,198,199,200,202,203,211,212,213,215,216,217,218,219,220,221,223,224,232,233,234,236,237,238,239,240,241,242,244,253,254,255,260,265,267,268,276,277,278,280,281,282,284,288,290,294,295,303,304,305,307,308,309,313,314) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,4,42,44,45,47,48,49,50,51,52,53,54,55,57,58,59,108,109,111,112,113,121,122,123,125,126,127,128,130,131,132,133,135,136,137,138,140,141,142,143,145,146,147,164,165,166,167,168,169,176,177,178,182,190,191,192,194,195,196,197,198,199,200,202,203,211,212,213,215,216,217,218,219,220,221,223,224,232,233,234,236,237,238,239,240,241,242,244,245,246,253,254,255,260,265,268,269,277,278,279,281,282,283,284,288,289,294,295,303,304,305,307,308,309,311,314,315) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,4,42,44,45,52,53,54,55,57,58,59,61,62,63,70,71,72,108,109,111,112,113,121,122,123,125,126,127,128,130,131,132,133,135,136,137,138,139,140,141,143,148,149,150,167,168,169,170,171,172,179,180,181,185,193,194,195,197,198,199,200,201,202,203,205,206,214,215,216,218,219,220,221,222,223,224,226,227,235,236,237,239,240,241,242,243,244,245,247,256,257,258,264,266,267,268,276,277,278,280,281,282,283,285,289,291,292,293,301,302,303,305,306,307,314,315) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,23,42,44,45,47,48,49,50,51,52,54,55,56,58,59,60,67,68,69,105,106,107,109,128,130,131,132,133,135,136,137,138,139,140,141,144,146,147,148,165,166,167,168,177,178,179,183,191,192,193,195,196,197,198,199,200,201,203,204,212,213,214,216,217,218,219,220,221,222,224,225,233,234,235,237,238,239,240,241,242,243,245,254,255,256,261,266,267,275,276,277,279,280,281,282,286,289,296,297,298) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,4,42,44,45,47,48,49,50,51,52,53,54,55,57,58,59,61,62,63,70,71,72,108,110,111,112,113,115,116,117,118,119,121,122,123,131,132,133,135,136,137,138,139,140,141,146,148,149,150,167,168,169,170,171,172,179,180,181,185,193,194,195,197,198,199,200,201,202,203,205,206,214,215,216,218,219,220,221,222,223,224,226,227,235,236,237,239,240,241,242,243,244,245,247,248,249,256,257,258,264,265,266,274,275,276,278,279,280,282,285,289,291,294,295,303,304,305,307,308,309,311,312) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,20,24,25,26,27,29,30,31,33,34,35,42,43,44,117,118,137,139,140,142,145,146,148,149,150,167,168,169,170,171,172,179,180,181,185,193,194,195,197,198,199,200,201,202,203,205,206,214,215,216,218,219,220,221,222,223,224,226,227,235,236,237,239,240,241,242,243,244,245,247,248,249,256,257,258,266,270,274,277,278,279,287,288,289,291,292,293,295,296) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,4,52,53,54,55,56,59,60,61,62,64,65,66,68,69,70,77,78,79,110,112,113,114,115,117,118,119,120,124,125,127,128,136,137,138,140,141,142,143,144,145,146,148,149,150,167,168,169,170,179,180,181,185,193,194,195,197,198,199,200,201,202,203,205,206,214,215,216,218,219,220,221,222,223,224,226,227,235,236,237,239,240,241,242,243,244,245,247,256,257,258,263,265,268,269,277,278,279,281,282,283,286,287,291,294,298,299,307,308,309,311,312,313,314,315) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,20,42,44,45,47,48,49,50,51,52,54,55,56,58,59,60,67,68,69,129,141,143,144,145,162,163,164,165,166,167,174,175,176,180,188,189,190,192,193,194,195,196,197,198,200,201,209,210,211,213,214,215,216,217,218,219,221,222,230,231,232,234,235,236,237,238,239,240,242,243,244,251,252,253,257,260,266,267,271,276,277,285,286,287,289,290,291,293,295,296) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,4,24,25,44,46,47,49,50,51,52,53,54,55,57,58,59,61,62,63,70,71,72,108,109,111,112,113,121,122,123,125,126,127,128,129,130,131,133,135,137,138,139,140,142,143,144,145,146,147,164,165,166,167,168,169,176,177,178,182,190,191,192,194,195,196,197,198,199,200,202,203,211,212,213,215,216,217,218,219,220,221,223,224,232,233,234,236,237,238,239,240,241,242,244,253,254,255,263,265,268,269,277,278,279,281,282,283,285,289,290,292,294,295,303,304,305,307,308,309,311,312) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,4,17,24,25,40,44,46,47,49,50,51,52,53,54,55,57,58,59,61,62,63,70,71,72,108,110,111,112,113,115,116,117,118,119,121,122,123,131,132,133,134,135,136,137,138,139,140,141,146,148,149,157,158,159,161,162,163,165,166,167,168,185,186,187,188,189,190,197,198,199,203,211,212,213,215,216,217,218,219,220,221,223,224,232,233,234,236,237,238,239,240,241,242,244,245,253,254,255,257,258,259,260,261,262,263,265,274,275,276,281,285,289,290,293,294,302,303,304,306,307,308,310,312,313) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,17,38,52,53,54,55,57,58,59,61,169,170,264,265,266,274,275,276,278,279,280,286,290,291,294,298,299) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "⚠️ 파일 output3193.csv 처리 중 오류 발생: Execution failed on sql '\n",
      "    WITH name_cte AS (\n",
      "        SELECT DISTINCT \"character.name\" AS name\n",
      "        FROM output\n",
      "        WHERE \"character.teamId\" IN (\n",
      "            SELECT DISTINCT \"character.teamId\"\n",
      "            FROM output\n",
      "            WHERE \"character.accountId\" IN (\n",
      "                SELECT DISTINCT substr(teamKillers_AccountId, 3, 40) FROM output\n",
      "            )\n",
      "        )\n",
      "    )\n",
      "    \n",
      "    SELECT \"attacker.name\" AS name, COUNT(damage) AS damage_count, damageTypeCategory\n",
      "    FROM output\n",
      "    WHERE \"attacker.teamId\" = \"victim.teamId\"\n",
      "      AND \"attacker.name\" IN (SELECT name FROM name_cte)\n",
      "      AND \"victim.name\" IN (SELECT name FROM name_cte)\n",
      "      AND \"attacker.name\" != \"victim.name\"\n",
      "    GROUP BY \"attacker.name\", damageTypeCategory\n",
      "    ': no such column: damage\n",
      "⚠️ 파일 output3194.csv 처리 중 오류 발생: Execution failed on sql '\n",
      "    WITH name_cte AS (\n",
      "        SELECT DISTINCT \"character.name\" AS name\n",
      "        FROM output\n",
      "        WHERE \"character.teamId\" IN (\n",
      "            SELECT DISTINCT \"character.teamId\"\n",
      "            FROM output\n",
      "            WHERE \"character.accountId\" IN (\n",
      "                SELECT DISTINCT substr(teamKillers_AccountId, 3, 40) FROM output\n",
      "            )\n",
      "        )\n",
      "    )\n",
      "    \n",
      "    SELECT \"attacker.name\" AS name, COUNT(damage) AS damage_count, damageTypeCategory\n",
      "    FROM output\n",
      "    WHERE \"attacker.teamId\" = \"victim.teamId\"\n",
      "      AND \"attacker.name\" IN (SELECT name FROM name_cte)\n",
      "      AND \"victim.name\" IN (SELECT name FROM name_cte)\n",
      "      AND \"attacker.name\" != \"victim.name\"\n",
      "    GROUP BY \"attacker.name\", damageTypeCategory\n",
      "    ': no such column: damage\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,4,5,6,7,9,10,11,13,104,122,136,141,142,144,145,147,148,149,166,167,168,169,178,179,180,184,185,187,189,190,198,199,200,202,203,204,205,206,207,208,210,211,219,220,221,223,224,225,226,227,228,229,231,240,241,242,250,251) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,4,52,53,54,55,57,58,59,140,141,143,144,145,146,148,149,150,167,168,169,170,171,172,179,180,181,185,193,194,195,197,198,199,200,201,202,203,205,206,214,215,216,218,219,220,221,222,223,224,226,227,235,236,237,239,240,241,242,243,244,245,247,248,249,256,257,258,263,264,265,273,274,275,277,278,279,282,286,293,294,302,303,304,306,307,308,310,311,314,315) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,4,17,42,44,45,47,48,49,50,51,52,53,54,55,57,58,59,108,109,111,112,113,121,122,123,125,126,127,131,133,134,135,136,138,139,140,141,142,143,144,146,148,149,150,167,168,169,170,171,172,179,180,181,185,193,194,195,197,198,199,200,201,202,203,205,206,214,215,216,218,219,220,221,222,223,224,226,227,235,236,237,239,240,241,242,243,244,245,247,256,257,258,264,266,267,268,276,277,278,280,281,282,284,288,290,293,294,295,303,304,305,307,308,309,312,313) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "⚠️ 파일 output3199.csv 처리 중 오류 발생: Execution failed on sql '\n",
      "    WITH name_cte AS (\n",
      "        SELECT DISTINCT \"character.name\" AS name\n",
      "        FROM output\n",
      "        WHERE \"character.teamId\" IN (\n",
      "            SELECT DISTINCT \"character.teamId\"\n",
      "            FROM output\n",
      "            WHERE \"character.accountId\" IN (\n",
      "                SELECT DISTINCT substr(teamKillers_AccountId, 3, 40) FROM output\n",
      "            )\n",
      "        )\n",
      "    )\n",
      "    \n",
      "    SELECT \"attacker.name\" AS name, COUNT(damage) AS damage_count, damageTypeCategory\n",
      "    FROM output\n",
      "    WHERE \"attacker.teamId\" = \"victim.teamId\"\n",
      "      AND \"attacker.name\" IN (SELECT name FROM name_cte)\n",
      "      AND \"victim.name\" IN (SELECT name FROM name_cte)\n",
      "      AND \"attacker.name\" != \"victim.name\"\n",
      "    GROUP BY \"attacker.name\", damageTypeCategory\n",
      "    ': no such column: damage\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,4,17,38,47,48,49,50,51,52,53,54,55,57,58,59,61,62,63,70,71,72,108,110,111,112,113,115,116,117,118,122,123,125,126,134,135,136,137,138,139,140,143,144,145,146,148,149,150,167,168,169,170,171,172,179,180,181,185,193,194,195,197,198,199,200,201,202,203,205,206,214,215,216,218,219,220,221,222,223,224,226,227,235,236,237,239,240,241,242,243,244,245,247,256,257,258,263,265,268,269,277,278,279,281,282,283,284,288,291,292,300,301,302,304,305,306,310,311,312) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,20,24,25,44,46,47,49,50,51,52,54,55,56,58,59,60,67,68,69,106,107,116,119,138,139,140,141,147,148,150,151,152,169,170,171,172,173,174,181,182,183,187,195,196,197,199,200,201,202,203,204,205,207,208,216,217,218,220,221,222,223,224,225,226,228,229,237,238,239,241,242,243,244,245,246,247,249,250,251,258,259,260,265,269,273,277,278,286,287,288,290,291,292,294,295,296) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,50,51,52,53,54,55,57,58,59,61,62,63,70,71,72,144,148,149,150,167,168,169,170,171,172,179,180,181,185,193,194,195,197,198,199,200,201,202,203,205,206,214,215,216,218,219,220,221,222,223,224,226,227,235,236,237,239,240,241,242,243,244,245,247,256,257,258,263,266,268,269,277,278,279,281,282,283,284,288,290,291,299,300,301,303,304,305,306,309,310,311) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,4,42,44,45,49,50,51,52,54,55,56,58,113,139,140,142,143,144,161,162,163,164,173,174,175,179,180,182,184,185,193,194,195,197,198,199,200,201,202,203,205,206,214,215,216,218,219,220,221,222,223,224,226,227,228,235,236,237,242,243,250,251,255,261,262,263) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,47,48,49,50,51,52,53,54,55,57,58,59,131,134,171,172,248,249,264,265,267,269,270,278,279,280,282,283,284,285,289,293,295,296) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,4,42,44,45,47,48,49,50,51,52,53,54,55,57,58,59,61,62,63,70,71,72,108,110,111,112,113,115,116,117,118,119,121,122,123,131,132,133,135,136,137,138,139,140,141,147,148,149,166,167,168,169,170,171,178,179,180,184,185,186,187,189,190,198,199,200,202,203,204,205,206,207,208,210,211,219,220,221,223,224,225,226,227,228,229,231,232,233,240,241,242,246,254,255,256,258,259,260,261,264,266,267,268,276,277,278,280,281,282,284,285,289,291,292,293,301,302,303,305,306,307,314,315) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,23,24,25,26,27,29,30,31,33,34,35,42,43,44,132,140,141,143,144,145,146,149,150,151,152,169,170,171,172,181,182,183,187,195,196,197,199,200,201,202,203,204,205,207,208,216,217,218,220,221,222,223,224,225,226,228,229,237,238,239,241,242,243,244,245,246,247,249,250,251,258,259,260,265,268,272,277,278,279,287,288,289,291,292,293,294,295) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,4,17,38,48,49,52,53,54,55,57,58,59,61,62,63,70,71,72,134,148,149,150,167,168,169,170,171,172,179,180,181,185,193,194,195,196,197,198,199,200,201,202,203,205,206,214,215,216,217,218,219,220,221,222,223,224,226,227,235,236,237,238,239,240,241,242,243,244,245,247,256,257,258,263,265,267,268,276,277,278,279,280,281,282,284,288,292,293,301,302,303,305,306,307,310,313,314) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,4,42,44,45,47,48,49,50,51,52,53,54,55,57,58,59,61,62,63,70,71,72,108,109,111,112,113,121,122,123,125,126,127,129,131,132,133,134,136,137,138,142,144,145,146,147,149,150,151,168,169,170,171,172,173,180,181,182,186,194,195,196,198,199,200,201,202,203,204,206,207,215,216,217,219,220,221,222,223,224,225,227,228,236,237,238,240,241,242,243,244,245,246,248,249,250,257,258,259,264,266,268,269,277,278,279,281,282,283,285,286,290,293,294,295) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,4,44,46,47,49,50,51,52,54,55,56,136,200,221,227,228,241,244,247,251,255,260,262,263) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,4,24,25,44,46,47,49,50,51,52,54,55,56,58,59,60,67,68,69,126,127,128,132,134,135,136,137,139,140,141,142,143,144,145,147,150,151,152,153,170,171,172,173,174,175,182,183,184,188,196,197,198,200,201,202,203,204,205,206,208,209,217,218,219,221,222,223,224,225,226,227,229,230,238,239,240,242,243,244,245,246,247,248,250,251,252,259,260,261,268,271,272,280,281,282,284,285,286,287,291,293,294,295,303,304,305,307,308,309,311,314,315) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,4,42,44,45,47,48,49,50,51,52,53,54,55,57,58,59,61,62,63,70,71,72,108,109,111,112,113,121,122,123,125,126,127,132,134,135,136,137,139,140,141,142,143,144,145,147,149,150,151,168,169,170,171,172,173,180,181,182,186,194,195,196,198,199,200,201,202,203,204,206,207,215,216,217,219,220,221,222,223,224,225,227,228,236,237,238,240,241,242,243,244,245,246,248,257,258,259,264,267,268,276,277,278,280,281,282,284,286,290,293,294,302,303,304,306,307,308,310,312,314,315) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,17,38,50,51,52,53,54,55,57,58,59,61,62,63,70,71,72,171,172,248,249,264,266,268,269,270,278,279,280,282,283,284,285,289,293,296,297) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,4,42,44,45,47,48,49,50,51,52,53,54,55,57,58,59,61,108,112,114,115,116,117,119,120,121,122,123,125,126,134,135,136,138,139,140,141,144,145,147,148,149,166,167,168,169,170,171,178,179,180,184,185,186,187,189,190,198,199,200,202,203,204,205,206,207,208,210,211,219,220,221,223,224,225,226,227,228,229,231,232,233,240,241,242,246,247,248,256,257,258,260,261,262,264,266,271,272,280,281,282,284,285,286,287,291,293,295,296,304,305,306,308,309,310,313,314,315) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,20,24,25,44,46,47,49,50,51,52,54,55,56,58,59,60,67,68,69,113,143,144,145,162,163,164,165,174,175,176,180,188,189,190,192,193,194,195,196,197,198,200,201,209,210,211,213,214,215,216,217,218,219,221,222,230,231,232,234,235,236,237,238,239,240,242,251,252,253,257,263,265,271,275,276,277,285,286,287,289,290,291,295,296) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,4,59,60,61,62,64,65,66,68,69,70,77,78,79,110,111,113,114,115,123,124,125,127,128,129,130,131,132,133,135,137,138,139,140,142,143,144,145,146,147,164,165,166,167,168,169,176,177,178,182,190,191,192,194,195,196,197,198,199,200,202,203,211,212,213,215,216,217,218,219,220,221,223,224,232,233,234,236,237,238,239,240,241,242,244,253,254,255,264,265,273,274,275,277,278,279,281,283,284,285,289,291,292,300,301,302,304,305,306,310,313,314) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,4,44,46,47,49,50,51,52,53,54,55,57,58,59,128,129,130,131,136,138,139,140,141,143,144,145,146,148,149,150,167,168,169,170,171,172,179,180,181,185,193,194,195,197,198,199,200,201,202,203,205,206,214,215,216,218,219,220,221,222,223,224,226,227,235,236,237,239,240,241,242,243,244,245,247,248,249,256,257,258,264,266,268,269,277,278,279,281,282,283,287,291,293,297,298,306,307,308,310,311,312,313,314,315) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,20,42,44,45,47,48,49,50,52,53,54,56,57,58,65,66,67,103,104,105,106,107,109,110,111,119,120,121,123,124,125,126,127,128,130,131,132,133,135,136,137,138,139,140,141,147,148,149,150,167,168,169,170,179,180,181,185,193,194,195,197,198,199,200,201,202,203,205,206,214,215,216,218,219,220,221,222,223,224,226,227,235,236,237,239,240,241,242,243,244,245,247,248,249,256,257,258,263,266,268,272,273,274,282,283,284,286,287,288,293,294,295) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "⚠️ 파일 output3218.csv 처리 중 오류 발생: Execution failed on sql '\n",
      "    WITH name_cte AS (\n",
      "        SELECT DISTINCT \"character.name\" AS name\n",
      "        FROM output\n",
      "        WHERE \"character.teamId\" IN (\n",
      "            SELECT DISTINCT \"character.teamId\"\n",
      "            FROM output\n",
      "            WHERE \"character.accountId\" IN (\n",
      "                SELECT DISTINCT substr(teamKillers_AccountId, 3, 40) FROM output\n",
      "            )\n",
      "        )\n",
      "    )\n",
      "    \n",
      "    SELECT \"attacker.name\" AS name, COUNT(damage) AS damage_count, damageTypeCategory\n",
      "    FROM output\n",
      "    WHERE \"attacker.teamId\" = \"victim.teamId\"\n",
      "      AND \"attacker.name\" IN (SELECT name FROM name_cte)\n",
      "      AND \"victim.name\" IN (SELECT name FROM name_cte)\n",
      "      AND \"attacker.name\" != \"victim.name\"\n",
      "    GROUP BY \"attacker.name\", damageTypeCategory\n",
      "    ': no such column: damage\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,4,42,44,45,49,50,51,52,53,54,55,57,58,59,61,62,63,70,71,72,108,110,111,112,113,115,116,117,118,119,121,122,123,131,132,133,135,136,137,138,139,140,141,143,145,146,147,164,165,166,167,168,169,176,177,178,182,190,191,192,194,195,196,197,198,199,200,202,203,211,212,213,215,216,217,218,219,220,221,223,224,232,233,234,236,237,238,239,240,241,242,244,245,246,253,254,255,260,262,266,267,275,276,277,279,280,281,284,288,291,292,300,301,302,304,305,306,310,313,314,315) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,23,26,27,28,29,31,32,33,35,36,37,44,45,46,132,134,135,137,138,139,140,141,142,143,145,151,152,153,170,171,172,173,174,175,182,183,184,188,196,197,198,200,201,202,203,204,205,206,208,209,217,218,219,221,222,223,224,225,226,227,229,230,238,239,240,242,243,244,245,246,247,248,250,251,252,259,260,261,266,268,272,275,276,284,285,286,288,289,290,294,295,296,304,305,306,308,309,310,313,314) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,4,42,44,45,47,48,49,50,51,52,53,54,55,57,58,59,61,62,63,70,71,72,108,109,111,112,113,121,122,123,125,126,127,131,133,134,135,136,138,139,140,141,143,144,145,146,148,149,150,167,168,169,170,171,172,179,180,181,185,193,194,195,197,198,199,200,201,202,203,205,206,214,215,216,218,219,220,221,222,223,224,226,227,235,236,237,239,240,241,242,243,244,245,247,248,249,256,257,258,264,266,268,269,277,278,279,281,282,283,285,289,291,293,294,302,303,304,306,307,308,311,312) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "⚠️ 파일 output3222.csv 처리 중 오류 발생: Execution failed on sql '\n",
      "    WITH name_cte AS (\n",
      "        SELECT DISTINCT \"character.name\" AS name\n",
      "        FROM output\n",
      "        WHERE \"character.teamId\" IN (\n",
      "            SELECT DISTINCT \"character.teamId\"\n",
      "            FROM output\n",
      "            WHERE \"character.accountId\" IN (\n",
      "                SELECT DISTINCT substr(teamKillers_AccountId, 3, 40) FROM output\n",
      "            )\n",
      "        )\n",
      "    )\n",
      "    \n",
      "    SELECT \"attacker.name\" AS name, COUNT(damage) AS damage_count, damageTypeCategory\n",
      "    FROM output\n",
      "    WHERE \"attacker.teamId\" = \"victim.teamId\"\n",
      "      AND \"attacker.name\" IN (SELECT name FROM name_cte)\n",
      "      AND \"victim.name\" IN (SELECT name FROM name_cte)\n",
      "      AND \"attacker.name\" != \"victim.name\"\n",
      "    GROUP BY \"attacker.name\", damageTypeCategory\n",
      "    ': no such column: damage\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,4,42,44,45,47,48,49,50,51,52,53,54,55,57,58,59,108,110,111,112,113,115,116,117,118,119,121,122,123,131,132,133,135,136,137,138,139,140,141,143,145,146,147,164,165,166,167,168,169,176,177,178,182,190,191,192,194,195,196,197,198,199,200,202,203,211,212,213,215,216,217,218,219,220,221,223,224,232,233,234,236,237,238,239,240,241,242,244,253,254,255,263,264,265,273,274,275,277,278,279,281,284,288,290,295,296,304,305,306,308,309,310,313,314,315) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,29,30,54,55,56,59,60,61,62,64,65,66,68,69,70,77,78,79,110,112,113,114,115,117,118,119,120,121,123,124,125,133,134,135,137,138,139,140,141,142,143,146,151,152,153,170,171,172,173,182,183,184,188,189,190,191,193,194,195,196,197,199,200,201,202,203,205,214,215,216,220,221,229,230,231,233,234,235,236,244,245,246,248,249,250,251,259,260,261,263,264,265,267,268,269,277,278,279,281,282,283,285,289,291,292,293,294) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,4,42,44,45,47,48,49,50,51,52,54,55,56,58,59,60,67,68,69,105,106,107,108,109,111,112,113,121,122,123,125,126,127,128,129,130,131,133,135,136,137,138,140,141,142,147,149,150,151,168,169,170,171,172,173,180,181,182,186,194,195,196,198,199,200,201,202,203,204,206,207,215,216,217,219,220,221,222,223,224,225,227,228,236,237,238,240,241,242,243,244,245,246,248,257,258,259,263,265,266,274,275,276,278,279,280,282,285,289,292,293,296,297) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,4,17,24,25,40,44,46,47,50,51,52,53,54,55,57,58,59,108,110,111,112,113,115,116,117,118,119,121,122,123,131,132,133,134,135,136,137,138,139,140,141,143,144,145,162,163,164,165,166,167,174,175,176,180,188,189,190,192,193,194,195,196,197,198,200,201,209,210,211,213,214,215,216,217,218,219,221,222,230,231,232,234,235,236,237,238,239,240,242,243,244,251,252,253,257,264,267,268,269,277,278,279,281,282,283,284,288,291,292,300,301,302,304,305,306,309,310,312,313) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,4,24,25,44,46,47,49,50,51,52,53,54,55,57,58,59,107,108,110,111,112,120,121,122,124,125,126,131,133,134,135,136,138,139,140,141,143,144,145,146,148,149,150,167,168,169,170,171,172,179,180,181,185,193,194,195,197,198,199,200,201,202,203,205,206,214,215,216,218,219,220,221,222,223,224,226,227,235,236,237,239,240,241,242,243,244,245,247,248,249,256,257,258,264,267,268,276,277,278,280,281,282,284,288,292,293,294,302,303,304,306,307,308,311,312,314,315) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "⚠️ 파일 output3228.csv 처리 중 오류 발생: Execution failed on sql '\n",
      "    WITH name_cte AS (\n",
      "        SELECT DISTINCT \"character.name\" AS name\n",
      "        FROM output\n",
      "        WHERE \"character.teamId\" IN (\n",
      "            SELECT DISTINCT \"character.teamId\"\n",
      "            FROM output\n",
      "            WHERE \"character.accountId\" IN (\n",
      "                SELECT DISTINCT substr(teamKillers_AccountId, 3, 40) FROM output\n",
      "            )\n",
      "        )\n",
      "    )\n",
      "    \n",
      "    SELECT \"attacker.name\" AS name, COUNT(damage) AS damage_count, damageTypeCategory\n",
      "    FROM output\n",
      "    WHERE \"attacker.teamId\" = \"victim.teamId\"\n",
      "      AND \"attacker.name\" IN (SELECT name FROM name_cte)\n",
      "      AND \"victim.name\" IN (SELECT name FROM name_cte)\n",
      "      AND \"attacker.name\" != \"victim.name\"\n",
      "    GROUP BY \"attacker.name\", damageTypeCategory\n",
      "    ': no such column: damage\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,4,42,44,45,47,48,49,50,51,52,53,54,55,57,58,59,61,108,110,111,112,113,115,116,117,118,119,121,122,123,131,132,133,135,136,137,141,143,144,145,146,148,149,150,167,168,169,170,171,172,179,180,181,185,193,194,195,197,198,199,200,201,202,203,205,206,214,215,216,218,219,220,221,222,223,224,226,227,235,236,237,239,240,241,242,243,244,245,247,248,249,256,257,258,265,266,267,275,276,277,279,280,281,283,286,290,294,295,303,304,305,307,308,309,312,313,314,315) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,4,17,38,42,44,45,47,48,49,52,53,54,55,57,58,59,61,62,63,70,71,72,108,109,111,112,113,121,122,123,124,125,126,127,128,130,131,132,133,135,136,137,141,143,144,145,146,148,149,150,167,168,169,170,171,172,179,180,181,185,193,194,195,197,198,199,200,201,202,203,205,206,214,215,216,218,219,220,221,222,223,224,226,227,235,236,237,239,240,241,242,243,244,245,247,256,257,258,263,266,268,269,277,278,279,281,282,283,284,288,291,293,294,302,303,304,306,307,308,310,312,313) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,4,42,44,45,47,48,49,50,51,52,53,54,55,57,58,59,61,62,63,70,71,72,108,110,111,112,113,115,116,117,118,120,121,123,124,125,133,134,135,137,138,139,140,141,142,143,146,147,148,149,166,167,168,169,170,171,178,179,180,184,192,193,194,196,197,198,199,200,201,202,204,205,213,214,215,217,218,219,220,221,222,223,225,226,234,235,236,238,239,240,241,242,243,244,246,247,248,255,256,257,262,266,267,275,276,277,279,280,281,286,290,293,294,302,303,304,306,307,308,312,313,314,315) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,23,42,44,45,47,48,49,50,52,53,54,56,57,58,65,66,67,103,104,105,136,139,140,142,143,144,161,162,163,164,173,174,175,179,180,182,184,185,193,194,195,197,198,199,200,201,202,203,205,206,214,215,216,218,219,220,221,222,223,224,226,235,236,237,242,247,250,252,256,263,264,265) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,4,59,60,61,62,64,65,66,68,69,70,77,78,79,110,112,113,114,115,117,118,119,120,124,125,127,128,136,137,138,140,141,142,143,144,145,146,149,150,151,152,169,170,171,172,181,182,183,187,195,196,197,199,200,201,202,203,204,205,207,208,216,217,218,220,221,222,223,224,225,226,228,229,237,238,239,241,242,243,244,245,246,247,249,258,259,260,265,266,267,275,276,277,279,280,281,286,290,294,297,298) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "⚠️ 파일 output3234.csv 처리 중 오류 발생: Execution failed on sql '\n",
      "    WITH name_cte AS (\n",
      "        SELECT DISTINCT \"character.name\" AS name\n",
      "        FROM output\n",
      "        WHERE \"character.teamId\" IN (\n",
      "            SELECT DISTINCT \"character.teamId\"\n",
      "            FROM output\n",
      "            WHERE \"character.accountId\" IN (\n",
      "                SELECT DISTINCT substr(teamKillers_AccountId, 3, 40) FROM output\n",
      "            )\n",
      "        )\n",
      "    )\n",
      "    \n",
      "    SELECT \"attacker.name\" AS name, COUNT(damage) AS damage_count, damageTypeCategory\n",
      "    FROM output\n",
      "    WHERE \"attacker.teamId\" = \"victim.teamId\"\n",
      "      AND \"attacker.name\" IN (SELECT name FROM name_cte)\n",
      "      AND \"victim.name\" IN (SELECT name FROM name_cte)\n",
      "      AND \"attacker.name\" != \"victim.name\"\n",
      "    GROUP BY \"attacker.name\", damageTypeCategory\n",
      "    ': no such column: damage\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,4,44,46,47,49,50,51,52,54,55,56,58,59,60,67,68,69,105,106,108,109,110,118,119,120,122,123,124,125,126,127,128,130,131,132,133,135,136,137,141,143,144,145,146,148,149,150,167,168,169,170,171,172,179,180,181,185,193,194,195,197,198,199,200,201,202,203,205,206,214,215,216,218,219,220,221,222,223,224,226,227,235,236,237,239,240,241,242,243,244,245,247,248,249,256,257,258,264,266,268,269,277,278,279,281,282,283,284,288,291,297,298) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,4,42,44,45,52,53,54,55,57,58,59,108,110,111,112,113,115,116,117,118,119,121,122,123,131,132,133,135,136,137,138,139,140,141,143,147,148,149,150,167,168,169,170,171,172,179,180,181,185,193,194,195,197,198,199,200,201,202,203,205,206,214,215,216,218,219,220,221,222,223,224,226,227,235,236,237,239,240,241,242,243,244,245,247,248,249,256,257,258,262,263,271,272,273,275,276,277,279,286,290,293,297,298) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,4,42,44,45,47,48,49,50,51,52,53,54,55,57,58,59,61,62,63,70,71,72,132,134,135,136,137,139,140,141,142,144,145,146,147,149,150,151,168,169,170,171,172,173,180,181,182,186,194,195,196,198,199,200,201,202,203,204,206,207,215,216,217,219,220,221,222,223,224,225,227,228,236,237,238,240,241,242,243,244,245,246,248,249,250,257,258,259,264,268,269,270,278,279,280,282,283,284,285,286,290,293,294,295,303,304,305,307,308,309,311,312) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,4,17,38,42,44,45,49,50,51,52,54,55,56,108,110,111,112,113,115,116,117,118,119,121,122,123,131,132,133,134,135,136,137,138,139,140,141,146,149,150,151,152,169,170,171,172,173,174,181,182,183,187,195,196,197,199,200,201,202,203,204,205,207,208,216,217,218,220,221,222,223,224,225,226,228,229,237,238,239,241,242,243,244,245,246,247,249,250,251,258,259,260,265,270,274,275,276,277,285,286,287,289,290,291,293,296,297) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,4,44,46,47,52,53,54,55,57,58,59,61,108,110,111,112,113,115,116,117,118,119,121,122,123,131,132,133,135,136,137,141,142,143,144,146,148,149,150,167,168,169,170,171,172,179,180,181,185,193,194,195,197,198,199,200,201,202,203,205,206,214,215,216,218,219,220,221,222,223,224,226,227,235,236,237,239,240,241,242,243,244,245,247,248,249,256,257,258,263,266,268,272,274,275,276,284,285,286,288,289,290,294,298,299,307,308,309,311,312,313,314,315) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,4,57,58,59,60,61,62,64,65,66,68,69,70,77,78,79,110,111,113,114,115,123,124,125,127,128,129,130,132,133,134,135,137,138,139,140,141,142,143,145,146,147,164,165,166,167,168,169,176,177,178,182,190,191,192,194,195,196,197,198,199,200,202,203,211,212,213,215,216,217,218,219,220,221,223,224,232,233,234,236,237,238,239,240,241,242,244,253,254,255,261,266,267,268,276,277,278,280,281,282,285,289,291,292,300,301,302,304,305,306,308,313,314,315) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,20,24,25,28,44,46,47,48,49,50,51,52,54,55,56,58,59,60,67,68,69,129,141,180,188,189,190,192,193,194,195,216,222,230,231,232,234,235,236,237,238,239,243,244,261,262,265,268,269,277,278,279,281,282,283,284,288,291,294,296,297) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,4,42,44,45,49,50,51,52,53,54,55,57,58,59,108,109,111,112,113,121,122,123,125,126,127,128,130,131,132,133,135,136,137,141,144,145,146,147,148,150,151,152,169,170,171,172,173,174,181,182,183,187,195,196,197,199,200,201,202,203,204,205,207,208,216,217,218,220,221,222,223,224,225,226,228,229,237,238,239,241,242,243,244,245,246,247,249,250,251,258,259,260,266,270,271,279,280,281,283,284,285,287,291,293,296,297,305,306,307,309,310,311,312,314,315) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,4,42,44,45,47,48,49,50,51,52,53,54,55,57,58,59,108,110,111,112,113,115,116,117,118,122,123,125,126,134,135,136,138,139,140,141,143,144,145,146,149,150,151,152,169,170,171,172,173,174,181,182,183,187,195,196,197,199,200,201,202,203,204,205,207,208,216,217,218,220,221,222,223,224,225,226,228,229,237,238,239,241,242,243,244,245,246,247,249,258,259,260,265,271,272,273,281,282,283,285,286,287,288,292,295,296,304,305,306,308,309,310,313,314,315) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,4,17,47,48,49,50,51,52,53,54,55,57,58,59,61,62,63,70,71,72,108,110,111,112,113,115,116,117,118,119,121,122,123,131,132,133,134,135,136,137,138,139,140,141,146,147,148,165,166,167,168,169,170,177,178,179,183,191,192,193,195,196,197,198,199,200,201,203,204,212,213,214,216,217,218,219,220,221,222,224,225,233,234,235,237,238,239,240,241,242,243,245,246,247,254,255,256,261,263,265,266,274,275,276,278,279,280,282,284,288,290,291,292,300,301,302,304,305,306,312,313) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,4,24,25,44,46,47,49,50,51,52,54,55,56,105,106,107,108,110,111,112,113,115,116,117,118,119,121,122,123,131,132,133,135,136,137,141,142,143,144,147,148,150,151,152,169,170,171,172,173,174,181,182,183,187,195,196,197,199,200,201,202,203,204,205,207,208,216,217,218,220,221,222,223,224,225,226,228,229,237,238,239,241,242,243,244,245,246,247,249,250,251,258,259,260,265,270,274,275,276,284,285,286,288,289,290,291,294,296,297,305,306,307,309,310,311,312,313) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "⚠️ 파일 output3246.csv 처리 중 오류 발생: Execution failed on sql '\n",
      "    WITH name_cte AS (\n",
      "        SELECT DISTINCT \"character.name\" AS name\n",
      "        FROM output\n",
      "        WHERE \"character.teamId\" IN (\n",
      "            SELECT DISTINCT \"character.teamId\"\n",
      "            FROM output\n",
      "            WHERE \"character.accountId\" IN (\n",
      "                SELECT DISTINCT substr(teamKillers_AccountId, 3, 40) FROM output\n",
      "            )\n",
      "        )\n",
      "    )\n",
      "    \n",
      "    SELECT \"attacker.name\" AS name, COUNT(damage) AS damage_count, damageTypeCategory\n",
      "    FROM output\n",
      "    WHERE \"attacker.teamId\" = \"victim.teamId\"\n",
      "      AND \"attacker.name\" IN (SELECT name FROM name_cte)\n",
      "      AND \"victim.name\" IN (SELECT name FROM name_cte)\n",
      "      AND \"attacker.name\" != \"victim.name\"\n",
      "    GROUP BY \"attacker.name\", damageTypeCategory\n",
      "    ': no such column: damage\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,20,42,44,45,47,48,49,50,52,53,54,56,57,58,65,66,67,103,104,105,106,107,108,109,111,112,113,121,122,123,125,126,127,128,130,131,132,133,135,136,137,138,139,140,141,147,148,150,151,152,169,170,171,172,173,174,181,182,183,187,195,196,197,199,200,201,202,203,204,205,207,208,216,217,218,220,221,222,223,224,225,226,228,229,237,238,239,241,242,243,244,245,246,247,249,250,251,258,259,260,266,269,273,275,278,279,287,288,289,291,292,293,295,296) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,25,52,53,54,55,57,58,59,61,62,63,70,71,72,144,147,148,149,166,167,168,169,178,179,180,184,185,186,187,189,190,198,199,200,202,203,204,205,206,207,208,210,211,219,220,221,223,224,225,226,227,228,229,231,240,241,242,246,248,256,257,258,260,261,262,265,267,271,274,275) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,4,17,38,42,44,45,50,51,52,53,54,55,57,58,59,61,108,112,114,115,116,117,119,120,121,122,123,125,126,134,135,136,137,138,139,140,141,143,144,145,146,149,150,151,152,169,170,171,172,173,174,181,182,183,187,195,196,197,199,200,201,202,203,204,205,207,208,216,217,218,220,221,222,223,224,225,226,228,229,237,238,239,241,242,243,244,245,246,247,249,258,259,260,265,269,270,278,279,280,282,283,284,285,286,290,291,292,300,301,302,304,305,306,309,312,313) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,4,42,44,45,52,53,54,55,57,58,59,61,62,63,70,71,72,108,112,114,115,116,117,119,120,121,122,123,125,126,134,135,136,138,139,140,141,142,143,144,146,149,150,151,168,169,170,171,180,181,182,186,187,188,189,191,192,200,201,202,204,205,206,207,208,209,210,212,213,221,222,223,225,226,227,228,229,230,231,233,234,235,242,243,244,249,251,252,260,261,262,264,265,266,267,268,276,277,278,280,281,282,285,289,293,297,298) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "⚠️ 파일 output3251.csv 처리 중 오류 발생: Execution failed on sql '\n",
      "    WITH name_cte AS (\n",
      "        SELECT DISTINCT \"character.name\" AS name\n",
      "        FROM output\n",
      "        WHERE \"character.teamId\" IN (\n",
      "            SELECT DISTINCT \"character.teamId\"\n",
      "            FROM output\n",
      "            WHERE \"character.accountId\" IN (\n",
      "                SELECT DISTINCT substr(teamKillers_AccountId, 3, 40) FROM output\n",
      "            )\n",
      "        )\n",
      "    )\n",
      "    \n",
      "    SELECT \"attacker.name\" AS name, COUNT(damage) AS damage_count, damageTypeCategory\n",
      "    FROM output\n",
      "    WHERE \"attacker.teamId\" = \"victim.teamId\"\n",
      "      AND \"attacker.name\" IN (SELECT name FROM name_cte)\n",
      "      AND \"victim.name\" IN (SELECT name FROM name_cte)\n",
      "      AND \"attacker.name\" != \"victim.name\"\n",
      "    GROUP BY \"attacker.name\", damageTypeCategory\n",
      "    ': no such column: damage\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,4,42,44,45,47,48,49,50,51,52,53,54,55,57,58,59,61,62,63,70,71,72,108,110,111,112,113,115,116,117,118,119,121,122,123,131,132,133,135,136,137,142,143,145,146,147,164,165,166,167,168,169,176,177,178,182,183,185,187,188,196,197,198,200,201,202,203,204,205,206,208,209,217,218,219,221,222,223,224,225,226,227,229,230,231,238,239,240,245,248,249,253,257,263,264,265,266,267,275,276,277,279,280,281,282,283) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,4,42,44,45,49,50,51,52,54,55,56,58,105,106,107,108,112,114,115,116,117,119,120,121,122,123,125,126,134,135,136,138,139,140,141,142,143,144,146,150,151,152,169,170,171,172,173,174,181,182,183,187,195,196,197,199,200,201,202,203,204,205,207,208,216,217,218,220,221,222,223,224,225,226,228,229,237,238,239,241,242,243,244,245,246,247,249,250,251,258,259,260,265,267,268,269,277,278,279,281,282,283,286,290,293,294,295,303,304,305,307,308,309,311,313,314) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,4,42,44,45,47,48,49,50,51,52,53,54,55,57,58,59,108,110,111,112,113,115,116,117,118,122,123,125,126,134,135,136,138,139,140,141,142,143,144,147,148,149,150,167,168,169,170,171,172,179,180,181,185,193,194,195,197,198,199,200,201,202,203,205,206,214,215,216,218,219,220,221,222,223,224,226,227,235,236,237,239,240,241,242,243,244,245,247,248,249,256,257,258,262,266,269,270,278,279,280,282,283,284,288,292,295,296) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,15,28,30,31,46,50,52,53,57,58,59,60,62,63,64,66,67,68,75,76,77,108,112,113,115,116,124,125,126,127,128,129,130,131,132,133,134,136,138,139,140,141,143,144,145,146,148,149,150,167,168,169,170,171,172,179,180,181,185,193,194,195,197,198,199,200,201,202,203,205,206,214,215,216,218,219,220,221,222,223,224,226,227,235,236,237,239,240,241,242,243,244,245,247,248,249,256,257,258,264,265,266,274,275,276,278,279,280,285,287,291,293,294,302,303,304,306,307,308,310,313,314) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,4,44,46,47,49,50,51,52,54,55,56,58,59,60,67,68,69,139,140,142,143,144,161,162,163,164,173,174,175,179,180,181,182,184,185,193,194,195,197,198,199,200,201,202,203,205,206,214,215,216,218,219,220,221,222,223,224,226,227,228,235,236,237,244,247,249,251,255,259,262,263,264,272,273,274,276,277,278,279,280) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,20,24,25,44,46,47,52,53,54,55,57,58,59,108,112,114,115,116,117,119,120,121,122,123,125,126,134,135,136,138,139,140,141,142,143,144,146,148,149,150,167,168,169,170,171,172,179,180,181,185,193,194,195,197,198,199,200,201,202,203,205,206,214,215,216,218,219,220,221,222,223,224,226,227,235,236,237,239,240,241,242,243,244,245,247,248,249,256,257,258,264,266,271,272,280,281,282,284,285,286,287,288,296,297,298,300,301,302,303,307,308,313,314,315) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,20,24,25,28,44,46,47,48,49,50,51,52,54,55,56,58,59,60,67,68,69,105,106,107,116,138,139,140,141,144,145,146,147,164,165,166,167,168,169,176,177,178,182,190,191,192,194,195,196,197,198,199,200,202,203,211,212,213,215,216,217,218,219,220,221,223,224,232,233,234,236,237,238,239,240,241,242,244,245,246,253,254,255,261,263,266,270,279,280,281,289,290,291,293,294,295,297,298) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,4,17,38,42,44,45,47,48,49,50,51,52,53,54,55,57,58,59,61,62,63,70,71,72,108,110,111,112,113,115,116,117,118,122,123,125,126,134,135,136,137,138,139,140,141,143,144,145,146,148,149,150,167,168,169,170,171,172,179,180,181,185,193,194,195,197,198,199,200,201,202,203,205,206,214,215,216,218,219,220,221,222,223,224,226,227,235,236,237,239,240,241,242,243,244,245,247,256,257,258,264,266,267,268,276,277,278,280,281,282,284,288,289,291,292,293,301,302,303,305,306,307,312,313) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,20,42,44,45,47,48,49,50,52,53,54,56,57,58,65,66,67,116,138,139,140,141,143,144,145,162,163,164,165,166,167,174,175,176,180,188,189,190,192,193,194,195,196,197,198,200,201,209,210,211,213,214,215,216,217,218,219,221,222,230,231,232,234,235,236,237,238,239,240,242,243,244,251,252,253,258,260,266,269,273,277,278,279,280,288,289,290,292,293,294,295,296) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,56,57,58,59,61,62,63,65,66,67,74,75,76,118,245,248,251,255,257,259,260) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "⚠️ 파일 output3261.csv 처리 중 오류 발생: Execution failed on sql '\n",
      "    WITH name_cte AS (\n",
      "        SELECT DISTINCT \"character.name\" AS name\n",
      "        FROM output\n",
      "        WHERE \"character.teamId\" IN (\n",
      "            SELECT DISTINCT \"character.teamId\"\n",
      "            FROM output\n",
      "            WHERE \"character.accountId\" IN (\n",
      "                SELECT DISTINCT substr(teamKillers_AccountId, 3, 40) FROM output\n",
      "            )\n",
      "        )\n",
      "    )\n",
      "    \n",
      "    SELECT \"attacker.name\" AS name, COUNT(damage) AS damage_count, damageTypeCategory\n",
      "    FROM output\n",
      "    WHERE \"attacker.teamId\" = \"victim.teamId\"\n",
      "      AND \"attacker.name\" IN (SELECT name FROM name_cte)\n",
      "      AND \"victim.name\" IN (SELECT name FROM name_cte)\n",
      "      AND \"attacker.name\" != \"victim.name\"\n",
      "    GROUP BY \"attacker.name\", damageTypeCategory\n",
      "    ': no such column: damage\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "⚠️ 파일 output3263.csv 처리 중 오류 발생: Execution failed on sql '\n",
      "    WITH name_cte AS (\n",
      "        SELECT DISTINCT \"character.name\" AS name\n",
      "        FROM output\n",
      "        WHERE \"character.teamId\" IN (\n",
      "            SELECT DISTINCT \"character.teamId\"\n",
      "            FROM output\n",
      "            WHERE \"character.accountId\" IN (\n",
      "                SELECT DISTINCT substr(teamKillers_AccountId, 3, 40) FROM output\n",
      "            )\n",
      "        )\n",
      "    )\n",
      "    \n",
      "    SELECT \"attacker.name\" AS name, COUNT(damage) AS damage_count, damageTypeCategory\n",
      "    FROM output\n",
      "    WHERE \"attacker.teamId\" = \"victim.teamId\"\n",
      "      AND \"attacker.name\" IN (SELECT name FROM name_cte)\n",
      "      AND \"victim.name\" IN (SELECT name FROM name_cte)\n",
      "      AND \"attacker.name\" != \"victim.name\"\n",
      "    GROUP BY \"attacker.name\", damageTypeCategory\n",
      "    ': no such column: damage\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,4,17,38,42,44,45,47,48,49,50,51,52,53,54,55,57,58,59,61,62,63,70,71,72,108,109,111,112,113,121,122,123,124,125,126,127,128,130,131,132,133,135,136,137,138,139,140,141,144,148,150,152,153,154,171,172,173,174,175,176,183,184,185,189,197,198,199,201,202,203,204,205,206,207,209,210,218,219,220,222,223,224,225,226,227,228,230,231,239,240,241,243,244,245,246,247,248,249,251,252,253,260,261,262,267,269,270,278,279,280,282,283,284,286,290,295,296,297) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,17,38,47,48,49,50,51,52,53,54,55,57,58,59,61,62,63,70,71,72,146,147,148,165,166,167,168,169,170,177,178,179,183,184,185,186,188,189,197,198,199,201,202,203,204,205,206,207,209,210,218,219,220,222,223,224,225,226,227,228,230,239,240,241,245,253,254,255,257,258,259,260,263,267,268,276,277,278,280,281,282,284,287,291,293,295,296) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,4,47,48,49,50,51,52,53,54,55,57,58,59,61,62,63,70,71,72,136,138,139,140,141,145,146,147,164,165,166,167,168,169,176,177,178,182,190,191,192,194,195,196,197,198,199,200,202,203,211,212,213,215,216,217,218,219,220,221,223,224,232,233,234,236,237,238,239,240,241,242,244,245,246,253,254,255,260,262,264,265,273,274,275,277,278,279,284,288,291,292,300,301,302,304,305,306,310,312,313,314) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,4,42,44,45,49,50,51,52,54,55,56,58,59,60,67,68,69,105,106,108,109,110,118,119,120,122,123,124,125,126,127,131,133,134,135,136,138,139,140,141,143,144,145,146,148,149,150,167,168,169,170,171,172,179,180,181,185,193,194,195,197,198,199,200,201,202,203,205,206,214,215,216,218,219,220,221,222,223,224,226,227,235,236,237,239,240,241,242,243,244,245,247,248,249,256,257,258,263,266,268,269,277,278,279,281,282,283,284,288,290,296,297,305,306,307,309,310,311,312,314,315) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,4,59,60,61,62,64,65,66,68,69,70,77,78,79,110,112,113,114,115,117,118,119,122,123,125,126,127,135,136,137,139,140,141,142,143,144,145,151,152,153,170,171,172,173,182,183,184,188,196,197,198,200,201,202,203,204,205,206,208,209,217,218,219,221,222,223,224,225,226,227,229,230,238,239,240,242,243,244,245,246,247,248,250,259,260,261,266,268,269,271,272,280,281,282,284,285,286,288,292,295,296,297,305,306,307,309,310,311,314,315) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "⚠️ 파일 output3269.csv 처리 중 오류 발생: Execution failed on sql '\n",
      "    WITH name_cte AS (\n",
      "        SELECT DISTINCT \"character.name\" AS name\n",
      "        FROM output\n",
      "        WHERE \"character.teamId\" IN (\n",
      "            SELECT DISTINCT \"character.teamId\"\n",
      "            FROM output\n",
      "            WHERE \"character.accountId\" IN (\n",
      "                SELECT DISTINCT substr(teamKillers_AccountId, 3, 40) FROM output\n",
      "            )\n",
      "        )\n",
      "    )\n",
      "    \n",
      "    SELECT \"attacker.name\" AS name, COUNT(damage) AS damage_count, damageTypeCategory\n",
      "    FROM output\n",
      "    WHERE \"attacker.teamId\" = \"victim.teamId\"\n",
      "      AND \"attacker.name\" IN (SELECT name FROM name_cte)\n",
      "      AND \"victim.name\" IN (SELECT name FROM name_cte)\n",
      "      AND \"attacker.name\" != \"victim.name\"\n",
      "    GROUP BY \"attacker.name\", damageTypeCategory\n",
      "    ': no such column: damage\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,42,44,45,47,48,49,50,51,52,53,54,55,57,58,59,61,62,63,70,71,72,108,110,111,112,113,115,116,117,118,119,121,122,123,131,132,133,135,136,137,139,140,142,143,144,161,162,163,164,165,166,173,174,175,179,180,181,182,184,185,193,194,195,197,198,199,200,201,202,203,205,206,214,215,216,218,219,220,221,222,223,224,226,235,236,237,241,244,249,250,251,252,260,261,262,264,265,266,268,269,270,278,279,280,282,283,284,287,291,293,294,302,303,304,306,307,308,312,314,315) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,4,42,44,45,47,48,49,50,51,52,54,55,56,58,59,60,67,68,69,105,106,107,108,112,114,115,116,117,119,120,121,122,124,125,126,134,135,136,138,139,140,141,143,144,145,146,148,149,150,167,168,169,170,171,172,179,180,181,185,193,194,195,197,198,199,200,201,202,203,205,206,214,215,216,218,219,220,221,222,223,224,226,227,235,236,237,239,240,241,242,243,244,245,247,256,257,258,263,264,265,273,274,275,277,278,279,282,287,291,293,296,297,305,306,307,309,310,311,312,313) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,23,24,25,26,27,29,30,31,33,34,35,42,43,44,91,93,94,132,138,140,141,143,144,145,162,163,164,165,166,167,174,175,176,180,188,189,190,192,193,194,195,196,197,198,200,201,209,210,211,213,214,215,216,217,218,219,221,222,230,231,232,234,235,236,237,238,239,240,242,243,244,251,252,253,258,264,267,268,272,275,276,284,285,286,288,289,290,292,294,295) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "⚠️ 파일 output3273.csv 처리 중 오류 발생: Execution failed on sql '\n",
      "    WITH name_cte AS (\n",
      "        SELECT DISTINCT \"character.name\" AS name\n",
      "        FROM output\n",
      "        WHERE \"character.teamId\" IN (\n",
      "            SELECT DISTINCT \"character.teamId\"\n",
      "            FROM output\n",
      "            WHERE \"character.accountId\" IN (\n",
      "                SELECT DISTINCT substr(teamKillers_AccountId, 3, 40) FROM output\n",
      "            )\n",
      "        )\n",
      "    )\n",
      "    \n",
      "    SELECT \"attacker.name\" AS name, COUNT(damage) AS damage_count, damageTypeCategory\n",
      "    FROM output\n",
      "    WHERE \"attacker.teamId\" = \"victim.teamId\"\n",
      "      AND \"attacker.name\" IN (SELECT name FROM name_cte)\n",
      "      AND \"victim.name\" IN (SELECT name FROM name_cte)\n",
      "      AND \"attacker.name\" != \"victim.name\"\n",
      "    GROUP BY \"attacker.name\", damageTypeCategory\n",
      "    ': no such column: damage\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,4,56,57,58,59,61,62,63,65,66,67,74,75,76,107,108,109,110,111,113,114,115,123,124,125,127,128,129,130,132,133,134,135,137,138,139,140,141,142,143,146,147,148,149,166,167,168,169,178,179,180,184,192,193,194,196,197,198,199,200,201,202,204,205,213,214,215,217,218,219,220,221,222,223,225,226,234,235,236,238,239,240,241,242,243,244,246,255,256,257,263,268,269,277,278,279,281,282,283,284,288,295,296,297) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "⚠️ 파일 output3275.csv 처리 중 오류 발생: Execution failed on sql '\n",
      "    WITH name_cte AS (\n",
      "        SELECT DISTINCT \"character.name\" AS name\n",
      "        FROM output\n",
      "        WHERE \"character.teamId\" IN (\n",
      "            SELECT DISTINCT \"character.teamId\"\n",
      "            FROM output\n",
      "            WHERE \"character.accountId\" IN (\n",
      "                SELECT DISTINCT substr(teamKillers_AccountId, 3, 40) FROM output\n",
      "            )\n",
      "        )\n",
      "    )\n",
      "    \n",
      "    SELECT \"attacker.name\" AS name, COUNT(damage) AS damage_count, damageTypeCategory\n",
      "    FROM output\n",
      "    WHERE \"attacker.teamId\" = \"victim.teamId\"\n",
      "      AND \"attacker.name\" IN (SELECT name FROM name_cte)\n",
      "      AND \"victim.name\" IN (SELECT name FROM name_cte)\n",
      "      AND \"attacker.name\" != \"victim.name\"\n",
      "    GROUP BY \"attacker.name\", damageTypeCategory\n",
      "    ': no such column: damage\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,4,42,44,45,47,48,49,50,51,52,54,55,56,58,59,60,67,68,69,113,115,116,117,121,140,141,142,143,146,150,152,153,154,171,172,173,174,175,176,183,184,185,189,197,198,199,201,202,203,204,205,206,207,209,210,218,219,220,222,223,224,225,226,227,228,230,231,239,240,241,243,244,245,246,247,248,249,251,252,253,260,261,262,270,271,275,277,278,286,287,288,290,291,292,294,296,297,305,306,307,309,310,311,313,314) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,4,42,44,45,49,50,51,52,54,55,56,105,106,108,109,110,118,119,120,122,123,124,125,126,127,128,129,130,131,133,135,137,138,139,140,142,143,144,148,149,150,167,168,169,170,171,172,179,180,181,185,193,194,195,197,198,199,200,201,202,203,205,206,214,215,216,218,219,220,221,222,223,224,226,227,235,236,237,239,240,241,242,243,244,245,247,256,257,258,263,265,266,274,275,276,278,279,280,282,285,289,290,291,299,300,301,303,304,305,308,313,314,315) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,4,42,44,45,47,48,49,50,51,52,53,54,55,57,58,59,61,62,63,70,71,72,107,108,110,111,112,120,121,122,124,125,126,131,133,134,135,136,138,139,140,141,143,144,145,146,148,149,150,167,168,169,170,171,172,179,180,181,185,193,194,195,197,198,199,200,201,202,203,205,206,214,215,216,218,219,220,221,222,223,224,226,227,235,236,237,239,240,241,242,243,244,245,247,248,249,256,257,258,264,265,266,274,275,276,278,279,280,282,284,288,290,292,293,301,302,303,305,306,307,310,312,313) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,4,21,23,24,52,53,54,56,57,58,59,60,61,62,64,65,66,68,69,70,77,78,79,110,114,115,117,118,126,127,128,130,131,132,133,135,136,137,138,140,141,142,143,144,145,146,148,149,150,167,168,169,170,179,180,181,185,193,194,195,197,198,199,200,201,202,203,205,206,214,215,216,218,219,220,221,222,223,224,226,227,235,236,237,239,240,241,242,243,244,245,247,256,257,258,263,267,268,269,277,278,279,281,282,283,287,291,292,293,301,302,303,305,306,307,309,312,313) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "⚠️ 파일 output3280.csv 처리 중 오류 발생: Execution failed on sql '\n",
      "    WITH name_cte AS (\n",
      "        SELECT DISTINCT \"character.name\" AS name\n",
      "        FROM output\n",
      "        WHERE \"character.teamId\" IN (\n",
      "            SELECT DISTINCT \"character.teamId\"\n",
      "            FROM output\n",
      "            WHERE \"character.accountId\" IN (\n",
      "                SELECT DISTINCT substr(teamKillers_AccountId, 3, 40) FROM output\n",
      "            )\n",
      "        )\n",
      "    )\n",
      "    \n",
      "    SELECT \"attacker.name\" AS name, COUNT(damage) AS damage_count, damageTypeCategory\n",
      "    FROM output\n",
      "    WHERE \"attacker.teamId\" = \"victim.teamId\"\n",
      "      AND \"attacker.name\" IN (SELECT name FROM name_cte)\n",
      "      AND \"victim.name\" IN (SELECT name FROM name_cte)\n",
      "      AND \"attacker.name\" != \"victim.name\"\n",
      "    GROUP BY \"attacker.name\", damageTypeCategory\n",
      "    ': no such column: damage\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,4,42,44,45,47,48,49,50,51,52,53,54,55,57,58,59,61,108,110,111,112,113,115,116,117,118,122,124,125,127,128,136,137,138,140,141,142,143,144,145,146,148,149,150,167,168,169,170,171,172,179,180,181,185,193,194,195,197,198,199,200,201,202,203,205,206,214,215,216,218,219,220,221,222,223,224,226,227,235,236,237,239,240,241,242,243,244,245,247,248,249,256,257,258,263,265,266,267,275,276,277,279,280,281,287,291,293,296,297,305,306,307,309,310,311,313,314,315) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,15,20,38,42,44,45,52,53,54,55,57,58,59,61,62,63,70,71,72,136,139,140,142,143,144,161,162,163,164,173,174,175,179,180,182,184,185,193,194,195,197,198,199,200,201,202,203,205,206,214,215,216,218,219,220,221,222,223,224,226,235,236,237,242,245,247,252,256,258,262,263) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,20,26,42,44,45,46,47,48,49,50,52,53,54,56,57,58,65,66,67,126,127,129,144,147,148,149,150,167,168,169,170,179,180,181,185,193,194,195,197,198,199,200,201,202,203,205,206,214,215,216,218,219,220,221,222,223,224,226,227,235,236,237,239,240,241,242,243,244,245,247,248,249,256,257,258,263,265,268,272,273,274,282,283,284,286,287,288,295,296) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "⚠️ 파일 output3283.csv 처리 중 오류 발생: Execution failed on sql '\n",
      "    WITH name_cte AS (\n",
      "        SELECT DISTINCT \"character.name\" AS name\n",
      "        FROM output\n",
      "        WHERE \"character.teamId\" IN (\n",
      "            SELECT DISTINCT \"character.teamId\"\n",
      "            FROM output\n",
      "            WHERE \"character.accountId\" IN (\n",
      "                SELECT DISTINCT substr(teamKillers_AccountId, 3, 40) FROM output\n",
      "            )\n",
      "        )\n",
      "    )\n",
      "    \n",
      "    SELECT \"attacker.name\" AS name, COUNT(damage) AS damage_count, damageTypeCategory\n",
      "    FROM output\n",
      "    WHERE \"attacker.teamId\" = \"victim.teamId\"\n",
      "      AND \"attacker.name\" IN (SELECT name FROM name_cte)\n",
      "      AND \"victim.name\" IN (SELECT name FROM name_cte)\n",
      "      AND \"attacker.name\" != \"victim.name\"\n",
      "    GROUP BY \"attacker.name\", damageTypeCategory\n",
      "    ': no such column: teamKillers_AccountId\n",
      "⚠️ 파일 output3284.csv 처리 중 오류 발생: Execution failed on sql '\n",
      "    WITH name_cte AS (\n",
      "        SELECT DISTINCT \"character.name\" AS name\n",
      "        FROM output\n",
      "        WHERE \"character.teamId\" IN (\n",
      "            SELECT DISTINCT \"character.teamId\"\n",
      "            FROM output\n",
      "            WHERE \"character.accountId\" IN (\n",
      "                SELECT DISTINCT substr(teamKillers_AccountId, 3, 40) FROM output\n",
      "            )\n",
      "        )\n",
      "    )\n",
      "    \n",
      "    SELECT \"attacker.name\" AS name, COUNT(damage) AS damage_count, damageTypeCategory\n",
      "    FROM output\n",
      "    WHERE \"attacker.teamId\" = \"victim.teamId\"\n",
      "      AND \"attacker.name\" IN (SELECT name FROM name_cte)\n",
      "      AND \"victim.name\" IN (SELECT name FROM name_cte)\n",
      "      AND \"attacker.name\" != \"victim.name\"\n",
      "    GROUP BY \"attacker.name\", damageTypeCategory\n",
      "    ': no such column: damage\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "⚠️ 파일 output3286.csv 처리 중 오류 발생: Execution failed on sql '\n",
      "    WITH name_cte AS (\n",
      "        SELECT DISTINCT \"character.name\" AS name\n",
      "        FROM output\n",
      "        WHERE \"character.teamId\" IN (\n",
      "            SELECT DISTINCT \"character.teamId\"\n",
      "            FROM output\n",
      "            WHERE \"character.accountId\" IN (\n",
      "                SELECT DISTINCT substr(teamKillers_AccountId, 3, 40) FROM output\n",
      "            )\n",
      "        )\n",
      "    )\n",
      "    \n",
      "    SELECT \"attacker.name\" AS name, COUNT(damage) AS damage_count, damageTypeCategory\n",
      "    FROM output\n",
      "    WHERE \"attacker.teamId\" = \"victim.teamId\"\n",
      "      AND \"attacker.name\" IN (SELECT name FROM name_cte)\n",
      "      AND \"victim.name\" IN (SELECT name FROM name_cte)\n",
      "      AND \"attacker.name\" != \"victim.name\"\n",
      "    GROUP BY \"attacker.name\", damageTypeCategory\n",
      "    ': no such column: damage\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,4,17,40,52,53,54,55,57,58,59,61,137,143,144,145,146,149,150,151,168,169,170,171,172,173,180,181,182,186,187,188,189,191,192,200,201,202,204,205,206,207,208,209,210,212,213,221,222,223,225,226,227,228,229,230,231,233,234,235,242,243,244,249,251,252,260,261,262,264,265,266,268,269,277,278,279,281,282,283,284,288,290,292,293,301,302,303,305,306,307,309,310,311) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,4,42,44,45,47,48,52,53,54,55,57,58,59,61,108,109,111,112,113,121,122,123,125,126,127,128,130,131,132,133,135,136,137,138,139,140,141,143,145,146,147,164,165,166,167,168,169,176,177,178,182,190,191,192,194,195,196,197,198,199,200,202,203,211,212,213,215,216,217,218,219,220,221,223,224,232,233,234,236,237,238,239,240,241,242,244,253,254,255,263,266,269,270,278,279,280,282,283,284,286,287,291,293,296,297,305,306,307,309,310,311,314,315) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "⚠️ 파일 output3289.csv 처리 중 오류 발생: Execution failed on sql '\n",
      "    WITH name_cte AS (\n",
      "        SELECT DISTINCT \"character.name\" AS name\n",
      "        FROM output\n",
      "        WHERE \"character.teamId\" IN (\n",
      "            SELECT DISTINCT \"character.teamId\"\n",
      "            FROM output\n",
      "            WHERE \"character.accountId\" IN (\n",
      "                SELECT DISTINCT substr(teamKillers_AccountId, 3, 40) FROM output\n",
      "            )\n",
      "        )\n",
      "    )\n",
      "    \n",
      "    SELECT \"attacker.name\" AS name, COUNT(damage) AS damage_count, damageTypeCategory\n",
      "    FROM output\n",
      "    WHERE \"attacker.teamId\" = \"victim.teamId\"\n",
      "      AND \"attacker.name\" IN (SELECT name FROM name_cte)\n",
      "      AND \"victim.name\" IN (SELECT name FROM name_cte)\n",
      "      AND \"attacker.name\" != \"victim.name\"\n",
      "    GROUP BY \"attacker.name\", damageTypeCategory\n",
      "    ': no such column: damage\n",
      "⚠️ 파일 output3290.csv 처리 중 오류 발생: Execution failed on sql '\n",
      "    WITH name_cte AS (\n",
      "        SELECT DISTINCT \"character.name\" AS name\n",
      "        FROM output\n",
      "        WHERE \"character.teamId\" IN (\n",
      "            SELECT DISTINCT \"character.teamId\"\n",
      "            FROM output\n",
      "            WHERE \"character.accountId\" IN (\n",
      "                SELECT DISTINCT substr(teamKillers_AccountId, 3, 40) FROM output\n",
      "            )\n",
      "        )\n",
      "    )\n",
      "    \n",
      "    SELECT \"attacker.name\" AS name, COUNT(damage) AS damage_count, damageTypeCategory\n",
      "    FROM output\n",
      "    WHERE \"attacker.teamId\" = \"victim.teamId\"\n",
      "      AND \"attacker.name\" IN (SELECT name FROM name_cte)\n",
      "      AND \"victim.name\" IN (SELECT name FROM name_cte)\n",
      "      AND \"attacker.name\" != \"victim.name\"\n",
      "    GROUP BY \"attacker.name\", damageTypeCategory\n",
      "    ': no such column: damage\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,4,47,48,49,50,51,52,53,54,55,57,58,59,61,62,63,70,71,72,116,141,142,143,144,148,149,150,167,168,169,170,171,172,179,180,181,185,193,194,195,197,198,199,200,201,202,203,205,206,214,215,216,218,219,220,221,222,223,224,226,227,235,236,237,239,240,241,242,243,244,245,247,248,249,256,257,258,263,265,266,267,275,276,277,279,280,281,282,285,289,291,294,295,303,304,305,307,308,309,314,315) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "⚠️ 파일 output3292.csv 처리 중 오류 발생: Execution failed on sql '\n",
      "    WITH name_cte AS (\n",
      "        SELECT DISTINCT \"character.name\" AS name\n",
      "        FROM output\n",
      "        WHERE \"character.teamId\" IN (\n",
      "            SELECT DISTINCT \"character.teamId\"\n",
      "            FROM output\n",
      "            WHERE \"character.accountId\" IN (\n",
      "                SELECT DISTINCT substr(teamKillers_AccountId, 3, 40) FROM output\n",
      "            )\n",
      "        )\n",
      "    )\n",
      "    \n",
      "    SELECT \"attacker.name\" AS name, COUNT(damage) AS damage_count, damageTypeCategory\n",
      "    FROM output\n",
      "    WHERE \"attacker.teamId\" = \"victim.teamId\"\n",
      "      AND \"attacker.name\" IN (SELECT name FROM name_cte)\n",
      "      AND \"victim.name\" IN (SELECT name FROM name_cte)\n",
      "      AND \"attacker.name\" != \"victim.name\"\n",
      "    GROUP BY \"attacker.name\", damageTypeCategory\n",
      "    ': no such column: damage\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,20,42,44,45,47,48,49,50,51,52,54,55,56,58,59,60,67,68,69,135,136,137,138,141,142,143,144,145,147,148,149,166,167,168,169,178,179,180,184,192,193,194,196,197,198,199,200,201,202,204,205,213,214,215,217,218,219,220,221,222,223,225,226,234,235,236,238,239,240,241,242,243,244,246,255,256,257,266,268,272,275,278,279,287,288,289,291,292,293,296,297) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,20,26,42,44,45,46,47,48,49,50,52,53,54,56,57,58,65,66,67,103,104,105,107,126,127,143,144,145,162,163,164,165,166,167,174,175,176,180,188,189,190,192,193,194,195,196,197,198,200,201,209,210,211,213,214,215,216,217,218,219,221,222,230,231,232,234,235,236,237,238,239,240,242,243,244,251,252,253,258,263,266,267,271,273,281,282) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,50,51,52,53,54,55,57,58,59,61,62,63,70,71,72,130,133,171,172,185,193,194,195,197,198,199,202,248,249,263,264,265,273,274,275,277,278,279,282,284,288,296,297,298) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,20,26,42,44,45,46,47,48,49,50,52,53,54,56,57,58,65,66,67,114,139,147,148,150,151,152,169,170,171,172,181,182,183,187,195,196,197,199,200,201,202,203,204,205,207,208,216,217,218,220,221,222,223,224,225,226,228,229,237,238,239,241,242,243,244,245,246,247,249,250,251,258,259,260,266,269,273,276,277,285,286,287,289,290,291,294,295,296,304,305,306,308,309,310,311,312) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,4,42,44,45,50,51,52,53,54,55,57,58,59,108,110,111,112,113,115,116,117,118,119,121,122,123,131,132,133,135,136,137,138,141,142,143,144,145,151,152,153,170,171,172,173,174,175,182,183,184,188,196,197,198,200,201,202,203,204,205,206,208,209,217,218,219,221,222,223,224,225,226,227,229,230,238,239,240,242,243,244,245,246,247,248,250,251,252,259,260,261,267,268,269,277,278,279,281,282,283,284,288,290,297,298) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "⚠️ 파일 output3298.csv 처리 중 오류 발생: Execution failed on sql '\n",
      "    WITH name_cte AS (\n",
      "        SELECT DISTINCT \"character.name\" AS name\n",
      "        FROM output\n",
      "        WHERE \"character.teamId\" IN (\n",
      "            SELECT DISTINCT \"character.teamId\"\n",
      "            FROM output\n",
      "            WHERE \"character.accountId\" IN (\n",
      "                SELECT DISTINCT substr(teamKillers_AccountId, 3, 40) FROM output\n",
      "            )\n",
      "        )\n",
      "    )\n",
      "    \n",
      "    SELECT \"attacker.name\" AS name, COUNT(damage) AS damage_count, damageTypeCategory\n",
      "    FROM output\n",
      "    WHERE \"attacker.teamId\" = \"victim.teamId\"\n",
      "      AND \"attacker.name\" IN (SELECT name FROM name_cte)\n",
      "      AND \"victim.name\" IN (SELECT name FROM name_cte)\n",
      "      AND \"attacker.name\" != \"victim.name\"\n",
      "    GROUP BY \"attacker.name\", damageTypeCategory\n",
      "    ': no such column: damage\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,42,44,45,47,48,49,50,51,52,53,54,55,57,58,59,61,108,110,111,112,113,115,116,117,118,122,123,125,126,134,135,136,138,139,140,141,143,144,145,146,148,149,150,167,168,169,170,171,172,179,180,181,185,193,194,195,197,198,199,200,201,202,203,205,206,214,215,216,218,219,220,221,222,223,224,226,227,235,236,237,239,240,241,242,243,244,245,247,248,249,256,257,258,264,266,268,269,277,278,279,281,282,283,285,289,292,296,297,305,306,307,309,310,311,312,313) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,4,47,48,49,50,51,52,54,55,56,58,59,60,67,68,69,105,106,107,143,144,146,148,149,150,167,168,169,170,171,172,179,180,181,185,193,194,195,197,198,199,200,201,202,203,205,206,214,215,216,218,219,220,221,222,223,224,226,227,235,236,237,239,240,241,242,243,244,245,247,256,257,258,263,264,265,273,274,275,277,278,279,283,284,288,290,297,298) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,20,24,25,26,27,29,30,31,33,34,35,42,43,44,82,83,84,93,97,131,132,133,134,137,138,139,140,157,158,159,160,169,170,171,175,183,184,185,187,188,189,190,191,192,193,195,196,204,205,206,208,209,210,211,212,213,214,216,217,225,226,227,229,230,231,232,233,234,235,237,246,247,248,257,261,263,264,272,273,274,276,277,278,280,286,287,289,290,291,292,294,295) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,20,42,44,45,49,50,51,52,54,55,56,58,59,60,67,68,69,139,200,221,227,228,245,247,250,254,258,263,264,265) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "⚠️ 파일 output3303.csv 처리 중 오류 발생: Execution failed on sql '\n",
      "    WITH name_cte AS (\n",
      "        SELECT DISTINCT \"character.name\" AS name\n",
      "        FROM output\n",
      "        WHERE \"character.teamId\" IN (\n",
      "            SELECT DISTINCT \"character.teamId\"\n",
      "            FROM output\n",
      "            WHERE \"character.accountId\" IN (\n",
      "                SELECT DISTINCT substr(teamKillers_AccountId, 3, 40) FROM output\n",
      "            )\n",
      "        )\n",
      "    )\n",
      "    \n",
      "    SELECT \"attacker.name\" AS name, COUNT(damage) AS damage_count, damageTypeCategory\n",
      "    FROM output\n",
      "    WHERE \"attacker.teamId\" = \"victim.teamId\"\n",
      "      AND \"attacker.name\" IN (SELECT name FROM name_cte)\n",
      "      AND \"victim.name\" IN (SELECT name FROM name_cte)\n",
      "      AND \"attacker.name\" != \"victim.name\"\n",
      "    GROUP BY \"attacker.name\", damageTypeCategory\n",
      "    ': no such column: damage\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,4,42,44,45,47,48,49,50,51,52,53,54,55,57,58,59,61,62,63,70,71,72,108,112,113,115,116,124,125,126,128,129,130,131,132,133,134,136,138,139,140,157,158,159,160,161,162,169,170,171,175,183,184,185,187,188,189,190,191,192,193,195,196,204,205,206,208,209,210,211,212,213,214,216,217,225,226,227,229,230,231,232,233,234,235,237,246,247,248,252,254,255,256,257,259,260,261,263,265,267,268,276,277,278,280,281,282,284,288,290,293,294,302,303,304,306,307,308,313,314,315) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "⚠️ 파일 output3305.csv 처리 중 오류 발생: Execution failed on sql '\n",
      "    WITH name_cte AS (\n",
      "        SELECT DISTINCT \"character.name\" AS name\n",
      "        FROM output\n",
      "        WHERE \"character.teamId\" IN (\n",
      "            SELECT DISTINCT \"character.teamId\"\n",
      "            FROM output\n",
      "            WHERE \"character.accountId\" IN (\n",
      "                SELECT DISTINCT substr(teamKillers_AccountId, 3, 40) FROM output\n",
      "            )\n",
      "        )\n",
      "    )\n",
      "    \n",
      "    SELECT \"attacker.name\" AS name, COUNT(damage) AS damage_count, damageTypeCategory\n",
      "    FROM output\n",
      "    WHERE \"attacker.teamId\" = \"victim.teamId\"\n",
      "      AND \"attacker.name\" IN (SELECT name FROM name_cte)\n",
      "      AND \"victim.name\" IN (SELECT name FROM name_cte)\n",
      "      AND \"attacker.name\" != \"victim.name\"\n",
      "    GROUP BY \"attacker.name\", damageTypeCategory\n",
      "    ': no such column: damage\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,4,24,25,26,45,47,48,50,51,52,53,54,55,57,58,59,61,62,63,70,71,72,108,112,114,115,116,117,119,120,121,122,123,125,126,134,135,136,138,139,140,141,143,144,145,146,148,149,150,167,168,169,170,171,172,179,180,181,185,193,194,195,197,198,199,200,201,202,203,205,206,214,215,216,218,219,220,221,222,223,224,226,227,235,236,237,239,240,241,242,243,244,245,247,248,249,256,257,258,263,265,268,269,277,278,279,281,282,283,285,289,291,292,300,301,302,304,305,306,310,311,312,313) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,4,17,24,25,40,44,46,47,49,50,51,52,53,54,55,57,58,59,61,62,63,70,71,72,108,110,111,112,113,115,116,117,118,119,121,122,123,131,132,133,134,135,136,137,138,139,140,141,143,145,146,147,164,165,166,167,168,169,176,177,178,182,190,191,192,194,195,196,197,198,199,200,202,203,211,212,213,215,216,217,218,219,220,221,223,224,232,233,234,236,237,238,239,240,241,242,244,253,254,255,264,266,267,268,276,277,278,280,281,282,284,285,289,295,296,297) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,4,26,27,35,36,37,39,40,41,42,44,45,46,47,48,49,50,51,52,53,54,55,57,58,59,61,62,63,70,71,72,108,110,111,112,113,115,116,117,118,122,123,125,126,134,135,136,138,139,140,141,142,143,144,146,148,149,150,167,168,169,170,171,172,179,180,181,185,193,194,195,197,198,199,200,201,202,203,205,206,214,215,216,218,219,220,221,222,223,224,226,227,235,236,237,239,240,241,242,243,244,245,247,256,257,258,263,265,267,268,276,277,278,280,281,282,287,291,292,295,296,304,305,306,308,309,310,312,314,315) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,4,24,25,49,50,51,52,53,54,55,57,58,59,61,62,63,70,71,72,108,110,111,112,113,115,116,117,118,119,121,122,123,131,132,133,135,136,137,138,139,140,141,145,146,147,164,165,166,167,168,169,176,177,178,182,190,191,192,194,195,196,197,198,199,200,202,203,211,212,213,215,216,217,218,219,220,221,223,224,232,233,234,236,237,238,239,240,241,242,244,245,246,253,254,255,260,264,265,273,274,275,277,278,279,281,286,287,295,296,297,299,300,301,302,306,310,311,312) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,4,17,42,44,45,47,48,49,50,51,52,53,54,55,57,58,59,61,62,63,70,71,72,81,112,114,115,116,117,119,120,121,122,123,125,126,134,135,136,138,139,140,141,143,144,145,146,148,149,150,167,168,169,170,179,180,181,185,193,194,195,197,198,199,200,201,202,203,205,206,214,215,216,218,219,220,221,222,223,224,226,227,235,236,237,239,240,241,242,243,244,245,247,256,257,258,263,266,268,269,277,278,279,281,282,283,284,286,290,295,296,297,305,306,307,309,310,311,312,313) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,4,42,44,45,49,50,51,52,53,54,55,57,58,59,61,62,63,70,71,72,108,112,113,115,116,124,125,126,128,129,130,131,132,133,134,136,138,139,140,141,143,144,145,146,148,149,150,167,168,169,170,171,172,179,180,181,185,193,194,195,197,198,199,200,201,202,203,205,206,214,215,216,218,219,220,221,222,223,224,226,227,235,236,237,239,240,241,242,243,244,245,247,256,257,258,263,265,266,274,275,276,278,279,280,282,284,288,289,290,298,299,300,302,303,304,306,311,312) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,4,42,44,45,52,53,54,55,57,58,59,108,110,111,112,113,115,116,117,118,119,121,122,123,131,132,133,135,136,137,138,139,140,141,146,148,149,150,167,168,169,170,171,172,179,180,181,185,193,194,195,197,198,199,200,201,202,203,205,206,214,215,216,218,219,220,221,222,223,224,226,227,235,236,237,239,240,241,242,243,244,245,247,256,257,258,263,265,267,268,276,277,278,280,281,282,284,288,291,294,295,303,304,305,307,308,309,313,314,315) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,4,17,40,52,53,54,55,57,58,59,124,145,146,147,164,165,166,167,168,169,176,177,178,182,190,191,192,193,194,195,196,197,198,199,200,202,203,211,212,213,214,215,216,217,218,219,220,221,223,224,232,233,234,235,236,237,238,239,240,241,242,244,253,254,255,263,267,269,270,278,279,280,282,283,284,285,286,290,292,293,301,302,303,305,306,307,310,312,313) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "⚠️ 파일 output3315.csv 처리 중 오류 발생: Execution failed on sql '\n",
      "    WITH name_cte AS (\n",
      "        SELECT DISTINCT \"character.name\" AS name\n",
      "        FROM output\n",
      "        WHERE \"character.teamId\" IN (\n",
      "            SELECT DISTINCT \"character.teamId\"\n",
      "            FROM output\n",
      "            WHERE \"character.accountId\" IN (\n",
      "                SELECT DISTINCT substr(teamKillers_AccountId, 3, 40) FROM output\n",
      "            )\n",
      "        )\n",
      "    )\n",
      "    \n",
      "    SELECT \"attacker.name\" AS name, COUNT(damage) AS damage_count, damageTypeCategory\n",
      "    FROM output\n",
      "    WHERE \"attacker.teamId\" = \"victim.teamId\"\n",
      "      AND \"attacker.name\" IN (SELECT name FROM name_cte)\n",
      "      AND \"victim.name\" IN (SELECT name FROM name_cte)\n",
      "      AND \"attacker.name\" != \"victim.name\"\n",
      "    GROUP BY \"attacker.name\", damageTypeCategory\n",
      "    ': no such column: damage\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,20,24,25,26,27,29,30,31,33,34,35,42,43,44,119,120,121,123,124,125,126,128,129,130,134,135,136,137,140,142,143,145,146,147,148,151,152,153,170,171,172,173,182,183,184,188,196,197,198,200,201,202,203,204,205,206,208,209,217,218,219,221,222,223,224,225,226,227,229,230,238,239,240,242,243,244,245,246,247,248,250,251,252,259,260,261,266,267,271,276,277,285,286,287,289,290,291,293,295,296) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,4,42,44,45,47,48,49,50,51,52,54,55,56,58,59,60,67,68,69,105,106,108,109,110,118,119,120,122,123,124,125,129,131,132,133,134,136,137,138,139,140,141,143,144,145,146,148,149,150,167,168,169,170,171,172,179,180,181,185,193,194,195,197,198,199,200,201,202,203,205,206,214,215,216,218,219,220,221,222,223,224,226,227,235,236,237,239,240,241,242,243,244,245,247,248,249,256,257,258,263,265,266,267,275,276,277,279,280,281,285,289,291,293,294,302,303,304,306,307,308,313,314,315) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,4,56,57,58,59,61,62,63,65,66,67,74,75,76,130,132,133,134,135,137,138,139,141,142,143,144,145,147,148,149,150,167,168,169,170,179,180,181,185,193,194,195,197,198,199,200,201,202,203,205,206,214,215,216,218,219,220,221,222,223,224,226,227,235,236,237,239,240,241,242,243,244,245,247,256,257,258,264,265,266,274,275,276,278,279,280,283,287,291,292,293) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,4,56,57,58,59,60,61,62,64,65,66,68,69,70,77,78,79,110,111,113,114,115,123,124,125,127,128,129,130,131,132,133,135,137,138,139,140,142,143,144,145,146,147,164,165,166,167,168,169,176,177,178,182,190,191,192,194,195,196,197,198,199,200,202,203,211,212,213,215,216,217,218,219,220,221,223,224,232,233,234,236,237,238,239,240,241,242,244,253,254,255,261,266,267,268,276,277,278,280,281,282,287,291,293,294,302,303,304,306,307,308,311,313,314) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,15,23,26,38,42,44,45,46,47,48,49,50,51,52,54,55,56,58,59,60,67,68,69,108,110,111,112,113,115,116,117,118,119,121,122,123,131,132,133,134,135,136,137,141,142,143,144,147,148,150,151,152,169,170,171,172,173,174,181,182,183,187,195,196,197,199,200,201,202,203,204,205,207,208,216,217,218,220,221,222,223,224,225,226,228,229,237,238,239,241,242,243,244,245,246,247,249,250,251,258,259,260,265,266,274,275,276,278,279,280,281,283,287,291,293,294) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,4,26,27,35,36,37,39,40,41,42,44,45,46,47,48,49,50,51,52,54,55,56,58,59,60,67,68,69,105,106,107,108,109,111,112,113,121,122,123,125,126,127,128,130,131,132,133,135,136,137,138,140,141,142,143,149,150,151,152,169,170,171,172,173,174,181,182,183,187,195,196,197,199,200,201,202,203,204,205,207,208,216,217,218,220,221,222,223,224,225,226,228,229,237,238,239,241,242,243,244,245,246,247,249,250,251,258,259,260,265,267,268,276,277,278,280,281,282,285,289,290,292,293,301,302,303,305,306,307,313,314,315) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,42,44,45,47,48,49,50,51,52,54,55,56,58,59,60,67,68,69,125,126,127,136,139,140,142,143,144,161,162,163,164,165,166,173,174,175,179,180,181,182,184,185,193,194,195,197,198,199,200,201,202,203,205,206,214,215,216,218,219,220,221,222,223,224,226,227,228,235,236,237,245,249,252,255,259,261,263,264,272,273,274,276,277,278,280,281,282,290,291,292,294,295,296,297,298,306,307,308,310,311,312,313,314) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,4,52,53,54,55,56,59,60,61,62,64,65,66,68,69,70,77,78,79,110,114,115,117,118,126,127,128,130,131,132,133,135,136,137,138,140,141,142,143,144,145,146,148,149,150,167,168,169,170,171,172,179,180,181,185,193,194,195,197,198,199,200,201,202,203,205,206,214,215,216,218,219,220,221,222,223,224,226,227,235,236,237,239,240,241,242,243,244,245,247,256,257,258,263,265,267,268,276,277,278,280,281,282,286,290,293,294,302,303,304,306,307,308,310,313,314) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,4,42,44,45,47,48,49,50,51,52,53,54,55,57,58,59,61,116,118,119,121,122,123,131,132,133,135,136,137,142,143,144,145,146,149,151,152,153,170,171,172,173,174,175,182,183,184,188,196,197,198,200,201,202,203,204,205,206,208,209,217,218,219,221,222,223,224,225,226,227,229,230,238,239,240,242,243,244,245,246,247,248,250,259,260,261,266,270,271,279,280,281,283,284,285,287,291,295,296,304,305,306,308,309,310,312,313,314,315) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,4,42,44,45,47,48,49,50,51,52,53,54,55,57,58,59,108,110,111,112,113,115,116,117,118,120,124,125,127,128,136,137,138,140,141,142,143,144,145,146,149,150,151,152,169,170,171,172,173,174,181,182,183,187,195,196,197,199,200,201,202,203,204,205,207,208,216,217,218,220,221,222,223,224,225,226,228,229,237,238,239,241,242,243,244,245,246,247,249,250,251,258,259,260,265,267,268,276,277,278,280,281,282,285,289,292,293,294,295,303,304,305,307,308,309,314,315) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,4,24,25,44,46,47,49,50,51,52,53,54,55,57,58,59,61,62,63,70,71,72,108,109,111,112,113,121,122,123,125,126,127,128,130,131,132,133,135,136,137,141,144,145,146,147,148,151,152,153,170,171,172,173,174,175,182,183,184,188,196,197,198,200,201,202,203,204,205,206,208,209,217,218,219,221,222,223,224,225,226,227,229,230,238,239,240,242,243,244,245,246,247,248,250,251,252,259,260,261,266,267,268,276,277,278,280,281,282,287,291,293,297,298,299) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,20,24,25,26,27,29,30,31,33,34,35,42,43,44,122,126,128,129,130,131,133,134,135,137,139,140,141,158,159,160,161,170,171,172,176,184,185,186,188,189,190,191,192,193,194,196,197,205,206,207,209,210,211,212,213,214,215,217,218,226,227,228,230,231,232,233,234,235,236,238,239,240,247,248,249,258,259,261,262,263,264,268,275,277,279,280) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "⚠️ 파일 output3328.csv 처리 중 오류 발생: Execution failed on sql '\n",
      "    WITH name_cte AS (\n",
      "        SELECT DISTINCT \"character.name\" AS name\n",
      "        FROM output\n",
      "        WHERE \"character.teamId\" IN (\n",
      "            SELECT DISTINCT \"character.teamId\"\n",
      "            FROM output\n",
      "            WHERE \"character.accountId\" IN (\n",
      "                SELECT DISTINCT substr(teamKillers_AccountId, 3, 40) FROM output\n",
      "            )\n",
      "        )\n",
      "    )\n",
      "    \n",
      "    SELECT \"attacker.name\" AS name, COUNT(damage) AS damage_count, damageTypeCategory\n",
      "    FROM output\n",
      "    WHERE \"attacker.teamId\" = \"victim.teamId\"\n",
      "      AND \"attacker.name\" IN (SELECT name FROM name_cte)\n",
      "      AND \"victim.name\" IN (SELECT name FROM name_cte)\n",
      "      AND \"attacker.name\" != \"victim.name\"\n",
      "    GROUP BY \"attacker.name\", damageTypeCategory\n",
      "    ': no such column: damage\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,4,31,32,40,41,42,44,45,46,47,49,50,51,52,53,54,56,57,58,59,61,62,63,65,66,67,74,75,76,107,109,110,111,112,114,115,116,117,118,122,123,124,125,127,128,136,137,138,140,141,142,143,144,145,146,148,149,150,167,168,169,170,171,172,179,180,181,185,193,194,195,197,198,199,200,201,202,203,205,206,214,215,216,218,219,220,221,222,223,224,226,227,235,236,237,239,240,241,242,243,244,245,247,256,257,258,263,265,267,268,276,277,278,280,281,282,284,287,291,294,295,303,304,305,307,308,309,313,314,315) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,4,42,44,45,47,48,49,50,51,52,53,54,55,57,58,59,108,112,114,116,117,118,119,121,122,123,124,125,127,128,136,137,138,140,141,142,143,144,145,146,149,150,151,152,169,170,171,172,173,174,181,182,183,187,195,196,197,199,200,201,202,203,204,205,207,208,216,217,218,220,221,222,223,224,225,226,228,229,237,238,239,241,242,243,244,245,246,247,249,250,251,258,259,260,265,267,268,276,277,278,280,281,282,284,285,289,293,294,302,303,304,306,307,308,312,313,314) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,4,42,44,45,49,50,51,52,54,55,56,58,59,60,67,68,69,126,152,153,168,239,242,243,250,252,256,259,260,261,269,270,271,273,274,275,277,278,279,287,288,289,291,292,293,294,295) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,15,28,43,47,49,50,57,58,59,60,62,63,64,108,112,113,115,116,124,125,126,127,128,129,130,131,133,134,135,136,138,139,140,142,143,145,146,147,148,150,151,152,169,170,171,172,173,174,181,182,183,187,195,196,197,199,200,201,202,203,204,205,207,208,216,217,218,220,221,222,223,224,225,226,228,229,237,238,239,241,242,243,244,245,246,247,249,250,251,258,259,260,266,268,269,277,278,279,281,282,283,286,287,291,294,296,297,305,306,307,309,310,311,314,315) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "⚠️ 파일 output3333.csv 처리 중 오류 발생: Execution failed on sql '\n",
      "    WITH name_cte AS (\n",
      "        SELECT DISTINCT \"character.name\" AS name\n",
      "        FROM output\n",
      "        WHERE \"character.teamId\" IN (\n",
      "            SELECT DISTINCT \"character.teamId\"\n",
      "            FROM output\n",
      "            WHERE \"character.accountId\" IN (\n",
      "                SELECT DISTINCT substr(teamKillers_AccountId, 3, 40) FROM output\n",
      "            )\n",
      "        )\n",
      "    )\n",
      "    \n",
      "    SELECT \"attacker.name\" AS name, COUNT(damage) AS damage_count, damageTypeCategory\n",
      "    FROM output\n",
      "    WHERE \"attacker.teamId\" = \"victim.teamId\"\n",
      "      AND \"attacker.name\" IN (SELECT name FROM name_cte)\n",
      "      AND \"victim.name\" IN (SELECT name FROM name_cte)\n",
      "      AND \"attacker.name\" != \"victim.name\"\n",
      "    GROUP BY \"attacker.name\", damageTypeCategory\n",
      "    ': no such column: damage\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,4,42,44,45,49,50,51,52,53,54,55,57,58,59,61,108,110,111,112,113,115,116,117,118,119,121,122,123,131,132,133,135,136,137,138,139,140,141,146,147,148,165,166,167,168,169,170,177,178,179,183,191,192,193,195,196,197,198,199,200,201,203,204,212,213,214,216,217,218,219,220,221,222,224,225,233,234,235,237,238,239,240,241,242,243,245,246,247,254,255,256,260,263,266,268,269,277,278,279,281,282,283,284,285,289,292,296,297,305,306,307,309,310,311,312,313) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,4,47,48,49,50,51,52,53,54,55,57,58,59,61,62,63,70,71,72,128,129,130,131,143,144,145,162,163,164,165,166,167,174,175,176,180,188,189,190,192,193,194,195,196,197,198,200,201,209,210,211,213,214,215,216,217,218,219,221,222,230,231,232,234,235,236,237,238,239,240,242,251,252,253,258,266,269,270,278,279,280,282,283,284,285,289,295,296,297,305,306,307,309,310,311,312,313,314) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,49,50,51,52,54,55,56,115,139,140,141,142,143,144,146,149,150,151,152,169,170,171,172,181,182,183,187,195,196,197,199,200,201,202,203,204,205,207,208,216,217,218,220,221,222,223,224,225,226,228,229,237,238,239,241,242,243,244,245,246,247,249,250,251,258,259,260,265,268,269,277,278,279,281,282,283,284,288,294,297,298) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,4,55,56,59,60,61,62,64,65,66,68,69,70,77,78,79,110,112,113,114,115,117,118,119,120,121,123,124,125,133,134,135,137,138,139,140,141,142,143,145,146,147,164,165,166,167,176,177,178,182,190,191,192,194,195,196,197,198,199,200,202,203,211,212,213,215,216,217,218,219,220,221,223,224,232,233,234,236,237,238,239,240,241,242,244,253,254,255,261,266,267,268,276,277,278,280,281,282,284,288,292,294,295,296,304,305,306,308,309,310,313,314) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,20,42,44,45,47,48,49,50,52,53,54,56,57,58,65,66,67,104,105,106,107,139,141,142,143,144,147,148,149,150,167,168,169,170,171,172,179,180,181,185,193,194,195,197,198,199,200,201,202,203,205,206,214,215,216,218,219,220,221,222,223,224,226,227,235,236,237,239,240,241,242,243,244,245,247,248,249,256,257,258,263,266,267,268,276,277,278,280,281,282,283,287,291,292,300,301,302,304,305,306,309,313,314) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,23,42,44,45,47,48,49,50,51,52,54,55,56,58,59,60,67,68,69,119,138,139,140,141,146,147,148,149,166,167,168,169,178,179,180,184,192,193,194,196,197,198,199,200,201,202,204,205,213,214,215,217,218,219,220,221,222,223,225,226,234,235,236,238,239,240,241,242,243,244,246,247,248,255,256,257,261,268,270,274,275,276,284,285,286,288,289,290,294,295) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,44,46,47,52,53,54,55,57,58,59,61,62,63,70,71,72,108,110,111,112,113,115,116,117,118,119,121,122,123,131,132,133,135,136,137,138,143,144,145,146,149,150,151,152,169,170,171,172,173,174,181,182,183,187,195,196,197,199,200,201,202,203,204,205,207,208,216,217,218,220,221,222,223,224,225,226,228,229,237,238,239,241,242,243,244,245,246,247,249,258,259,260,265,266,274,275,276,278,279,280,282,286,290,293,297,298,306,307,308,310,311,312,313,314) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,4,42,44,45,47,48,49,50,51,52,53,54,55,57,58,59,108,110,111,112,113,115,116,117,118,122,124,125,127,128,136,137,138,140,141,142,143,144,145,146,148,149,150,167,168,169,170,171,172,179,180,181,185,193,194,195,197,198,199,200,201,202,203,205,206,214,215,216,218,219,220,221,222,223,224,226,227,235,236,237,239,240,241,242,243,244,245,247,248,249,256,257,258,264,266,268,269,277,278,279,281,282,283,285,289,291,296,297) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,4,42,44,45,52,53,54,55,57,58,59,108,109,111,112,113,121,122,123,125,126,127,128,130,131,132,133,135,136,137,138,139,140,141,143,145,146,147,164,165,166,167,168,169,176,177,178,182,190,191,192,194,195,196,197,198,199,200,202,203,211,212,213,215,216,217,218,219,220,221,223,224,232,233,234,236,237,238,239,240,241,242,244,245,246,253,254,255,264,266,268,269,277,278,279,281,282,283,286,287,291,293,298,299,307,308,309,311,312,313,314,315) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,56,57,58,59,60,61,62,64,65,66,68,69,70,77,78,79,110,112,113,114,115,117,118,119,120,121,123,124,125,133,134,135,137,138,139,141,142,143,144,145,150,151,152,169,170,171,172,181,182,183,187,195,196,197,199,200,201,202,203,204,205,207,208,216,217,218,220,221,222,223,224,225,226,228,229,230,231,232,234,243,244,245,250,252,260,261,262,264,265,266,268,269,270,278,279,280,282,283,284,287,291,293,294,295) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,20,44,46,47,49,50,51,52,54,55,56,58,59,60,67,68,69,116,119,138,139,140,141,144,145,146,147,164,165,166,167,176,177,178,182,190,191,192,194,195,196,197,198,199,200,202,203,211,212,213,215,216,217,218,219,220,221,223,224,232,233,234,236,237,238,239,240,241,242,244,245,246,253,254,255,263,267,268,272,274,275,283,284,285,287,288,289,294,295,296) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,4,24,25,26,27,28,52,53,54,55,57,58,59,61,62,63,70,71,72,108,110,111,112,113,115,116,117,118,119,121,122,123,131,132,133,135,136,137,138,139,140,141,143,144,145,162,163,164,165,166,167,174,175,176,180,188,189,190,192,193,194,195,196,197,198,200,201,209,210,211,213,214,215,216,217,218,219,221,222,230,231,232,234,235,236,237,238,239,240,242,251,252,253,260,262,265,266,274,275,276,278,279,280,286,290,291,292,300,301,302,304,305,306,310,313,314) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,4,42,44,45,49,50,51,52,53,54,55,57,58,59,61,62,63,70,71,72,108,112,114,115,116,117,119,120,121,122,123,125,126,134,135,136,138,139,140,141,142,143,144,146,149,150,151,168,169,170,171,180,181,182,186,187,188,189,191,192,200,201,202,204,205,206,207,208,209,210,212,213,221,222,223,225,226,227,228,229,230,231,233,234,235,242,243,244,248,256,257,258,260,261,262,265,266,267,275,276,277,279,280,281,283,285,289,292,293,301,302,303,305,306,307,309,312,314,315) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,4,17,42,44,45,47,48,49,50,51,52,53,54,55,57,58,59,61,62,63,70,71,72,108,109,111,112,113,121,122,123,125,126,127,128,130,131,132,133,135,136,137,138,139,140,141,146,148,149,150,167,168,169,170,171,172,179,180,181,185,193,194,195,197,198,199,200,201,202,203,205,206,214,215,216,218,219,220,221,222,223,224,226,227,235,236,237,239,240,241,242,243,244,245,247,256,257,258,263,266,268,269,277,278,279,281,282,283,284,287,291,295,296,304,305,306,308,309,310,313,314,315) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,4,42,44,45,50,51,52,53,54,55,57,58,59,61,62,63,70,71,72,108,112,113,115,116,124,125,126,128,129,130,131,132,133,134,136,138,139,140,141,143,144,145,146,148,149,150,167,168,169,170,171,172,179,180,181,185,193,194,195,197,198,199,200,201,202,203,205,206,214,215,216,218,219,220,221,222,223,224,226,227,235,236,237,239,240,241,242,243,244,245,247,248,249,256,257,258,264,267,268,276,277,278,280,281,282,284,287,291,293,296,297,305,306,307,309,310,311,312,313,314) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,23,44,46,47,49,50,51,52,54,55,56,58,59,60,67,68,69,141,142,143,144,147,148,150,151,152,169,170,171,172,181,182,183,187,195,196,197,199,200,201,202,203,204,205,207,208,216,217,218,220,221,222,223,224,225,226,228,229,237,238,239,241,242,243,244,245,246,247,249,250,251,258,259,260,266,268,272,280,281,282) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,4,44,46,47,49,50,51,52,54,55,56,105,106,107,108,109,111,112,113,121,122,123,125,126,127,128,130,131,132,133,135,136,137,142,143,145,146,147,164,165,166,167,168,169,176,177,178,182,183,184,185,187,188,196,197,198,200,201,202,203,204,205,206,208,209,217,218,219,221,222,223,224,225,226,227,229,230,231,238,239,240,244,245,246,248,256,257,258,260,261,262,264,266,268,269,270,278,279,280,282,283,284,285,289,291,296,297,305,306,307,309,310,311,313,314) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,4,17,24,25,44,46,47,50,51,52,53,54,55,57,58,59,108,110,111,112,113,115,116,117,118,120,121,123,124,125,133,134,135,136,137,138,139,143,144,145,146,149,150,151,152,169,170,171,172,173,174,181,182,183,187,195,196,197,199,200,201,202,203,204,205,207,208,216,217,218,220,221,222,223,224,225,226,228,229,237,238,239,241,242,243,244,245,246,247,249,250,251,258,259,260,265,267,268,276,277,278,280,281,282,284,285,289,294,295,303,304,305,307,308,309,311,312,313) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "⚠️ 파일 output3352.csv 처리 중 오류 발생: Execution failed on sql '\n",
      "    WITH name_cte AS (\n",
      "        SELECT DISTINCT \"character.name\" AS name\n",
      "        FROM output\n",
      "        WHERE \"character.teamId\" IN (\n",
      "            SELECT DISTINCT \"character.teamId\"\n",
      "            FROM output\n",
      "            WHERE \"character.accountId\" IN (\n",
      "                SELECT DISTINCT substr(teamKillers_AccountId, 3, 40) FROM output\n",
      "            )\n",
      "        )\n",
      "    )\n",
      "    \n",
      "    SELECT \"attacker.name\" AS name, COUNT(damage) AS damage_count, damageTypeCategory\n",
      "    FROM output\n",
      "    WHERE \"attacker.teamId\" = \"victim.teamId\"\n",
      "      AND \"attacker.name\" IN (SELECT name FROM name_cte)\n",
      "      AND \"victim.name\" IN (SELECT name FROM name_cte)\n",
      "      AND \"attacker.name\" != \"victim.name\"\n",
      "    GROUP BY \"attacker.name\", damageTypeCategory\n",
      "    ': no such column: damage\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,4,17,38,42,44,45,52,53,54,55,57,58,59,61,62,63,70,71,72,108,110,111,112,113,115,116,117,118,122,124,125,127,128,136,137,138,139,140,141,142,143,144,145,146,149,150,151,159,160,161,162,163,164,165,167,168,169,186,187,188,189,190,191,198,199,200,204,205,206,207,209,210,218,219,220,222,223,224,225,226,227,228,230,231,239,240,241,243,244,245,246,247,248,249,251,252,253,260,261,262,266,274,275,276,278,279,280,282,285,289,291,293,296,297) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,20,42,44,45,49,50,51,52,54,55,56,58,59,60,67,68,69,113,118,119,121,122,123,131,132,133,135,136,137,138,139,140,141,144,145,146,147,164,165,166,167,176,177,178,182,190,191,192,194,195,196,197,198,199,200,202,203,211,212,213,215,216,217,218,219,220,221,223,224,232,233,234,236,237,238,239,240,241,242,244,245,246,253,254,255,259,266,268,269,277,278,279,281,282,283,286,290,295,296) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,59,60,61,62,64,65,66,110,111,113,114,115,123,124,125,127,128,129,131,132,134,135,136,153,154,155,156,165,166,167,171,172,173,174,176,177,185,186,187,189,190,191,192,193,194,195,197,198,206,207,208,210,211,212,213,214,215,216,218,219,220,227,228,229,233,235,236,237,238,240,241,242,244,247,250,254,256,261,262,263,271,272,273,275,276,277,281,282) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,4,42,44,45,47,48,49,50,51,52,53,54,55,57,58,59,61,62,63,70,71,72,108,112,114,115,116,117,119,120,121,122,123,125,126,134,135,136,138,139,140,141,142,143,144,146,148,149,150,167,168,169,170,171,172,179,180,181,185,193,194,195,197,198,199,200,201,202,203,205,206,214,215,216,218,219,220,221,222,223,224,226,227,235,236,237,239,240,241,242,243,244,245,247,248,249,256,257,258,263,265,266,267,275,276,277,279,280,281,286,290,296,297,298,299) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,56,57,58,59,60,61,62,64,65,66,68,69,70,77,78,79,110,111,113,114,115,123,124,125,127,128,129,130,132,133,134,135,137,138,139,141,142,143,144,145,147,148,149,166,167,168,169,178,179,180,184,192,193,194,196,197,198,199,200,201,202,204,205,213,214,215,217,218,219,220,221,222,223,225,226,234,235,236,238,239,240,241,242,243,244,246,255,256,257,261,263,265,266,274,275,276,278,279,280,282,286,289,292,293,294) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,4,59,60,61,62,64,65,66,68,69,70,77,78,79,110,112,113,114,115,117,118,119,120,121,123,124,125,133,134,135,137,138,139,140,141,142,143,145,146,147,164,165,166,167,168,169,176,177,178,182,190,191,192,194,195,196,197,198,199,200,202,203,211,212,213,215,216,217,218,219,220,221,223,224,232,233,234,236,237,238,239,240,241,242,244,253,254,255,260,262,264,265,273,274,275,277,278,279,285,289,290,291,299,300,301,303,304,305,307,313,314,315) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,4,42,44,45,52,53,54,55,57,58,59,128,129,131,141,146,148,149,150,167,168,169,170,171,172,179,180,181,185,193,194,195,197,198,199,200,201,202,203,205,206,214,215,216,218,219,220,221,222,223,224,226,227,235,236,237,239,240,241,242,243,244,245,247,248,249,256,257,258,263,268,269,270,278,279,280,282,283,284,285,289,291,293,294,302,303,304,306,307,308,311,312) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,4,47,48,49,50,51,52,54,55,56,58,59,60,67,68,69,105,106,107,138,144,145,146,147,148,151,152,153,170,171,172,173,174,175,182,183,184,188,196,197,198,200,201,202,203,204,205,206,208,209,217,218,219,221,222,223,224,225,226,227,229,230,238,239,240,242,243,244,245,246,247,248,250,251,252,259,260,261,267,268,269,277,278,279,281,282,283,284,288,291,294,295,303,304,305,307,308,309,313,314) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,20,26,27,28,29,31,32,33,35,36,37,44,45,46,129,132,133,135,136,137,154,155,156,157,166,167,168,172,173,174,175,177,178,186,187,188,190,191,192,193,194,195,196,198,199,207,208,209,211,212,213,214,215,216,217,219,220,221,228,229,230,235,238,239,241,242,243,244,247,248,252,262,263,264,272,273,274,276,277,278,279,280,288,289,290,292,293,294,295,296) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,23,24,25,44,46,47,49,50,51,52,54,55,56,58,59,60,67,68,69,125,126,127,136,138,139,140,141,144,146,147,148,165,166,167,168,177,178,179,183,191,192,193,195,196,197,198,199,200,201,203,204,212,213,214,216,217,218,219,220,221,222,224,225,233,234,235,237,238,239,240,241,242,243,245,254,255,256,260,265,266,274,275,276,278,279,280,282,284,288,292,296,297) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,4,42,44,45,47,48,49,50,51,52,53,54,55,57,58,59,61,108,109,111,112,113,121,122,123,125,126,127,128,130,131,132,133,135,136,137,138,140,141,142,143,145,146,147,164,165,166,167,168,169,176,177,178,182,190,191,192,194,195,196,197,198,199,200,202,203,211,212,213,215,216,217,218,219,220,221,223,224,232,233,234,236,237,238,239,240,241,242,244,253,254,255,260,263,268,269,277,278,279,281,282,283,286,290,293,294,297,298,306,307,308,310,311,312,314,315) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,4,42,44,45,47,48,49,50,51,52,53,54,55,57,58,59,108,109,111,112,113,121,122,123,125,126,127,131,133,134,135,136,138,139,140,141,143,144,145,146,148,149,150,167,168,169,170,171,172,179,180,181,185,193,194,195,197,198,199,200,201,202,203,205,206,214,215,216,218,219,220,221,222,223,224,226,227,235,236,237,239,240,241,242,243,244,245,247,256,257,258,263,265,267,268,276,277,278,280,281,282,284,288,291,296,297,298) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,4,52,53,56,57,58,59,60,61,62,64,65,66,68,69,70,77,78,79,110,112,113,114,115,117,118,119,120,121,123,124,125,133,134,135,137,138,139,140,141,142,143,145,146,147,164,165,166,167,176,177,178,182,190,191,192,194,195,196,197,198,199,200,202,203,211,212,213,215,216,217,218,219,220,221,223,224,232,233,234,236,237,238,239,240,241,242,244,253,254,255,260,262,263,264,265,273,274,275,277,278,279,283,286,290,292,295,296) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,4,42,44,45,47,48,49,50,51,52,53,54,55,57,58,59,61,62,63,70,71,72,108,112,114,115,116,117,119,120,121,122,123,125,126,134,135,136,138,139,140,141,142,143,144,146,148,149,150,167,168,169,170,171,172,179,180,181,185,193,194,195,197,198,199,200,201,202,203,205,206,214,215,216,218,219,220,221,222,223,224,226,227,235,236,237,239,240,241,242,243,244,245,247,248,249,256,257,258,263,264,265,273,274,275,277,278,279,281,282,288,289,297,298,299,301,302,303,304,308,312,314,315) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,15,20,38,42,44,45,52,53,54,55,57,58,59,61,62,63,70,71,72,116,134,141,142,143,144,147,148,149,150,167,168,169,170,171,172,179,180,181,185,193,194,195,197,198,199,200,201,202,203,205,206,214,215,216,217,218,219,220,221,222,223,224,226,227,235,236,237,238,239,240,241,242,243,244,245,247,248,249,256,257,258,263,266,268,269,277,278,279,281,282,283,284,285,289,294,295,296) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,20,44,46,47,49,50,51,52,54,55,56,58,59,60,67,68,69,126,147,148,149,150,167,168,169,170,179,180,181,185,193,194,195,197,198,199,200,201,202,203,205,206,214,215,216,218,219,220,221,222,223,224,226,227,235,236,237,239,240,241,242,243,244,245,247,248,249,256,257,258,262,265,269,273,275,276,284,285,286,288,289,290,292,295,296) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,4,17,26,27,35,36,37,39,40,41,42,44,45,46,47,48,49,50,51,52,53,54,55,57,58,59,61,62,63,70,71,72,108,109,111,112,113,121,122,123,125,126,127,128,130,131,132,133,135,136,137,138,143,144,145,146,148,149,150,167,168,169,170,179,180,181,185,193,194,195,197,198,199,200,201,202,203,205,206,214,215,216,218,219,220,221,222,223,224,226,227,235,236,237,239,240,241,242,243,244,245,247,248,249,256,257,258,263,267,268,272,273,274,282,283,284,286,287,288,290,292,293,301,302,303,305,306,307,310,311) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,4,42,44,45,49,50,51,52,53,54,55,57,58,59,61,62,63,70,71,72,108,110,111,112,113,115,116,117,118,119,121,122,123,131,132,133,135,136,137,138,139,140,141,146,149,150,151,152,169,170,171,172,173,174,181,182,183,187,195,196,197,199,200,201,202,203,204,205,207,208,216,217,218,220,221,222,223,224,225,226,228,229,237,238,239,241,242,243,244,245,246,247,249,250,251,258,259,260,264,265,273,274,275,277,278,279,282,284,288,290,297,298) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,4,42,44,45,47,48,49,50,51,52,53,54,55,57,58,59,61,108,109,111,112,113,121,122,123,125,126,127,128,129,130,131,136,138,139,140,141,143,144,145,146,148,149,150,167,168,169,170,171,172,179,180,181,185,193,194,195,197,198,199,200,201,202,203,205,206,214,215,216,218,219,220,221,222,223,224,226,227,235,236,237,239,240,241,242,243,244,245,247,248,249,256,257,258,263,265,267,268,276,277,278,280,281,282,284,288,291,292,300,301,302,304,305,306,308,309,312,313) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,4,59,60,61,62,64,65,66,68,69,70,77,78,79,110,112,113,114,115,117,118,119,120,121,123,124,125,133,134,135,137,138,139,140,141,142,143,148,149,150,167,168,169,170,171,172,179,180,181,185,193,194,195,197,198,199,200,201,202,203,205,206,214,215,216,218,219,220,221,222,223,224,226,227,235,236,237,239,240,241,242,243,244,245,247,256,257,258,263,265,268,269,277,278,279,281,282,283,284,288,293,295,296,304,305,306,308,309,310,311,314,315) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,4,17,44,46,47,49,50,51,52,53,54,55,57,58,59,108,110,111,112,113,115,116,117,118,119,121,122,123,131,132,133,134,135,136,137,138,139,140,141,143,148,149,150,167,168,169,170,171,172,179,180,181,185,193,194,195,197,198,199,200,201,202,203,205,206,214,215,216,218,219,220,221,222,223,224,226,227,235,236,237,239,240,241,242,243,244,245,247,248,249,256,257,258,263,265,268,269,277,278,279,281,282,283,285,289,291,292,300,301,302,304,305,306,309,311,312) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "⚠️ 파일 output3374.csv 처리 중 오류 발생: Execution failed on sql '\n",
      "    WITH name_cte AS (\n",
      "        SELECT DISTINCT \"character.name\" AS name\n",
      "        FROM output\n",
      "        WHERE \"character.teamId\" IN (\n",
      "            SELECT DISTINCT \"character.teamId\"\n",
      "            FROM output\n",
      "            WHERE \"character.accountId\" IN (\n",
      "                SELECT DISTINCT substr(teamKillers_AccountId, 3, 40) FROM output\n",
      "            )\n",
      "        )\n",
      "    )\n",
      "    \n",
      "    SELECT \"attacker.name\" AS name, COUNT(damage) AS damage_count, damageTypeCategory\n",
      "    FROM output\n",
      "    WHERE \"attacker.teamId\" = \"victim.teamId\"\n",
      "      AND \"attacker.name\" IN (SELECT name FROM name_cte)\n",
      "      AND \"victim.name\" IN (SELECT name FROM name_cte)\n",
      "      AND \"attacker.name\" != \"victim.name\"\n",
      "    GROUP BY \"attacker.name\", damageTypeCategory\n",
      "    ': no such column: damage\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,4,42,44,45,47,48,49,50,51,52,54,55,56,58,59,60,67,68,69,105,106,108,109,110,118,119,120,122,123,124,125,129,130,131,133,134,135,136,138,139,140,141,142,143,144,147,148,150,151,152,169,170,171,172,173,174,181,182,183,187,195,196,197,199,200,201,202,203,204,205,207,208,216,217,218,220,221,222,223,224,225,226,228,229,237,238,239,241,242,243,244,245,246,247,249,250,251,258,259,260,265,269,270,278,279,280,282,283,284,287,291,292,293,301,302,303,305,306,307,311,313,314,315) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "⚠️ 파일 output3376.csv 처리 중 오류 발생: Execution failed on sql '\n",
      "    WITH name_cte AS (\n",
      "        SELECT DISTINCT \"character.name\" AS name\n",
      "        FROM output\n",
      "        WHERE \"character.teamId\" IN (\n",
      "            SELECT DISTINCT \"character.teamId\"\n",
      "            FROM output\n",
      "            WHERE \"character.accountId\" IN (\n",
      "                SELECT DISTINCT substr(teamKillers_AccountId, 3, 40) FROM output\n",
      "            )\n",
      "        )\n",
      "    )\n",
      "    \n",
      "    SELECT \"attacker.name\" AS name, COUNT(damage) AS damage_count, damageTypeCategory\n",
      "    FROM output\n",
      "    WHERE \"attacker.teamId\" = \"victim.teamId\"\n",
      "      AND \"attacker.name\" IN (SELECT name FROM name_cte)\n",
      "      AND \"victim.name\" IN (SELECT name FROM name_cte)\n",
      "      AND \"attacker.name\" != \"victim.name\"\n",
      "    GROUP BY \"attacker.name\", damageTypeCategory\n",
      "    ': no such column: damage\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,52,53,54,55,56,59,60,61,62,64,65,66,68,69,70,77,78,79,110,112,113,114,115,117,118,119,120,121,123,124,125,133,134,135,137,138,139,140,141,142,143,145,146,147,164,165,166,167,176,177,178,182,190,191,192,194,195,196,197,198,199,200,202,203,211,212,213,215,216,217,218,219,220,221,223,224,232,233,234,236,237,238,239,240,241,242,244,253,254,255,260,262,269,270,278,279,280,282,283,284,286,290,292,294,295,303,304,305,307,308,309,313,314,315) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,4,52,53,56,57,58,59,61,62,63,65,66,67,74,75,76,107,109,110,111,112,114,115,116,117,118,119,120,124,125,127,128,136,137,138,140,141,142,143,144,145,146,148,149,150,167,168,169,170,171,172,179,180,181,185,193,194,195,197,198,199,200,201,202,203,205,206,214,215,216,218,219,220,221,222,223,224,226,227,235,236,237,239,240,241,242,243,244,245,247,256,257,258,263,265,267,268,276,277,278,280,281,282,285,289,291,295,297,298) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,4,24,25,44,46,47,49,50,51,52,53,54,55,57,58,59,108,112,114,115,116,117,119,120,121,122,123,125,126,134,135,136,138,139,140,141,142,143,144,146,148,149,150,167,168,169,170,171,172,179,180,181,185,193,194,195,197,198,199,200,201,202,203,205,206,214,215,216,218,219,220,221,222,223,224,226,227,235,236,237,239,240,241,242,243,244,245,247,248,249,256,257,258,263,267,268,269,277,278,279,281,282,283,286,290,292,293,301,302,303,305,306,307,310,313,314,315) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,4,44,46,47,50,51,52,53,54,55,57,58,59,61,131,133,134,135,136,138,139,140,141,142,143,144,146,147,148,165,166,167,168,169,170,177,178,179,183,191,192,193,195,196,197,198,199,200,201,203,204,212,213,214,216,217,218,219,220,221,222,224,225,233,234,235,237,238,239,240,241,242,243,245,246,247,254,255,256,260,264,266,268,269,277,278,279,281,282,283,287,291,293,295,296,304,305,306,308,309,310,312,313) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "⚠️ 파일 output3381.csv 처리 중 오류 발생: Execution failed on sql '\n",
      "    WITH name_cte AS (\n",
      "        SELECT DISTINCT \"character.name\" AS name\n",
      "        FROM output\n",
      "        WHERE \"character.teamId\" IN (\n",
      "            SELECT DISTINCT \"character.teamId\"\n",
      "            FROM output\n",
      "            WHERE \"character.accountId\" IN (\n",
      "                SELECT DISTINCT substr(teamKillers_AccountId, 3, 40) FROM output\n",
      "            )\n",
      "        )\n",
      "    )\n",
      "    \n",
      "    SELECT \"attacker.name\" AS name, COUNT(damage) AS damage_count, damageTypeCategory\n",
      "    FROM output\n",
      "    WHERE \"attacker.teamId\" = \"victim.teamId\"\n",
      "      AND \"attacker.name\" IN (SELECT name FROM name_cte)\n",
      "      AND \"victim.name\" IN (SELECT name FROM name_cte)\n",
      "      AND \"attacker.name\" != \"victim.name\"\n",
      "    GROUP BY \"attacker.name\", damageTypeCategory\n",
      "    ': no such column: damage\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,4,42,44,45,47,48,52,53,54,55,57,58,59,108,110,111,112,113,115,116,117,118,122,123,125,126,134,135,136,138,139,140,141,142,143,144,146,147,148,165,166,167,168,169,170,177,178,179,183,191,192,193,195,196,197,198,199,200,201,203,204,212,213,214,216,217,218,219,220,221,222,224,225,233,234,235,237,238,239,240,241,242,243,245,246,247,254,255,256,260,264,269,270,271,279,280,281,283,284,285,289,293,295,297,298,306,307,308,310,311,312,313,314) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,4,17,38,42,44,45,52,53,54,55,57,58,59,61,62,63,70,71,72,108,110,111,112,113,115,116,117,118,119,121,122,123,131,132,133,134,135,136,137,138,139,140,141,143,146,151,152,153,161,162,163,165,166,167,168,169,170,187,188,189,190,191,192,199,200,201,205,213,214,215,217,218,219,220,221,222,223,225,226,234,235,236,238,239,240,241,242,243,244,246,247,255,256,257,259,260,261,262,263,264,265,267,268,269,276,277,278,283,286,290,294,295,303,304,305,307,308,309,310,311) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,4,24,25,44,46,47,49,50,51,52,54,55,56,58,59,60,67,68,69,105,106,107,116,118,122,123,125,126,134,135,136,138,139,140,142,144,145,147,148,149,166,167,168,169,178,179,180,184,185,187,189,190,198,199,200,202,203,204,205,206,207,208,210,211,219,220,221,223,224,225,226,227,228,229,231,240,241,242,247,250,251,255,257,263,264) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,4,17,38,42,44,45,47,48,49,50,51,52,53,54,55,57,58,59,61,108,112,113,115,116,124,125,126,127,128,129,130,131,133,134,135,136,138,139,140,142,143,145,146,147,164,165,166,167,168,169,176,177,178,182,183,184,185,187,188,196,197,198,200,201,202,203,204,205,206,208,209,217,218,219,221,222,223,224,225,226,227,229,230,231,238,239,240,245,246,247,249,250,252,260,261,262,264,265,266,268,269,277,278,279,281,282,283,284,288,289,290,298,299,300,302,303,304,307,309,312,313) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "⚠️ 파일 output3386.csv 처리 중 오류 발생: Execution failed on sql '\n",
      "    WITH name_cte AS (\n",
      "        SELECT DISTINCT \"character.name\" AS name\n",
      "        FROM output\n",
      "        WHERE \"character.teamId\" IN (\n",
      "            SELECT DISTINCT \"character.teamId\"\n",
      "            FROM output\n",
      "            WHERE \"character.accountId\" IN (\n",
      "                SELECT DISTINCT substr(teamKillers_AccountId, 3, 40) FROM output\n",
      "            )\n",
      "        )\n",
      "    )\n",
      "    \n",
      "    SELECT \"attacker.name\" AS name, COUNT(damage) AS damage_count, damageTypeCategory\n",
      "    FROM output\n",
      "    WHERE \"attacker.teamId\" = \"victim.teamId\"\n",
      "      AND \"attacker.name\" IN (SELECT name FROM name_cte)\n",
      "      AND \"victim.name\" IN (SELECT name FROM name_cte)\n",
      "      AND \"attacker.name\" != \"victim.name\"\n",
      "    GROUP BY \"attacker.name\", damageTypeCategory\n",
      "    ': no such column: damage\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,4,42,44,45,49,50,51,52,54,55,56,104,105,107,108,109,117,118,119,121,122,123,125,126,127,131,133,134,135,136,138,139,140,141,142,143,144,148,150,151,152,169,170,171,172,173,174,181,182,183,187,195,196,197,199,200,201,202,203,204,205,207,208,216,217,218,220,221,222,223,224,225,226,228,229,237,238,239,241,242,243,244,245,246,247,249,258,259,260,265,269,270,271,279,280,281,283,284,285,286,290,292,293,301,302,303,305,306,307,312,313,314) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,4,52,53,54,55,56,59,60,61,62,64,65,66,68,69,70,77,78,79,110,111,113,114,115,123,124,125,127,128,129,130,131,132,133,135,137,138,139,140,142,143,144,145,146,147,164,165,166,167,168,169,176,177,178,182,190,191,192,194,195,196,197,198,199,200,202,203,211,212,213,215,216,217,218,219,220,221,223,224,232,233,234,236,237,238,239,240,241,242,244,245,246,253,254,255,260,263,264,265,273,274,275,277,278,279,284,288,290,291,299,300,301,303,304,305,307,313,314) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,20,42,44,45,47,48,49,50,51,52,54,55,56,58,59,60,67,68,69,105,106,107,116,139,147,148,149,150,167,168,169,170,179,180,181,185,193,194,195,197,198,199,200,201,202,203,205,206,214,215,216,218,219,220,221,222,223,224,226,227,235,236,237,239,240,241,242,243,244,245,247,248,249,256,257,258,262,267,268,269,277,278,279,281,282,283,285,289,293,294,295) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,20,42,44,45,47,48,49,50,51,52,54,55,56,58,59,60,67,68,69,105,106,107,120,141,142,143,144,147,149,150,151,168,169,170,171,172,173,180,181,182,186,194,195,196,198,199,200,201,202,203,204,206,207,215,216,217,219,220,221,222,223,224,225,227,228,229,230,231,233,234,235,242,243,244,248,256,257,258,260,261,262,263,267,269,273,278,279,280) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "⚠️ 파일 output3391.csv 처리 중 오류 발생: Execution failed on sql '\n",
      "    WITH name_cte AS (\n",
      "        SELECT DISTINCT \"character.name\" AS name\n",
      "        FROM output\n",
      "        WHERE \"character.teamId\" IN (\n",
      "            SELECT DISTINCT \"character.teamId\"\n",
      "            FROM output\n",
      "            WHERE \"character.accountId\" IN (\n",
      "                SELECT DISTINCT substr(teamKillers_AccountId, 3, 40) FROM output\n",
      "            )\n",
      "        )\n",
      "    )\n",
      "    \n",
      "    SELECT \"attacker.name\" AS name, COUNT(damage) AS damage_count, damageTypeCategory\n",
      "    FROM output\n",
      "    WHERE \"attacker.teamId\" = \"victim.teamId\"\n",
      "      AND \"attacker.name\" IN (SELECT name FROM name_cte)\n",
      "      AND \"victim.name\" IN (SELECT name FROM name_cte)\n",
      "      AND \"attacker.name\" != \"victim.name\"\n",
      "    GROUP BY \"attacker.name\", damageTypeCategory\n",
      "    ': no such column: damage\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,15,28,43,47,49,50,55,56,57,58,59,60,62,63,64,108,112,114,115,116,117,119,120,121,122,123,125,126,134,135,136,138,139,140,141,142,143,144,146,147,148,165,166,167,168,169,170,177,178,179,183,191,192,193,195,196,197,198,199,200,201,203,204,212,213,214,216,217,218,219,220,221,222,224,225,233,234,235,237,238,239,240,241,242,243,245,254,255,256,265,268,270,271,272,280,281,282,284,285,286,287,291,294,297,298,299) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,4,17,38,42,44,45,52,53,54,55,57,58,59,61,108,110,111,112,113,115,116,117,118,119,121,122,123,131,132,133,134,135,136,137,138,139,140,141,146,148,149,150,167,168,169,170,171,172,179,180,181,185,193,194,195,197,198,199,200,201,202,203,205,206,214,215,216,218,219,220,221,222,223,224,226,227,235,236,237,239,240,241,242,243,244,245,247,256,257,258,263,265,267,268,276,277,278,280,281,282,284,288,292,295,296,297,305,306,307,309,310,311,312,313) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,17,38,47,48,49,50,51,52,53,54,55,57,58,59,61,62,63,70,71,72,108,109,111,112,113,121,122,123,124,125,126,127,131,133,134,135,136,138,139,140,143,144,145,146,148,149,150,167,168,169,170,171,172,179,180,181,185,193,194,195,197,198,199,200,201,202,203,205,206,214,215,216,218,219,220,221,222,223,224,226,227,235,236,237,239,240,241,242,243,244,245,247,256,257,258,263,265,266,267,275,276,277,279,280,281,284,288,290,295,296) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "⚠️ 파일 output3395.csv 처리 중 오류 발생: Execution failed on sql '\n",
      "    WITH name_cte AS (\n",
      "        SELECT DISTINCT \"character.name\" AS name\n",
      "        FROM output\n",
      "        WHERE \"character.teamId\" IN (\n",
      "            SELECT DISTINCT \"character.teamId\"\n",
      "            FROM output\n",
      "            WHERE \"character.accountId\" IN (\n",
      "                SELECT DISTINCT substr(teamKillers_AccountId, 3, 40) FROM output\n",
      "            )\n",
      "        )\n",
      "    )\n",
      "    \n",
      "    SELECT \"attacker.name\" AS name, COUNT(damage) AS damage_count, damageTypeCategory\n",
      "    FROM output\n",
      "    WHERE \"attacker.teamId\" = \"victim.teamId\"\n",
      "      AND \"attacker.name\" IN (SELECT name FROM name_cte)\n",
      "      AND \"victim.name\" IN (SELECT name FROM name_cte)\n",
      "      AND \"attacker.name\" != \"victim.name\"\n",
      "    GROUP BY \"attacker.name\", damageTypeCategory\n",
      "    ': no such column: damage\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,4,42,44,45,47,48,50,51,52,53,54,55,57,58,59,61,62,63,70,71,72,108,112,114,115,116,117,119,120,121,122,123,125,126,134,135,136,138,139,140,141,142,143,144,146,149,150,151,168,169,170,171,172,173,180,181,182,186,187,188,189,191,192,200,201,202,204,205,206,207,208,209,210,212,213,221,222,223,225,226,227,228,229,230,231,233,234,235,242,243,244,248,256,257,258,260,261,262,264,266,268,269,277,278,279,281,282,283,284,288,291,292,300,301,302,304,305,306,310,312,313) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "⚠️ 파일 output3397.csv 처리 중 오류 발생: Execution failed on sql '\n",
      "    WITH name_cte AS (\n",
      "        SELECT DISTINCT \"character.name\" AS name\n",
      "        FROM output\n",
      "        WHERE \"character.teamId\" IN (\n",
      "            SELECT DISTINCT \"character.teamId\"\n",
      "            FROM output\n",
      "            WHERE \"character.accountId\" IN (\n",
      "                SELECT DISTINCT substr(teamKillers_AccountId, 3, 40) FROM output\n",
      "            )\n",
      "        )\n",
      "    )\n",
      "    \n",
      "    SELECT \"attacker.name\" AS name, COUNT(damage) AS damage_count, damageTypeCategory\n",
      "    FROM output\n",
      "    WHERE \"attacker.teamId\" = \"victim.teamId\"\n",
      "      AND \"attacker.name\" IN (SELECT name FROM name_cte)\n",
      "      AND \"victim.name\" IN (SELECT name FROM name_cte)\n",
      "      AND \"attacker.name\" != \"victim.name\"\n",
      "    GROUP BY \"attacker.name\", damageTypeCategory\n",
      "    ': no such column: damage\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,4,44,46,47,49,50,51,52,54,55,56,58,59,60,67,68,69,105,107,108,109,110,112,113,114,115,116,117,118,122,123,125,126,134,135,136,138,139,140,141,142,143,144,146,147,148,165,166,167,168,169,170,177,178,179,183,191,192,193,195,196,197,198,199,200,201,203,204,212,213,214,216,217,218,219,220,221,222,224,225,233,234,235,237,238,239,240,241,242,243,245,246,247,254,255,256,261,263,264,268,269,277,278,279,281,282,283,284,288,293,296,298,299,307,308,309,311,312,313,314,315) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,47,48,49,50,51,52,53,54,55,57,58,59,61,62,63,70,71,72,130,133,182,190,191,192,194,195,196,199,245,246,261,266,267,268,276,277,278,280,281,282,285,289,291,294,295,303,304,305,307,308,309,311,312) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,4,53,54,55,56,59,60,61,62,64,65,66,68,69,70,77,78,79,110,112,113,114,115,117,118,119,120,121,123,124,125,133,134,135,137,138,139,140,141,142,143,145,146,147,164,165,166,167,168,169,176,177,178,182,190,191,192,194,195,196,197,198,199,200,202,203,211,212,213,215,216,217,218,219,220,221,223,224,232,233,234,236,237,238,239,240,241,242,244,253,254,255,260,265,267,268,276,277,278,280,281,282,284,288,292,293,294,302,303,304,306,307,308,311,314,315) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,4,17,38,42,44,45,47,48,49,50,51,52,53,54,55,57,58,59,61,62,63,70,71,72,108,110,111,112,113,115,116,117,118,120,121,123,124,125,133,134,135,136,137,138,139,143,144,145,146,149,150,151,152,169,170,171,172,173,174,181,182,183,187,195,196,197,199,200,201,202,203,204,205,207,208,216,217,218,220,221,222,223,224,225,226,228,229,237,238,239,241,242,243,244,245,246,247,249,250,251,258,259,260,266,268,269,277,278,279,281,282,283,284,288,291,293,294,302,303,304,306,307,308,311,312,313) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,20,26,42,44,45,46,47,48,49,50,51,52,54,55,56,58,59,60,67,68,69,116,117,139,146,147,148,165,166,167,168,177,178,179,183,191,192,193,195,196,197,198,199,200,201,203,204,212,213,214,216,217,218,219,220,221,222,224,225,233,234,235,237,238,239,240,241,242,243,245,246,247,254,255,256,261,263,267,268,272,277,278,279) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,20,24,25,26,27,28,29,31,32,33,35,36,37,44,45,46,93,113,115,116,119,139,143,145,146,147,164,165,166,167,176,177,178,182,190,191,192,194,195,196,197,198,199,200,202,203,211,212,213,215,216,217,218,219,220,221,223,224,232,233,234,236,237,238,239,240,241,242,244,245,246,253,254,255,260,262,271,275,278,280,281) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "⚠️ 파일 output3403.csv 처리 중 오류 발생: Execution failed on sql '\n",
      "    WITH name_cte AS (\n",
      "        SELECT DISTINCT \"character.name\" AS name\n",
      "        FROM output\n",
      "        WHERE \"character.teamId\" IN (\n",
      "            SELECT DISTINCT \"character.teamId\"\n",
      "            FROM output\n",
      "            WHERE \"character.accountId\" IN (\n",
      "                SELECT DISTINCT substr(teamKillers_AccountId, 3, 40) FROM output\n",
      "            )\n",
      "        )\n",
      "    )\n",
      "    \n",
      "    SELECT \"attacker.name\" AS name, COUNT(damage) AS damage_count, damageTypeCategory\n",
      "    FROM output\n",
      "    WHERE \"attacker.teamId\" = \"victim.teamId\"\n",
      "      AND \"attacker.name\" IN (SELECT name FROM name_cte)\n",
      "      AND \"victim.name\" IN (SELECT name FROM name_cte)\n",
      "      AND \"attacker.name\" != \"victim.name\"\n",
      "    GROUP BY \"attacker.name\", damageTypeCategory\n",
      "    ': no such column: damage\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,4,44,46,47,49,50,51,52,53,54,55,57,58,59,61,62,63,70,71,72,108,110,111,112,113,115,116,117,118,122,123,125,126,134,135,136,138,139,140,141,143,144,145,146,149,150,151,152,169,170,171,172,173,174,181,182,183,187,195,196,197,199,200,201,202,203,204,205,207,208,216,217,218,220,221,222,223,224,225,226,228,229,237,238,239,241,242,243,244,245,246,247,249,250,251,258,259,260,264,265,273,274,275,277,278,279,281,287,291,293,294,295,303,304,305,307,308,309,313,314) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,4,54,55,56,57,59,60,61,62,64,65,66,68,69,70,77,78,79,110,111,113,114,115,123,124,125,127,128,129,130,132,133,134,135,137,138,139,143,144,145,146,148,149,150,167,168,169,170,179,180,181,185,193,194,195,197,198,199,200,201,202,203,205,206,214,215,216,218,219,220,221,222,223,224,226,227,235,236,237,239,240,241,242,243,244,245,247,256,257,258,263,266,269,270,278,279,280,282,283,284,288,292,294,297,298) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,59,60,61,62,64,65,66,68,69,70,77,78,79,110,111,113,114,115,123,124,125,127,128,129,130,132,133,134,135,137,138,139,140,141,142,143,145,146,147,164,165,166,167,176,177,178,182,190,191,192,194,195,196,197,198,199,200,202,203,211,212,213,215,216,217,218,219,220,221,223,224,232,233,234,236,237,238,239,240,241,242,244,253,254,255,260,262,265,266,274,275,276,278,279,280,282,283,287,291,294,295) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,59,60,61,62,64,65,66,68,69,70,77,78,79,110,112,113,114,115,117,118,119,120,121,123,124,125,133,134,135,137,138,139,143,144,145,146,148,149,150,167,168,169,170,179,180,181,185,193,194,195,197,198,199,200,201,202,203,205,206,214,215,216,218,219,220,221,222,223,224,226,227,235,236,237,239,240,241,242,243,244,245,247,248,249,256,257,258,264,265,266,274,275,276,278,279,280,282,283,286,290,293,296,297,305,306,307,309,310,311,312,313) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,4,42,44,45,47,48,49,50,51,52,53,54,55,57,58,59,108,112,114,115,116,117,119,120,121,122,123,125,126,134,135,136,138,139,140,141,143,144,145,146,149,150,151,152,169,170,171,172,173,174,181,182,183,187,195,196,197,199,200,201,202,203,204,205,207,208,216,217,218,220,221,222,223,224,225,226,228,229,237,238,239,241,242,243,244,245,246,247,249,250,251,258,259,260,267,269,273,275,277,278,286,287,288,290,291,292,293,294,302,303,304,306,307,308,312,314,315) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "⚠️ 파일 output3410.csv 처리 중 오류 발생: Execution failed on sql '\n",
      "    WITH name_cte AS (\n",
      "        SELECT DISTINCT \"character.name\" AS name\n",
      "        FROM output\n",
      "        WHERE \"character.teamId\" IN (\n",
      "            SELECT DISTINCT \"character.teamId\"\n",
      "            FROM output\n",
      "            WHERE \"character.accountId\" IN (\n",
      "                SELECT DISTINCT substr(teamKillers_AccountId, 3, 40) FROM output\n",
      "            )\n",
      "        )\n",
      "    )\n",
      "    \n",
      "    SELECT \"attacker.name\" AS name, COUNT(damage) AS damage_count, damageTypeCategory\n",
      "    FROM output\n",
      "    WHERE \"attacker.teamId\" = \"victim.teamId\"\n",
      "      AND \"attacker.name\" IN (SELECT name FROM name_cte)\n",
      "      AND \"victim.name\" IN (SELECT name FROM name_cte)\n",
      "      AND \"attacker.name\" != \"victim.name\"\n",
      "    GROUP BY \"attacker.name\", damageTypeCategory\n",
      "    ': no such column: damage\n",
      "⚠️ 파일 output3411.csv 처리 중 오류 발생: Execution failed on sql '\n",
      "    WITH name_cte AS (\n",
      "        SELECT DISTINCT \"character.name\" AS name\n",
      "        FROM output\n",
      "        WHERE \"character.teamId\" IN (\n",
      "            SELECT DISTINCT \"character.teamId\"\n",
      "            FROM output\n",
      "            WHERE \"character.accountId\" IN (\n",
      "                SELECT DISTINCT substr(teamKillers_AccountId, 3, 40) FROM output\n",
      "            )\n",
      "        )\n",
      "    )\n",
      "    \n",
      "    SELECT \"attacker.name\" AS name, COUNT(damage) AS damage_count, damageTypeCategory\n",
      "    FROM output\n",
      "    WHERE \"attacker.teamId\" = \"victim.teamId\"\n",
      "      AND \"attacker.name\" IN (SELECT name FROM name_cte)\n",
      "      AND \"victim.name\" IN (SELECT name FROM name_cte)\n",
      "      AND \"attacker.name\" != \"victim.name\"\n",
      "    GROUP BY \"attacker.name\", damageTypeCategory\n",
      "    ': no such column: damage\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,4,42,44,45,49,50,51,52,54,55,56,58,59,60,67,68,69,125,126,127,128,130,131,132,133,135,136,137,142,143,144,145,146,148,150,151,152,169,170,171,172,173,174,181,182,183,187,195,196,197,199,200,201,202,203,204,205,207,208,216,217,218,220,221,222,223,224,225,226,228,229,237,238,239,241,242,243,244,245,246,247,249,250,251,258,259,260,267,268,269,277,278,279,281,282,283,284,288,292,297,298) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,20,24,25,44,46,47,49,50,51,52,54,55,56,58,59,60,67,68,69,105,106,107,116,118,119,121,122,123,131,132,133,135,136,137,138,139,140,141,144,148,150,151,152,169,170,171,172,173,174,181,182,183,187,195,196,197,199,200,201,202,203,204,205,207,208,216,217,218,220,221,222,223,224,225,226,228,229,237,238,239,241,242,243,244,245,246,247,249,250,251,258,259,260,265,269,273,274,275,283,284,285,287,288,289,294,295,296) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,20,44,46,47,49,50,51,52,54,55,56,58,59,60,67,68,69,136,139,140,141,142,143,145,150,151,152,169,170,171,172,173,174,181,182,183,187,195,196,197,199,200,201,202,203,204,205,207,208,216,217,218,220,221,222,223,224,225,226,228,229,237,238,239,241,242,243,244,245,246,247,249,250,251,258,259,260,267,269,270,278,279,280,282,283,284,286,290,295,296,297) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,17,24,25,49,50,51,52,53,54,55,57,58,59,61,62,63,70,71,72,161,162,175,183,184,185,187,188,189,263,266,268,269,277,278,279,281,282,283,284,288,291,292,300,301,302,304,305,306,308,310,311) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "⚠️ 파일 output3416.csv 처리 중 오류 발생: Execution failed on sql '\n",
      "    WITH name_cte AS (\n",
      "        SELECT DISTINCT \"character.name\" AS name\n",
      "        FROM output\n",
      "        WHERE \"character.teamId\" IN (\n",
      "            SELECT DISTINCT \"character.teamId\"\n",
      "            FROM output\n",
      "            WHERE \"character.accountId\" IN (\n",
      "                SELECT DISTINCT substr(teamKillers_AccountId, 3, 40) FROM output\n",
      "            )\n",
      "        )\n",
      "    )\n",
      "    \n",
      "    SELECT \"attacker.name\" AS name, COUNT(damage) AS damage_count, damageTypeCategory\n",
      "    FROM output\n",
      "    WHERE \"attacker.teamId\" = \"victim.teamId\"\n",
      "      AND \"attacker.name\" IN (SELECT name FROM name_cte)\n",
      "      AND \"victim.name\" IN (SELECT name FROM name_cte)\n",
      "      AND \"attacker.name\" != \"victim.name\"\n",
      "    GROUP BY \"attacker.name\", damageTypeCategory\n",
      "    ': no such column: teamKillers_AccountId\n",
      "⚠️ 파일 output3417.csv 처리 중 오류 발생: Execution failed on sql '\n",
      "    WITH name_cte AS (\n",
      "        SELECT DISTINCT \"character.name\" AS name\n",
      "        FROM output\n",
      "        WHERE \"character.teamId\" IN (\n",
      "            SELECT DISTINCT \"character.teamId\"\n",
      "            FROM output\n",
      "            WHERE \"character.accountId\" IN (\n",
      "                SELECT DISTINCT substr(teamKillers_AccountId, 3, 40) FROM output\n",
      "            )\n",
      "        )\n",
      "    )\n",
      "    \n",
      "    SELECT \"attacker.name\" AS name, COUNT(damage) AS damage_count, damageTypeCategory\n",
      "    FROM output\n",
      "    WHERE \"attacker.teamId\" = \"victim.teamId\"\n",
      "      AND \"attacker.name\" IN (SELECT name FROM name_cte)\n",
      "      AND \"victim.name\" IN (SELECT name FROM name_cte)\n",
      "      AND \"attacker.name\" != \"victim.name\"\n",
      "    GROUP BY \"attacker.name\", damageTypeCategory\n",
      "    ': no such column: damage\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,4,17,40,44,46,47,49,50,51,52,53,54,55,57,58,59,108,109,111,112,113,121,122,123,124,125,126,127,128,130,131,132,133,135,136,137,141,143,144,145,146,149,150,151,152,169,170,171,172,173,174,181,182,183,187,195,196,197,199,200,201,202,203,204,205,207,208,216,217,218,219,220,221,222,223,224,225,226,228,229,237,238,239,240,241,242,243,244,245,246,247,249,250,251,258,259,260,265,266,267,275,276,277,279,280,281,285,289,292,293,294,302,303,304,306,307,308,311,314,315) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "⚠️ 파일 output3419.csv 처리 중 오류 발생: Execution failed on sql '\n",
      "    WITH name_cte AS (\n",
      "        SELECT DISTINCT \"character.name\" AS name\n",
      "        FROM output\n",
      "        WHERE \"character.teamId\" IN (\n",
      "            SELECT DISTINCT \"character.teamId\"\n",
      "            FROM output\n",
      "            WHERE \"character.accountId\" IN (\n",
      "                SELECT DISTINCT substr(teamKillers_AccountId, 3, 40) FROM output\n",
      "            )\n",
      "        )\n",
      "    )\n",
      "    \n",
      "    SELECT \"attacker.name\" AS name, COUNT(damage) AS damage_count, damageTypeCategory\n",
      "    FROM output\n",
      "    WHERE \"attacker.teamId\" = \"victim.teamId\"\n",
      "      AND \"attacker.name\" IN (SELECT name FROM name_cte)\n",
      "      AND \"victim.name\" IN (SELECT name FROM name_cte)\n",
      "      AND \"attacker.name\" != \"victim.name\"\n",
      "    GROUP BY \"attacker.name\", damageTypeCategory\n",
      "    ': no such column: damage\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,4,50,51,52,53,54,55,57,58,59,140,141,143,145,146,147,164,165,166,167,168,169,176,177,178,182,190,191,192,194,195,196,197,198,199,200,202,203,211,212,213,215,216,217,218,219,220,221,223,224,232,233,234,236,237,238,239,240,241,242,244,245,246,253,254,255,263,268,269,270,278,279,280,282,283,284,286,290,293,295,296,304,305,306,308,309,310,312,313) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "⚠️ 파일 output3421.csv 처리 중 오류 발생: Execution failed on sql '\n",
      "    WITH name_cte AS (\n",
      "        SELECT DISTINCT \"character.name\" AS name\n",
      "        FROM output\n",
      "        WHERE \"character.teamId\" IN (\n",
      "            SELECT DISTINCT \"character.teamId\"\n",
      "            FROM output\n",
      "            WHERE \"character.accountId\" IN (\n",
      "                SELECT DISTINCT substr(teamKillers_AccountId, 3, 40) FROM output\n",
      "            )\n",
      "        )\n",
      "    )\n",
      "    \n",
      "    SELECT \"attacker.name\" AS name, COUNT(damage) AS damage_count, damageTypeCategory\n",
      "    FROM output\n",
      "    WHERE \"attacker.teamId\" = \"victim.teamId\"\n",
      "      AND \"attacker.name\" IN (SELECT name FROM name_cte)\n",
      "      AND \"victim.name\" IN (SELECT name FROM name_cte)\n",
      "      AND \"attacker.name\" != \"victim.name\"\n",
      "    GROUP BY \"attacker.name\", damageTypeCategory\n",
      "    ': no such column: damage\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,4,42,44,45,47,48,49,50,51,52,53,54,55,57,58,59,61,62,63,70,71,72,108,110,111,112,113,115,116,117,118,119,121,122,123,131,132,133,135,136,137,138,139,140,141,143,145,146,147,164,165,166,167,168,169,176,177,178,182,190,191,192,194,195,196,197,198,199,200,202,203,211,212,213,215,216,217,218,219,220,221,223,224,232,233,234,236,237,238,239,240,241,242,244,253,254,255,264,267,270,271,279,280,281,283,284,285,286,290,291,293,294,302,303,304,306,307,308,311,314,315) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,20,26,27,28,29,31,32,33,129,139,140,141,158,159,160,161,162,163,170,171,172,176,184,185,186,188,189,190,191,192,193,194,196,197,205,206,207,209,210,211,212,213,214,215,217,218,226,227,228,230,231,232,233,234,235,236,238,239,240,247,248,249,255,257,258,260,261,262,263,266,268,272,279,280,281) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,23,24,25,28,44,46,47,48,49,50,51,52,54,55,56,58,59,60,67,68,69,106,107,109,136,141,144,145,146,147,148,150,151,152,169,170,171,172,181,182,183,187,195,196,197,199,200,201,202,203,204,205,207,208,216,217,218,220,221,222,223,224,225,226,228,229,237,238,239,241,242,243,244,245,246,247,249,250,251,258,259,260,265,269,273,275,279,280) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,4,15,16,18,24,25,28,29,37,38,39,41,42,43,44,46,47,48,49,50,51,52,53,54,55,57,58,59,61,62,63,70,71,72,108,109,111,112,113,121,122,123,125,126,127,128,130,132,133,134,135,137,138,139,140,141,142,143,145,146,147,164,165,166,167,168,169,176,177,178,182,190,191,192,194,195,196,197,198,199,200,202,203,211,212,213,215,216,217,218,219,220,221,223,224,232,233,234,236,237,238,239,240,241,242,244,245,246,253,254,255,261,263,264,265,273,274,275,277,278,279,286,290,292,295,296,304,305,306,308,309,310,313,314) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,17,42,44,45,52,53,54,55,57,58,59,61,62,63,70,71,72,108,109,111,112,113,121,122,123,124,125,126,127,128,130,131,132,133,135,136,137,141,142,143,144,147,148,151,152,153,170,171,172,173,174,175,182,183,184,188,189,190,191,193,194,202,203,204,206,207,208,209,210,211,212,214,215,223,224,225,227,228,229,230,231,232,233,235,244,245,246,250,258,259,260,262,263,264,267,268,269,277,278,279,281,282,283,284,288,291,292,296,297) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "⚠️ 파일 output3427.csv 처리 중 오류 발생: Execution failed on sql '\n",
      "    WITH name_cte AS (\n",
      "        SELECT DISTINCT \"character.name\" AS name\n",
      "        FROM output\n",
      "        WHERE \"character.teamId\" IN (\n",
      "            SELECT DISTINCT \"character.teamId\"\n",
      "            FROM output\n",
      "            WHERE \"character.accountId\" IN (\n",
      "                SELECT DISTINCT substr(teamKillers_AccountId, 3, 40) FROM output\n",
      "            )\n",
      "        )\n",
      "    )\n",
      "    \n",
      "    SELECT \"attacker.name\" AS name, COUNT(damage) AS damage_count, damageTypeCategory\n",
      "    FROM output\n",
      "    WHERE \"attacker.teamId\" = \"victim.teamId\"\n",
      "      AND \"attacker.name\" IN (SELECT name FROM name_cte)\n",
      "      AND \"victim.name\" IN (SELECT name FROM name_cte)\n",
      "      AND \"attacker.name\" != \"victim.name\"\n",
      "    GROUP BY \"attacker.name\", damageTypeCategory\n",
      "    ': no such column: damage\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,4,42,44,45,47,48,50,51,52,53,54,55,57,58,59,61,62,63,70,71,72,108,109,111,112,113,121,122,123,125,126,127,131,133,134,135,136,138,139,140,141,142,143,144,146,148,149,150,167,168,169,170,171,172,179,180,181,185,193,194,195,197,198,199,200,201,202,203,205,206,214,215,216,218,219,220,221,222,223,224,226,227,235,236,237,239,240,241,242,243,244,245,247,248,249,256,257,258,263,266,268,269,277,278,279,281,282,283,286,290,292,294,296,297,305,306,307,309,310,311,314,315) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,4,24,25,49,50,51,52,54,55,56,58,105,106,107,120,142,147,148,149,157,158,159,161,162,163,165,167,168,169,186,187,188,189,190,191,198,199,200,204,212,213,214,216,217,218,219,220,221,222,224,225,233,234,235,237,238,239,240,241,242,243,245,246,254,255,256,258,259,260,261,262,263,264,266,275,276,277,283,284,288,294,295,296) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,4,42,44,45,47,48,49,50,51,52,53,54,55,57,58,59,61,62,63,70,71,72,108,110,111,112,113,115,116,117,118,122,123,125,126,134,135,136,138,139,140,141,143,144,145,146,148,149,150,167,168,169,170,171,172,179,180,181,185,193,194,195,197,198,199,200,201,202,203,205,206,214,215,216,218,219,220,221,222,223,224,226,227,235,236,237,239,240,241,242,243,244,245,247,256,257,258,263,265,268,269,277,278,279,281,282,283,286,290,292,294,295,303,304,305,307,308,309,311,314,315) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,4,17,40,44,46,47,49,50,51,52,53,54,55,57,58,59,108,110,111,112,113,115,116,117,118,122,123,125,126,134,135,136,137,138,139,140,142,143,145,146,147,148,150,151,152,169,170,171,172,173,174,181,182,183,187,195,196,197,199,200,201,202,203,204,205,207,208,216,217,218,220,221,222,223,224,225,226,228,229,237,238,239,241,242,243,244,245,246,247,249,250,251,258,259,260,265,266,267,268,276,277,278,280,281,282,284,288,295,298,299) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,23,24,25,28,44,46,47,48,49,50,51,52,54,55,56,58,59,60,67,68,69,139,141,142,143,144,146,149,150,151,152,169,170,171,172,181,182,183,187,195,196,197,199,200,201,202,203,204,205,207,208,216,217,218,220,221,222,223,224,225,226,228,229,237,238,239,241,242,243,244,245,246,247,249,258,259,260,265,267,271,275,276,284,285,286,288,289,290,292,293) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,59,60,61,62,64,65,66,68,69,70,77,78,79,110,112,113,114,115,117,118,119,120,121,123,124,125,133,134,135,137,138,139,141,142,144,145,146,163,164,165,166,167,168,175,176,177,181,182,183,184,186,187,195,196,197,199,200,201,202,203,204,205,207,208,216,217,218,220,221,222,223,224,225,226,228,229,230,237,238,239,247,252,254,258,261,262,263,264,272,273,274,276,277,278,280,281) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,4,44,46,47,50,51,52,53,54,55,57,58,59,108,110,111,112,113,115,116,117,118,119,121,122,123,131,132,133,135,136,137,138,139,140,141,143,145,146,147,164,165,166,167,168,169,176,177,178,182,190,191,192,194,195,196,197,198,199,200,202,203,211,212,213,215,216,217,218,219,220,221,223,224,232,233,234,236,237,238,239,240,241,242,244,245,246,253,254,255,260,265,266,267,275,276,277,279,280,281,285,289,291,296,297,305,306,307,309,310,311,313,314) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,13,14,16,23,26,27,35,36,37,39,40,41,42,44,45,46,47,48,49,50,51,52,54,55,56,58,59,60,67,68,69,105,107,108,109,110,112,113,114,115,116,117,118,119,121,122,123,131,132,133,135,136,137,141,143,144,145,146,149,150,151,152,169,170,171,172,181,182,183,187,195,196,197,199,200,201,202,203,204,205,207,208,216,217,218,220,221,222,223,224,225,226,228,229,237,238,239,241,242,243,244,245,246,247,249,258,259,260,265,270,271,279,280,281,283,284,285,287,291,296,297,298) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,4,17,38,42,44,45,52,53,54,55,57,58,59,61,62,63,70,71,72,108,109,111,112,113,121,122,123,124,125,126,127,128,130,131,132,133,135,136,137,141,142,143,144,146,148,149,150,167,168,169,170,171,172,179,180,181,185,193,194,195,197,198,199,200,201,202,203,205,206,214,215,216,218,219,220,221,222,223,224,226,227,235,236,237,239,240,241,242,243,244,245,247,248,249,256,257,258,263,265,267,268,276,277,278,280,281,282,284,285,289,291,292,293,301,302,303,305,306,307,311,312) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,23,26,27,28,29,31,32,33,35,36,37,44,45,46,82,83,84,93,132,140,141,143,144,145,147,148,150,151,159,160,161,163,164,165,167,168,169,186,187,188,189,198,199,200,204,212,213,214,216,217,218,219,220,221,222,224,225,233,234,235,237,238,239,240,241,242,243,245,246,254,255,256,258,259,260,261,262,263,264,266,267,268,275,276,277,282,285,289,293,295,296) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,4,17,38,42,44,45,49,50,51,52,54,55,56,113,118,119,121,122,123,131,132,133,134,135,136,137,141,143,144,145,146,149,150,151,152,169,170,171,172,173,174,181,182,183,187,195,196,197,199,200,201,202,203,204,205,207,208,216,217,218,220,221,222,223,224,225,226,228,229,237,238,239,241,242,243,244,245,246,247,249,250,251,258,259,260,265,266,274,275,276,278,279,280,282,284,288,290,297,298) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,20,42,44,45,47,48,49,50,51,52,54,55,56,58,59,60,67,68,69,105,106,107,116,138,139,140,141,143,146,147,148,149,166,167,168,169,178,179,180,184,192,193,194,196,197,198,199,200,201,202,204,205,213,214,215,217,218,219,220,221,222,223,225,226,234,235,236,238,239,240,241,242,243,244,246,247,248,255,256,257,266,268,272,276,277,285,286,287,289,290,291,294,295,296) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,4,15,16,18,31,32,40,41,42,44,45,46,47,49,50,51,52,53,54,56,57,58,59,60,61,62,64,65,66,68,69,70,77,78,79,110,112,113,114,115,117,118,119,120,121,123,124,125,133,134,135,137,138,139,141,142,143,144,145,146,150,151,152,169,170,171,172,181,182,183,187,188,189,190,192,193,201,202,203,205,206,207,208,209,210,211,213,214,222,223,224,226,227,228,229,230,231,232,234,243,244,245,249,257,258,259,261,262,263,265,266,267,275,276,277,279,280,281,285,289,293,294,295,296) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,15,28,29,30,31,32,33,48,52,54,55,57,58,59,60,62,63,64,66,108,110,111,112,113,115,116,117,118,119,121,122,123,131,132,133,134,135,136,137,142,146,147,148,149,151,153,154,155,172,173,174,175,176,177,184,185,186,190,198,199,200,202,203,204,205,206,207,208,210,211,219,220,221,223,224,225,226,227,228,229,231,232,240,241,242,244,245,246,247,248,249,250,252,253,254,261,262,263,268,270,271,279,280,281,283,284,285,286,290,291,294,298,299) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "⚠️ 파일 output3443.csv 처리 중 오류 발생: Execution failed on sql '\n",
      "    WITH name_cte AS (\n",
      "        SELECT DISTINCT \"character.name\" AS name\n",
      "        FROM output\n",
      "        WHERE \"character.teamId\" IN (\n",
      "            SELECT DISTINCT \"character.teamId\"\n",
      "            FROM output\n",
      "            WHERE \"character.accountId\" IN (\n",
      "                SELECT DISTINCT substr(teamKillers_AccountId, 3, 40) FROM output\n",
      "            )\n",
      "        )\n",
      "    )\n",
      "    \n",
      "    SELECT \"attacker.name\" AS name, COUNT(damage) AS damage_count, damageTypeCategory\n",
      "    FROM output\n",
      "    WHERE \"attacker.teamId\" = \"victim.teamId\"\n",
      "      AND \"attacker.name\" IN (SELECT name FROM name_cte)\n",
      "      AND \"victim.name\" IN (SELECT name FROM name_cte)\n",
      "      AND \"attacker.name\" != \"victim.name\"\n",
      "    GROUP BY \"attacker.name\", damageTypeCategory\n",
      "    ': no such column: damage\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,23,44,46,47,49,50,51,52,54,55,56,58,59,60,67,68,69,116,138,139,140,141,147,148,149,150,167,168,169,170,179,180,181,185,193,194,195,197,198,199,200,201,202,203,205,206,214,215,216,218,219,220,221,222,223,224,226,227,235,236,237,239,240,241,242,243,244,245,247,248,249,256,257,258,263,266,268,272,277,278,279,287,288,289,291,292,293,295,296) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,4,44,46,47,49,50,51,52,54,55,56,58,59,60,67,68,69,120,142,143,145,146,147,164,165,166,167,168,169,176,177,178,182,183,185,187,188,196,197,198,200,201,202,203,204,205,206,208,209,217,218,219,221,222,223,224,225,226,227,229,230,231,238,239,240,245,246,250,254,258,260,264,265) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,4,24,25,44,46,47,49,50,51,52,54,55,56,58,59,60,67,68,69,128,129,131,141,166,167,180,188,189,190,192,193,194,195,216,237,243,244,261,263,264,271,275,276,277,285,286,287,289,290,291,293,294,302,303,304,306,307,308,310,312,313,314) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,49,50,51,52,54,55,56,58,59,60,67,68,69,148,149,150,167,168,169,170,171,172,179,180,181,185,193,194,195,197,198,199,200,201,202,203,205,206,214,215,216,218,219,220,221,222,223,224,226,227,235,236,237,239,240,241,242,243,244,245,247,248,249,256,257,258,264,266,267,275,276,277,279,280,281,283,284,288,290,293,294) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,20,24,25,44,46,47,49,50,51,52,54,55,56,58,59,60,67,68,69,105,106,107,116,118,119,121,122,123,131,132,133,135,136,137,138,139,140,141,143,145,146,147,164,165,166,167,176,177,178,182,190,191,192,194,195,196,197,198,199,200,202,203,211,212,213,215,216,217,218,219,220,221,223,224,232,233,234,236,237,238,239,240,241,242,244,245,246,253,254,255,260,262,269,273,278,279,280,288,289,290,292,293,294,295,296,297) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,4,42,44,45,47,48,49,50,51,52,53,54,55,57,58,59,61,62,63,70,71,72,108,110,111,112,113,115,116,117,118,119,121,122,123,131,132,133,135,136,137,138,139,140,141,143,145,146,147,164,165,166,167,168,169,176,177,178,182,190,191,192,194,195,196,197,198,199,200,202,203,211,212,213,215,216,217,218,219,220,221,223,224,232,233,234,236,237,238,239,240,241,242,244,245,246,253,254,255,260,262,265,266,274,275,276,278,279,280,281,285,295,296,298,299) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,4,42,44,45,47,48,49,50,51,52,53,54,55,57,58,59,61,108,112,114,115,116,117,119,120,121,122,123,125,126,134,135,136,138,139,140,141,142,143,144,146,148,149,150,167,168,169,170,171,172,179,180,181,185,193,194,195,197,198,199,200,201,202,203,205,206,214,215,216,218,219,220,221,222,223,224,226,227,235,236,237,239,240,241,242,243,244,245,247,248,249,256,257,258,263,265,267,268,276,277,278,280,281,282,287,291,293,294,295,303,304,305,307,308,309,311,314,315) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,4,17,24,25,26,45,47,48,50,51,52,53,54,55,57,58,59,61,62,63,70,71,72,108,110,111,112,113,115,116,117,118,122,123,125,126,134,135,136,138,139,140,141,142,143,144,146,148,149,150,167,168,169,170,171,172,179,180,181,185,193,194,195,197,198,199,200,201,202,203,205,206,214,215,216,218,219,220,221,222,223,224,226,227,235,236,237,239,240,241,242,243,244,245,247,248,249,256,257,258,263,265,266,267,275,276,277,279,280,281,284,285,289,295,296,297) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,4,42,44,45,47,48,49,50,51,52,53,54,55,57,58,59,61,62,63,70,71,72,108,109,111,112,113,121,122,123,125,126,127,128,130,131,132,133,135,136,137,139,140,142,143,144,145,147,148,149,166,167,168,169,170,171,178,179,180,184,192,193,194,196,197,198,199,200,201,202,204,205,213,214,215,217,218,219,220,221,222,223,225,226,234,235,236,238,239,240,241,242,243,244,246,247,248,255,256,257,262,267,268,276,277,278,280,281,282,284,288,293,294,302,303,304,306,307,308,309,313,314,315) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "⚠️ 파일 output3453.csv 처리 중 오류 발생: Execution failed on sql '\n",
      "    WITH name_cte AS (\n",
      "        SELECT DISTINCT \"character.name\" AS name\n",
      "        FROM output\n",
      "        WHERE \"character.teamId\" IN (\n",
      "            SELECT DISTINCT \"character.teamId\"\n",
      "            FROM output\n",
      "            WHERE \"character.accountId\" IN (\n",
      "                SELECT DISTINCT substr(teamKillers_AccountId, 3, 40) FROM output\n",
      "            )\n",
      "        )\n",
      "    )\n",
      "    \n",
      "    SELECT \"attacker.name\" AS name, COUNT(damage) AS damage_count, damageTypeCategory\n",
      "    FROM output\n",
      "    WHERE \"attacker.teamId\" = \"victim.teamId\"\n",
      "      AND \"attacker.name\" IN (SELECT name FROM name_cte)\n",
      "      AND \"victim.name\" IN (SELECT name FROM name_cte)\n",
      "      AND \"attacker.name\" != \"victim.name\"\n",
      "    GROUP BY \"attacker.name\", damageTypeCategory\n",
      "    ': no such column: teamKillers_AccountId\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,20,42,44,45,49,50,51,52,54,55,56,116,119,138,139,140,141,146,148,149,150,167,168,169,170,171,172,179,180,181,185,193,194,195,197,198,199,200,201,202,203,205,206,214,215,216,218,219,220,221,222,223,224,226,227,235,236,237,239,240,241,242,243,244,245,247,248,249,256,257,258,263,265,269,270,278,279,280,282,283,284,285,289,293,295,296) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,4,42,44,45,47,48,49,50,51,52,53,54,55,57,58,59,61,62,63,70,71,72,108,109,111,112,113,121,122,123,125,126,127,128,129,130,131,133,135,136,137,154,155,156,157,158,159,166,167,168,172,180,181,182,184,185,186,187,188,189,190,192,193,201,202,203,205,206,207,208,209,210,211,213,214,222,223,224,226,227,228,229,230,231,232,234,235,236,243,244,245,249,251,252,253,254,256,257,258,263,264,272,273,274,276,277,278,280,282,286,290,292,297,298,306,307,308,310,311,312,313,314) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,4,49,50,51,52,54,55,56,58,59,60,67,68,69,143,146,171,172,185,193,194,195,197,198,199,202,263,265,268,269,277,278,279,281,282,283,284,288,295,297,298) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "⚠️ 파일 output3457.csv 처리 중 오류 발생: Execution failed on sql '\n",
      "    WITH name_cte AS (\n",
      "        SELECT DISTINCT \"character.name\" AS name\n",
      "        FROM output\n",
      "        WHERE \"character.teamId\" IN (\n",
      "            SELECT DISTINCT \"character.teamId\"\n",
      "            FROM output\n",
      "            WHERE \"character.accountId\" IN (\n",
      "                SELECT DISTINCT substr(teamKillers_AccountId, 3, 40) FROM output\n",
      "            )\n",
      "        )\n",
      "    )\n",
      "    \n",
      "    SELECT \"attacker.name\" AS name, COUNT(damage) AS damage_count, damageTypeCategory\n",
      "    FROM output\n",
      "    WHERE \"attacker.teamId\" = \"victim.teamId\"\n",
      "      AND \"attacker.name\" IN (SELECT name FROM name_cte)\n",
      "      AND \"victim.name\" IN (SELECT name FROM name_cte)\n",
      "      AND \"attacker.name\" != \"victim.name\"\n",
      "    GROUP BY \"attacker.name\", damageTypeCategory\n",
      "    ': no such column: damage\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,15,28,29,30,33,45,49,51,52,53,54,55,56,57,58,59,60,62,63,64,66,67,68,75,76,77,108,109,111,112,113,121,122,123,124,125,126,127,128,129,130,131,133,135,136,137,138,140,141,142,147,148,149,166,167,168,169,170,171,178,179,180,184,185,186,187,189,190,198,199,200,201,202,203,204,205,206,207,208,210,211,219,220,221,222,223,224,225,226,227,228,229,231,232,233,240,241,242,246,254,255,256,258,259,260,262,264,267,271,275,276,277,285,286,287,289,290,291,295,296,297) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,20,24,25,26,27,29,30,31,33,34,35,42,43,44,80,81,82,119,120,121,123,124,125,126,128,129,130,131,132,133,134,136,137,138,155,156,157,158,167,168,169,173,181,182,183,185,186,187,188,189,190,191,193,194,202,203,204,206,207,208,209,210,211,212,214,215,223,224,225,227,228,229,230,231,232,233,235,236,237,244,245,246,251,253,254,256,257,258,261,264,271,275,277,278,286,287,288,290,291,292,295,297,298) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,4,17,24,25,44,46,47,49,50,51,52,53,54,55,57,58,59,108,109,111,112,113,121,122,123,124,125,126,127,128,130,131,132,133,135,136,137,141,142,143,144,146,148,149,150,167,168,169,170,171,172,179,180,181,185,193,194,195,197,198,199,200,201,202,203,205,206,214,215,216,218,219,220,221,222,223,224,226,227,235,236,237,239,240,241,242,243,244,245,247,248,249,256,257,258,263,265,268,269,277,278,279,281,282,283,284,288,290,292,293,301,302,303,305,306,307,313,314) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,4,17,42,44,45,47,48,49,50,51,52,53,54,55,57,58,59,108,112,113,115,116,124,125,126,127,128,129,130,131,132,133,134,136,138,139,140,157,158,159,160,161,162,169,170,171,175,183,184,185,187,188,189,190,191,192,193,195,196,204,205,206,208,209,210,211,212,213,214,216,217,225,226,227,229,230,231,232,233,234,235,237,238,239,246,247,248,253,254,256,257,258,259,261,262,263,265,268,269,277,278,279,280,281,282,283,284,288,294,295,296,304,305,306,308,309,310,312,314,315) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,20,26,27,28,29,31,32,33,35,36,37,44,45,46,87,122,134,140,141,143,144,145,146,147,148,165,166,167,168,169,170,177,178,179,183,191,192,193,195,196,197,198,199,200,201,203,204,212,213,214,216,217,218,219,220,221,222,224,225,233,234,235,237,238,239,240,241,242,243,245,246,247,254,255,256,261,262,265,269,273,279,280) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "⚠️ 파일 output3463.csv 처리 중 오류 발생: Execution failed on sql '\n",
      "    WITH name_cte AS (\n",
      "        SELECT DISTINCT \"character.name\" AS name\n",
      "        FROM output\n",
      "        WHERE \"character.teamId\" IN (\n",
      "            SELECT DISTINCT \"character.teamId\"\n",
      "            FROM output\n",
      "            WHERE \"character.accountId\" IN (\n",
      "                SELECT DISTINCT substr(teamKillers_AccountId, 3, 40) FROM output\n",
      "            )\n",
      "        )\n",
      "    )\n",
      "    \n",
      "    SELECT \"attacker.name\" AS name, COUNT(damage) AS damage_count, damageTypeCategory\n",
      "    FROM output\n",
      "    WHERE \"attacker.teamId\" = \"victim.teamId\"\n",
      "      AND \"attacker.name\" IN (SELECT name FROM name_cte)\n",
      "      AND \"victim.name\" IN (SELECT name FROM name_cte)\n",
      "      AND \"attacker.name\" != \"victim.name\"\n",
      "    GROUP BY \"attacker.name\", damageTypeCategory\n",
      "    ': no such column: damage\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,4,42,44,45,52,53,54,55,57,58,59,108,110,111,112,113,115,116,117,118,119,121,122,123,131,132,133,135,136,137,138,139,140,141,143,149,150,151,152,169,170,171,172,173,174,181,182,183,187,195,196,197,199,200,201,202,203,204,205,207,208,216,217,218,220,221,222,223,224,225,226,228,229,237,238,239,241,242,243,244,245,246,247,249,250,251,258,259,260,265,269,273,275,277,278,286,287,288,290,291,292,293,294,302,303,304,306,307,308,311,312) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,4,24,25,44,46,47,49,50,51,52,54,55,56,58,59,60,67,68,69,105,106,107,108,110,111,112,113,115,116,117,118,122,123,125,126,134,135,136,138,139,140,142,143,145,146,147,148,150,151,152,169,170,171,172,173,174,181,182,183,187,195,196,197,199,200,201,202,203,204,205,207,208,216,217,218,220,221,222,223,224,225,226,228,229,237,238,239,241,242,243,244,245,246,247,249,250,251,258,259,260,265,268,269,277,278,279,281,282,283,284,288,292,296,297,305,306,307,309,310,311,312,313) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,42,44,45,50,51,52,53,54,55,57,58,59,61,62,63,70,71,72,108,110,111,112,113,115,116,117,118,119,121,122,123,131,132,133,135,136,137,138,139,140,141,143,148,149,150,167,168,169,170,171,172,179,180,181,185,193,194,195,197,198,199,200,201,202,203,205,206,214,215,216,218,219,220,221,222,223,224,226,227,235,236,237,239,240,241,242,243,244,245,247,248,249,256,257,258,263,265,268,269,277,278,279,281,282,283,284,288,292,295,296) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,4,42,44,45,47,48,49,50,51,52,53,54,55,57,58,59,108,109,111,112,113,121,122,123,125,126,127,131,133,134,135,136,138,139,140,141,143,144,145,146,149,151,152,153,170,171,172,173,174,175,182,183,184,188,196,197,198,200,201,202,203,204,205,206,208,209,217,218,219,221,222,223,224,225,226,227,229,230,238,239,240,242,243,244,245,246,247,248,250,259,260,261,265,266,274,275,276,278,279,280,282,284,288,291,293,296,297,305,306,307,309,310,311,314,315) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,20,42,44,45,49,50,51,52,54,55,56,58,59,60,67,68,69,136,138,139,140,141,144,145,151,152,153,170,171,172,173,174,175,182,183,184,188,196,197,198,200,201,202,203,204,205,206,208,209,217,218,219,221,222,223,224,225,226,227,229,230,238,239,240,242,243,244,245,246,247,248,250,251,252,259,260,261,265,269,273,278,279,287,288,289,291,292,293,295,297,298) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,4,54,55,56,59,60,61,62,64,65,66,68,69,70,77,78,79,110,114,116,117,118,119,121,122,123,124,125,127,128,136,137,138,140,141,142,143,144,145,146,149,150,151,168,169,170,171,172,173,180,181,182,186,187,188,189,191,192,200,201,202,204,205,206,207,208,209,210,212,213,221,222,223,225,226,227,228,229,230,231,233,234,235,242,243,244,248,256,257,258,260,261,262,264,265,266,274,275,276,278,279,280,282,287,291,294,296,297,305,306,307,309,310,311,312,314,315) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,4,42,44,45,47,48,49,50,51,52,54,55,56,58,59,60,67,68,69,105,106,107,108,110,111,112,113,115,116,117,118,119,121,122,123,131,132,133,135,136,137,138,139,140,141,143,148,149,150,167,168,169,170,171,172,179,180,181,185,193,194,195,197,198,199,200,201,202,203,205,206,214,215,216,218,219,220,221,222,223,224,226,227,235,236,237,239,240,241,242,243,244,245,247,256,257,258,263,265,268,269,277,278,279,281,282,283,284,285,289,292,294,295,303,304,305,307,308,309,312,313) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,20,26,42,44,45,46,47,48,49,50,52,53,54,56,57,58,65,66,67,116,119,138,139,140,141,147,149,150,151,168,169,170,171,180,181,182,186,194,195,196,198,199,200,201,202,203,204,206,207,215,216,217,219,220,221,222,223,224,225,227,228,236,237,238,240,241,242,243,244,245,246,248,249,250,257,258,259,263,266,271,275,277,278,286,287,288,290,291,292,295,296,297,305,306,307,309,310,311,313,314) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "⚠️ 파일 output3471.csv 처리 중 오류 발생: Execution failed on sql '\n",
      "    WITH name_cte AS (\n",
      "        SELECT DISTINCT \"character.name\" AS name\n",
      "        FROM output\n",
      "        WHERE \"character.teamId\" IN (\n",
      "            SELECT DISTINCT \"character.teamId\"\n",
      "            FROM output\n",
      "            WHERE \"character.accountId\" IN (\n",
      "                SELECT DISTINCT substr(teamKillers_AccountId, 3, 40) FROM output\n",
      "            )\n",
      "        )\n",
      "    )\n",
      "    \n",
      "    SELECT \"attacker.name\" AS name, COUNT(damage) AS damage_count, damageTypeCategory\n",
      "    FROM output\n",
      "    WHERE \"attacker.teamId\" = \"victim.teamId\"\n",
      "      AND \"attacker.name\" IN (SELECT name FROM name_cte)\n",
      "      AND \"victim.name\" IN (SELECT name FROM name_cte)\n",
      "      AND \"attacker.name\" != \"victim.name\"\n",
      "    GROUP BY \"attacker.name\", damageTypeCategory\n",
      "    ': no such column: damage\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "⚠️ 파일 output3473.csv 처리 중 오류 발생: Execution failed on sql '\n",
      "    WITH name_cte AS (\n",
      "        SELECT DISTINCT \"character.name\" AS name\n",
      "        FROM output\n",
      "        WHERE \"character.teamId\" IN (\n",
      "            SELECT DISTINCT \"character.teamId\"\n",
      "            FROM output\n",
      "            WHERE \"character.accountId\" IN (\n",
      "                SELECT DISTINCT substr(teamKillers_AccountId, 3, 40) FROM output\n",
      "            )\n",
      "        )\n",
      "    )\n",
      "    \n",
      "    SELECT \"attacker.name\" AS name, COUNT(damage) AS damage_count, damageTypeCategory\n",
      "    FROM output\n",
      "    WHERE \"attacker.teamId\" = \"victim.teamId\"\n",
      "      AND \"attacker.name\" IN (SELECT name FROM name_cte)\n",
      "      AND \"victim.name\" IN (SELECT name FROM name_cte)\n",
      "      AND \"attacker.name\" != \"victim.name\"\n",
      "    GROUP BY \"attacker.name\", damageTypeCategory\n",
      "    ': no such column: damage\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,4,54,55,56,59,60,61,62,64,65,66,68,69,70,77,78,79,110,112,113,114,115,117,118,119,120,121,123,124,125,133,134,135,137,138,139,140,141,142,143,145,146,147,164,165,166,167,168,169,176,177,178,182,190,191,192,194,195,196,197,198,199,200,202,203,211,212,213,215,216,217,218,219,220,221,223,224,232,233,234,236,237,238,239,240,241,242,244,253,254,255,260,262,267,268,276,277,278,280,281,282,284,288,292,297,298) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,4,42,44,45,50,51,52,53,54,55,57,58,59,108,112,113,115,116,124,125,126,128,129,130,131,133,134,135,136,138,139,140,157,158,159,160,161,162,169,170,171,175,183,184,185,187,188,189,190,191,192,193,195,196,204,205,206,208,209,210,211,212,213,214,216,217,225,226,227,229,230,231,232,233,234,235,237,238,239,246,247,248,252,254,255,256,257,259,260,261,263,265,268,269,277,278,279,281,282,283,286,290,292,293,301,302,303,305,306,307,312,313,314,315) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,4,42,44,45,47,48,50,51,52,53,54,55,57,58,59,61,108,110,111,112,113,115,116,117,118,122,124,125,127,128,136,137,138,140,141,142,143,144,145,146,148,149,150,167,168,169,170,171,172,179,180,181,185,193,194,195,197,198,199,200,201,202,203,205,206,214,215,216,218,219,220,221,222,223,224,226,227,235,236,237,239,240,241,242,243,244,245,247,256,257,258,264,266,269,270,278,279,280,282,283,284,286,287,295,296,297,299,300,301,302,306,308,311,313,314) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,4,42,44,45,52,53,54,55,57,58,59,61,108,109,111,112,113,121,122,123,125,126,127,131,133,134,135,136,138,139,140,141,142,143,144,146,148,149,150,167,168,169,170,171,172,179,180,181,185,193,194,195,197,198,199,200,201,202,203,205,206,214,215,216,218,219,220,221,222,223,224,226,227,235,236,237,239,240,241,242,243,244,245,247,248,249,256,257,258,263,267,268,269,277,278,279,281,282,283,285,289,291,297,298,306,307,308,310,311,312,313,314,315) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,20,24,25,26,27,29,30,31,33,34,35,42,43,44,93,132,133,135,136,137,138,139,140,141,143,144,145,162,163,164,165,174,175,176,180,188,189,190,192,193,194,195,196,197,198,200,201,209,210,211,213,214,215,216,217,218,219,221,222,230,231,232,234,235,236,237,238,239,240,242,243,244,251,252,253,257,260,262,268,272,274,275,283,284,285,287,288,289,291,294,296,297) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,4,52,53,56,57,58,59,60,61,62,64,65,66,68,69,70,77,78,79,110,112,113,114,115,117,118,119,120,121,123,124,125,133,134,135,137,138,139,141,143,144,145,146,148,149,150,151,168,169,170,171,180,181,182,186,194,195,196,198,199,200,201,202,203,204,206,207,215,216,217,219,220,221,222,223,224,225,227,228,236,237,238,240,241,242,243,244,245,246,248,257,258,259,264,265,266,274,275,276,278,279,280,282,286,290,292,293) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "⚠️ 파일 output3479.csv 처리 중 오류 발생: Execution failed on sql '\n",
      "    WITH name_cte AS (\n",
      "        SELECT DISTINCT \"character.name\" AS name\n",
      "        FROM output\n",
      "        WHERE \"character.teamId\" IN (\n",
      "            SELECT DISTINCT \"character.teamId\"\n",
      "            FROM output\n",
      "            WHERE \"character.accountId\" IN (\n",
      "                SELECT DISTINCT substr(teamKillers_AccountId, 3, 40) FROM output\n",
      "            )\n",
      "        )\n",
      "    )\n",
      "    \n",
      "    SELECT \"attacker.name\" AS name, COUNT(damage) AS damage_count, damageTypeCategory\n",
      "    FROM output\n",
      "    WHERE \"attacker.teamId\" = \"victim.teamId\"\n",
      "      AND \"attacker.name\" IN (SELECT name FROM name_cte)\n",
      "      AND \"victim.name\" IN (SELECT name FROM name_cte)\n",
      "      AND \"attacker.name\" != \"victim.name\"\n",
      "    GROUP BY \"attacker.name\", damageTypeCategory\n",
      "    ': no such column: damage\n",
      "⚠️ 파일 output3480.csv 처리 중 오류 발생: Execution failed on sql '\n",
      "    WITH name_cte AS (\n",
      "        SELECT DISTINCT \"character.name\" AS name\n",
      "        FROM output\n",
      "        WHERE \"character.teamId\" IN (\n",
      "            SELECT DISTINCT \"character.teamId\"\n",
      "            FROM output\n",
      "            WHERE \"character.accountId\" IN (\n",
      "                SELECT DISTINCT substr(teamKillers_AccountId, 3, 40) FROM output\n",
      "            )\n",
      "        )\n",
      "    )\n",
      "    \n",
      "    SELECT \"attacker.name\" AS name, COUNT(damage) AS damage_count, damageTypeCategory\n",
      "    FROM output\n",
      "    WHERE \"attacker.teamId\" = \"victim.teamId\"\n",
      "      AND \"attacker.name\" IN (SELECT name FROM name_cte)\n",
      "      AND \"victim.name\" IN (SELECT name FROM name_cte)\n",
      "      AND \"attacker.name\" != \"victim.name\"\n",
      "    GROUP BY \"attacker.name\", damageTypeCategory\n",
      "    ': no such column: damage\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,4,42,44,45,52,53,54,55,57,58,59,107,108,110,111,112,120,121,122,124,125,126,128,130,131,132,133,135,136,137,143,144,145,146,148,150,151,152,169,170,171,172,173,174,181,182,183,187,195,196,197,199,200,201,202,203,204,205,207,208,216,217,218,220,221,222,223,224,225,226,228,229,237,238,239,241,242,243,244,245,246,247,249,250,251,258,259,260,265,268,269,277,278,279,281,282,283,285,286,290,293,297,298,299) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,4,42,44,45,47,48,49,50,51,52,54,55,56,58,105,106,107,108,110,111,112,113,115,116,117,118,119,121,122,123,131,132,133,135,136,137,138,140,141,142,143,145,146,147,164,165,166,167,168,169,176,177,178,182,190,191,192,194,195,196,197,198,199,200,202,203,211,212,213,215,216,217,218,219,220,221,223,224,232,233,234,236,237,238,239,240,241,242,244,253,254,255,264,266,267,268,276,277,278,280,281,282,284,288,289,290,298,299,300,302,303,304,307,310,312,313) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,4,44,46,47,49,50,51,52,53,54,55,57,58,59,108,112,114,115,116,117,119,120,121,122,123,125,126,134,135,136,138,139,140,141,142,143,144,146,148,149,150,167,168,169,170,171,172,179,180,181,185,193,194,195,197,198,199,200,201,202,203,205,206,214,215,216,218,219,220,221,222,223,224,226,227,235,236,237,239,240,241,242,243,244,245,247,256,257,258,263,266,269,270,278,279,280,282,283,284,288,292,294,295,303,304,305,307,308,309,311,313,314,315) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,23,42,44,45,49,50,51,52,54,55,56,58,59,60,67,68,69,106,107,120,123,141,142,143,144,146,147,148,165,166,167,168,177,178,179,183,191,192,193,195,196,197,198,199,200,201,203,204,212,213,214,216,217,218,219,220,221,222,224,225,233,234,235,237,238,239,240,241,242,243,245,246,247,254,255,256,261,262,266,269,270,278,279,280,282,283,284,285,289,292,294,295) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,4,47,48,49,50,51,52,53,54,55,57,58,59,61,62,63,70,71,72,141,142,144,145,146,163,164,165,166,167,168,175,176,177,181,182,183,184,186,187,195,196,197,199,200,201,202,203,204,205,207,208,216,217,218,220,221,222,223,224,225,226,228,237,238,239,243,244,245,253,254,255,257,258,259,261,263,264,265,273,274,275,277,278,279,285,289,293,296,297) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,20,42,44,45,49,50,51,52,54,55,56,58,59,60,67,68,69,116,118,122,123,125,126,134,135,136,138,139,140,141,142,143,144,147,148,150,151,152,169,170,171,172,173,174,181,182,183,187,195,196,197,199,200,201,202,203,204,205,207,208,216,217,218,220,221,222,223,224,225,226,228,229,237,238,239,241,242,243,244,245,246,247,249,250,251,258,259,260,265,268,272,275,276,284,285,286,288,289,290,294,295,296) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "⚠️ 파일 output3488.csv 처리 중 오류 발생: Execution failed on sql '\n",
      "    WITH name_cte AS (\n",
      "        SELECT DISTINCT \"character.name\" AS name\n",
      "        FROM output\n",
      "        WHERE \"character.teamId\" IN (\n",
      "            SELECT DISTINCT \"character.teamId\"\n",
      "            FROM output\n",
      "            WHERE \"character.accountId\" IN (\n",
      "                SELECT DISTINCT substr(teamKillers_AccountId, 3, 40) FROM output\n",
      "            )\n",
      "        )\n",
      "    )\n",
      "    \n",
      "    SELECT \"attacker.name\" AS name, COUNT(damage) AS damage_count, damageTypeCategory\n",
      "    FROM output\n",
      "    WHERE \"attacker.teamId\" = \"victim.teamId\"\n",
      "      AND \"attacker.name\" IN (SELECT name FROM name_cte)\n",
      "      AND \"victim.name\" IN (SELECT name FROM name_cte)\n",
      "      AND \"attacker.name\" != \"victim.name\"\n",
      "    GROUP BY \"attacker.name\", damageTypeCategory\n",
      "    ': no such column: damage\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,4,44,46,47,49,50,51,52,54,55,56,58,59,60,67,68,69,105,107,108,109,110,112,113,114,115,116,117,118,122,123,125,126,134,135,136,138,139,140,141,143,144,145,146,148,149,150,167,168,169,170,171,172,179,180,181,185,193,194,195,197,198,199,200,201,202,203,205,206,214,215,216,218,219,220,221,222,223,224,226,227,235,236,237,239,240,241,242,243,244,245,247,248,249,256,257,258,266,268,270,271,279,280,281,283,284,285,287,291,294,295,303,304,305,307,308,309,311,312,313) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,4,42,44,45,50,51,52,53,54,55,57,58,59,108,109,111,112,113,121,122,123,125,126,127,128,129,130,131,136,138,139,140,141,143,144,145,146,148,149,150,167,168,169,170,171,172,179,180,181,185,193,194,195,197,198,199,200,201,202,203,205,206,214,215,216,218,219,220,221,222,223,224,226,227,235,236,237,239,240,241,242,243,244,245,247,256,257,258,265,267,270,271,279,280,281,283,284,285,286,290,292,293,294,302,303,304,306,307,308,310,312,313) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "⚠️ 파일 output3491.csv 처리 중 오류 발생: Execution failed on sql '\n",
      "    WITH name_cte AS (\n",
      "        SELECT DISTINCT \"character.name\" AS name\n",
      "        FROM output\n",
      "        WHERE \"character.teamId\" IN (\n",
      "            SELECT DISTINCT \"character.teamId\"\n",
      "            FROM output\n",
      "            WHERE \"character.accountId\" IN (\n",
      "                SELECT DISTINCT substr(teamKillers_AccountId, 3, 40) FROM output\n",
      "            )\n",
      "        )\n",
      "    )\n",
      "    \n",
      "    SELECT \"attacker.name\" AS name, COUNT(damage) AS damage_count, damageTypeCategory\n",
      "    FROM output\n",
      "    WHERE \"attacker.teamId\" = \"victim.teamId\"\n",
      "      AND \"attacker.name\" IN (SELECT name FROM name_cte)\n",
      "      AND \"victim.name\" IN (SELECT name FROM name_cte)\n",
      "      AND \"attacker.name\" != \"victim.name\"\n",
      "    GROUP BY \"attacker.name\", damageTypeCategory\n",
      "    ': no such column: damage\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,4,42,44,45,47,48,49,50,51,52,53,54,55,57,58,59,61,62,63,70,71,72,108,109,111,112,113,121,122,123,125,126,127,128,130,131,132,133,135,136,137,138,140,141,142,143,145,146,147,164,165,166,167,168,169,176,177,178,182,190,191,192,194,195,196,197,198,199,200,202,203,211,212,213,215,216,217,218,219,220,221,223,224,232,233,234,236,237,238,239,240,241,242,244,253,254,255,263,266,268,269,277,278,279,281,282,283,286,290,294,295,303,304,305,307,308,309,311,312,313) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,23,26,27,28,29,31,32,33,93,132,140,141,143,144,145,146,149,150,151,152,169,170,171,172,173,174,181,182,183,187,195,196,197,199,200,201,202,203,204,205,207,208,216,217,218,220,221,222,223,224,225,226,228,229,237,238,239,241,242,243,244,245,246,247,249,250,251,258,259,260,265,268,272,275,278,279,287,288,289,291,292,293,295,296) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,4,44,46,47,52,53,54,55,57,58,59,108,110,111,112,113,115,116,117,118,119,121,122,123,131,132,133,135,136,137,138,140,141,142,143,148,149,157,158,159,161,162,163,164,165,166,183,184,185,186,187,188,195,196,197,201,209,210,211,213,214,215,216,217,218,219,221,222,230,231,232,234,235,236,237,238,239,240,242,243,251,252,253,255,256,257,258,259,260,261,263,264,265,272,273,274,279,284,288,292,294,296,297,298,306,307,308,310,311,312,314,315) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,4,17,38,42,44,45,48,49,52,53,54,55,57,58,59,108,122,123,125,126,134,135,136,137,138,139,140,143,144,145,146,147,149,151,152,153,170,171,172,173,174,175,182,183,184,188,196,197,198,199,200,201,202,203,204,205,206,208,209,217,218,219,220,221,222,223,224,225,226,227,229,230,238,239,240,241,242,243,244,245,246,247,248,250,259,260,261,266,267,275,276,277,279,280,281,283,284,288,290,293,294,302,303,304,306,307,308,309,312,313) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,4,44,46,47,49,50,51,52,53,54,55,57,58,59,108,110,111,112,113,115,116,117,118,119,121,122,123,131,132,133,135,136,137,138,139,140,141,143,145,146,147,164,165,166,167,168,169,176,177,178,182,190,191,192,194,195,196,197,198,199,200,202,203,211,212,213,215,216,217,218,219,220,221,223,224,232,233,234,236,237,238,239,240,241,242,244,245,246,253,254,255,264,266,267,268,276,277,278,280,281,282,286,290,292,294,297,298,306,307,308,310,311,312,314,315) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,4,57,58,59,60,61,62,64,65,66,68,69,70,77,78,79,110,112,113,114,115,117,118,119,120,121,123,124,125,133,134,135,137,138,139,140,141,142,143,149,150,151,152,169,170,171,172,173,174,181,182,183,187,195,196,197,199,200,201,202,203,204,205,207,208,216,217,218,220,221,222,223,224,225,226,228,229,237,238,239,241,242,243,244,245,246,247,249,258,259,260,265,269,270,278,279,280,282,283,284,286,290,295,297,298) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "⚠️ 파일 output3498.csv 처리 중 오류 발생: Execution failed on sql '\n",
      "    WITH name_cte AS (\n",
      "        SELECT DISTINCT \"character.name\" AS name\n",
      "        FROM output\n",
      "        WHERE \"character.teamId\" IN (\n",
      "            SELECT DISTINCT \"character.teamId\"\n",
      "            FROM output\n",
      "            WHERE \"character.accountId\" IN (\n",
      "                SELECT DISTINCT substr(teamKillers_AccountId, 3, 40) FROM output\n",
      "            )\n",
      "        )\n",
      "    )\n",
      "    \n",
      "    SELECT \"attacker.name\" AS name, COUNT(damage) AS damage_count, damageTypeCategory\n",
      "    FROM output\n",
      "    WHERE \"attacker.teamId\" = \"victim.teamId\"\n",
      "      AND \"attacker.name\" IN (SELECT name FROM name_cte)\n",
      "      AND \"victim.name\" IN (SELECT name FROM name_cte)\n",
      "      AND \"attacker.name\" != \"victim.name\"\n",
      "    GROUP BY \"attacker.name\", damageTypeCategory\n",
      "    ': no such column: damage\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,4,24,25,49,50,51,52,53,54,55,57,58,59,61,62,63,70,71,72,136,148,149,150,167,168,169,170,171,172,179,180,181,185,193,194,195,197,198,199,200,201,202,203,205,206,214,215,216,218,219,220,221,222,223,224,226,227,235,236,237,239,240,241,242,243,244,245,247,256,257,258,263,265,267,268,276,277,278,280,281,282,286,290,293,294,302,303,304,306,307,308,310,311,312) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,42,44,45,49,50,51,52,54,55,56,58,59,60,67,68,69,105,106,107,108,109,111,112,113,121,122,123,125,126,127,128,129,130,131,133,135,136,137,138,140,141,142,143,145,146,147,164,165,166,167,168,169,176,177,178,182,190,191,192,194,195,196,197,198,199,200,202,203,211,212,213,215,216,217,218,219,220,221,223,224,232,233,234,236,237,238,239,240,241,242,244,245,246,253,254,255,264,266,268,269,277,278,279,281,282,283,284,288,291,292,293,301,302,303,305,306,307,313,314,315) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,4,47,48,49,50,51,52,53,54,55,57,58,59,61,62,63,70,71,72,108,110,111,112,113,115,116,117,118,119,121,122,123,131,132,133,135,136,137,138,139,140,141,144,145,146,147,164,165,166,167,168,169,176,177,178,182,190,191,192,194,195,196,197,198,199,200,202,203,211,212,213,215,216,217,218,219,220,221,223,224,232,233,234,236,237,238,239,240,241,242,244,245,246,253,254,255,262,266,267,268,276,277,278,280,281,282,284,285,293,294,295,297,298,299,300,304,308,309,314,315) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,20,42,44,45,49,50,51,52,54,55,56,58,59,60,67,68,69,113,118,122,123,125,126,134,135,136,138,139,140,141,142,143,144,147,148,150,151,152,169,170,171,172,181,182,183,187,195,196,197,199,200,201,202,203,204,205,207,208,216,217,218,220,221,222,223,224,225,226,228,229,237,238,239,241,242,243,244,245,246,247,249,258,259,260,265,268,272,278,279,280) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,4,42,44,45,50,51,52,53,54,55,57,58,59,61,62,63,70,71,72,108,110,111,112,113,115,116,117,118,119,121,122,123,131,132,133,135,136,137,138,139,140,141,143,150,151,152,153,170,171,172,173,174,175,182,183,184,188,196,197,198,200,201,202,203,204,205,206,208,209,217,218,219,221,222,223,224,225,226,227,229,230,238,239,240,242,243,244,245,246,247,248,250,259,260,261,266,267,268,276,277,278,280,281,282,285,289,291,297,298) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,4,17,42,44,45,52,53,54,55,57,58,59,61,62,63,70,71,72,108,110,111,112,113,115,116,117,118,123,124,125,127,128,136,137,138,139,140,141,142,143,145,146,147,148,150,151,152,169,170,171,172,173,174,181,182,183,187,195,196,197,199,200,201,202,203,204,205,207,208,216,217,218,220,221,222,223,224,225,226,228,229,237,238,239,241,242,243,244,245,246,247,249,250,251,258,259,260,266,267,268,276,277,278,279,280,281,282,284,288,295,297,298) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,20,24,25,44,46,47,49,50,51,52,54,55,56,58,59,60,67,68,69,105,106,107,136,142,143,144,145,146,148,150,151,152,169,170,171,172,173,174,181,182,183,187,195,196,197,199,200,201,202,203,204,205,207,208,216,217,218,220,221,222,223,224,225,226,228,229,237,238,239,241,242,243,244,245,246,247,249,258,259,260,265,269,273,277,278,279) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,4,42,44,45,47,48,50,51,52,53,54,55,57,58,59,61,62,63,70,71,72,108,109,111,112,113,121,122,123,125,126,127,128,130,131,132,133,135,136,137,139,140,142,143,144,145,147,148,149,166,167,168,169,170,171,178,179,180,184,192,193,194,196,197,198,199,200,201,202,204,205,213,214,215,217,218,219,220,221,222,223,225,226,234,235,236,238,239,240,241,242,243,244,246,247,248,255,256,257,266,268,269,277,278,279,281,282,283,286,290,293,294,302,303,304,306,307,308,310,311,314,315) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,4,42,44,45,50,51,52,53,54,55,57,58,59,61,108,110,111,112,113,115,116,117,118,119,121,122,123,131,132,133,135,136,137,139,140,141,142,143,145,146,147,164,165,166,167,168,169,176,177,178,182,190,191,192,194,195,196,197,198,199,200,202,203,211,212,213,215,216,217,218,219,220,221,223,224,232,233,234,236,237,238,239,240,241,242,244,245,246,253,254,255,260,264,271,272,280,281,282,284,285,286,287,291,294,295,297,298,306,307,308,310,311,312,314,315) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,4,59,60,61,62,64,65,66,68,69,70,77,78,79,110,112,113,114,115,117,118,119,120,124,125,127,128,136,137,138,140,141,142,143,144,145,146,148,149,150,167,168,169,170,171,172,179,180,181,185,193,194,195,197,198,199,200,201,202,203,205,206,214,215,216,218,219,220,221,222,223,224,226,227,235,236,237,239,240,241,242,243,244,245,247,256,257,258,263,265,268,269,277,278,279,281,282,283,285,289,291,296,297) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,4,24,25,44,46,47,49,50,51,52,53,54,55,57,58,59,108,109,111,112,113,121,122,123,125,126,127,131,133,134,135,136,138,139,140,141,143,144,145,146,149,150,151,152,169,170,171,172,173,174,181,182,183,187,195,196,197,199,200,201,202,203,204,205,207,208,216,217,218,220,221,222,223,224,225,226,228,229,237,238,239,241,242,243,244,245,246,247,249,250,251,258,259,260,265,269,270,278,279,280,282,283,284,287,291,293,297,298,306,307,308,310,311,312,313,314,315) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,4,42,44,45,49,50,51,52,53,54,55,57,58,59,61,108,112,114,115,116,117,119,120,121,122,123,125,126,134,135,136,138,139,140,141,142,143,144,146,148,149,150,167,168,169,170,171,172,179,180,181,185,193,194,195,197,198,199,200,201,202,203,205,206,214,215,216,218,219,220,221,222,223,224,226,227,235,236,237,239,240,241,242,243,244,245,247,248,249,256,257,258,263,265,267,268,276,277,278,280,281,282,285,289,291,295,296) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,4,52,53,54,55,56,59,60,61,62,64,65,66,68,69,70,77,78,79,110,112,113,114,115,117,118,119,120,121,123,124,125,133,134,135,137,138,139,143,144,145,146,148,149,150,167,168,169,170,171,172,179,180,181,185,193,194,195,197,198,199,200,201,202,203,205,206,214,215,216,218,219,220,221,222,223,224,226,227,235,236,237,239,240,241,242,243,244,245,247,256,257,258,263,265,268,269,277,278,279,281,282,283,285,289,293,294,302,303,304,306,307,308,311,312,313,314) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "⚠️ 파일 output3512.csv 처리 중 오류 발생: Execution failed on sql '\n",
      "    WITH name_cte AS (\n",
      "        SELECT DISTINCT \"character.name\" AS name\n",
      "        FROM output\n",
      "        WHERE \"character.teamId\" IN (\n",
      "            SELECT DISTINCT \"character.teamId\"\n",
      "            FROM output\n",
      "            WHERE \"character.accountId\" IN (\n",
      "                SELECT DISTINCT substr(teamKillers_AccountId, 3, 40) FROM output\n",
      "            )\n",
      "        )\n",
      "    )\n",
      "    \n",
      "    SELECT \"attacker.name\" AS name, COUNT(damage) AS damage_count, damageTypeCategory\n",
      "    FROM output\n",
      "    WHERE \"attacker.teamId\" = \"victim.teamId\"\n",
      "      AND \"attacker.name\" IN (SELECT name FROM name_cte)\n",
      "      AND \"victim.name\" IN (SELECT name FROM name_cte)\n",
      "      AND \"attacker.name\" != \"victim.name\"\n",
      "    GROUP BY \"attacker.name\", damageTypeCategory\n",
      "    ': no such column: teamKillers_AccountId\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,4,17,24,25,40,44,46,47,49,50,51,52,53,54,55,57,58,59,61,62,63,70,71,72,108,110,111,112,113,115,116,117,118,119,121,122,123,131,132,133,134,135,136,137,141,142,143,144,146,148,149,150,167,168,169,170,171,172,179,180,181,185,193,194,195,196,197,198,199,200,201,202,203,205,206,214,215,216,218,219,220,221,222,223,224,226,227,235,236,237,238,239,240,241,242,243,244,245,247,248,249,256,257,258,263,265,268,269,277,278,279,280,281,282,283,284,288,291,293,294,302,303,304,306,307,308,312,314,315) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,4,42,44,45,47,48,49,50,51,52,53,54,55,57,58,59,61,62,63,70,71,72,108,112,114,115,116,117,119,120,121,122,123,125,126,134,135,136,138,139,140,141,142,143,144,146,148,149,150,167,168,169,170,171,172,179,180,181,185,193,194,195,197,198,199,200,201,202,203,205,206,214,215,216,218,219,220,221,222,223,224,226,227,235,236,237,239,240,241,242,243,244,245,247,248,249,256,257,258,263,265,268,269,277,278,279,281,282,283,284,288,291,293,294,295,303,304,305,307,308,309,314,315) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,4,42,44,45,47,48,49,50,51,52,54,55,56,58,59,60,67,68,69,105,106,107,108,109,111,112,113,121,122,123,125,126,127,128,130,131,132,133,135,136,137,139,140,141,142,143,145,146,147,164,165,166,167,176,177,178,182,190,191,192,194,195,196,197,198,199,200,202,203,211,212,213,215,216,217,218,219,220,221,223,224,232,233,234,236,237,238,239,240,241,242,244,245,246,253,254,255,260,269,271,275,277,281,282,290,291,292,294,295,296,297,298) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "⚠️ 파일 output3515.csv 처리 중 오류 발생: Execution failed on sql '\n",
      "    WITH name_cte AS (\n",
      "        SELECT DISTINCT \"character.name\" AS name\n",
      "        FROM output\n",
      "        WHERE \"character.teamId\" IN (\n",
      "            SELECT DISTINCT \"character.teamId\"\n",
      "            FROM output\n",
      "            WHERE \"character.accountId\" IN (\n",
      "                SELECT DISTINCT substr(teamKillers_AccountId, 3, 40) FROM output\n",
      "            )\n",
      "        )\n",
      "    )\n",
      "    \n",
      "    SELECT \"attacker.name\" AS name, COUNT(damage) AS damage_count, damageTypeCategory\n",
      "    FROM output\n",
      "    WHERE \"attacker.teamId\" = \"victim.teamId\"\n",
      "      AND \"attacker.name\" IN (SELECT name FROM name_cte)\n",
      "      AND \"victim.name\" IN (SELECT name FROM name_cte)\n",
      "      AND \"attacker.name\" != \"victim.name\"\n",
      "    GROUP BY \"attacker.name\", damageTypeCategory\n",
      "    ': no such column: damage\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,47,48,49,50,51,52,53,54,55,57,58,59,61,62,63,70,71,72,144,265,268,269,277,278,279,281,282,283,284,288,290,295,296) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,4,27,28,47,49,50,52,53,54,55,57,58,59,61,62,63,70,71,72,108,109,111,112,113,121,122,123,125,126,127,128,130,131,132,133,135,136,137,138,139,140,141,143,148,149,150,167,168,169,170,171,172,179,180,181,185,193,194,195,197,198,199,200,201,202,203,205,206,214,215,216,218,219,220,221,222,223,224,226,227,235,236,237,239,240,241,242,243,244,245,247,256,257,258,263,266,268,269,277,278,279,281,282,283,284,285,289,291,292,300,301,302,304,305,306,309,312,313) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,4,17,52,53,54,55,57,58,59,61,62,63,70,71,72,143,144,145,146,149,150,151,168,169,170,171,172,173,180,181,182,186,194,195,196,198,199,200,201,202,203,204,206,207,215,216,217,219,220,221,222,223,224,225,227,228,236,237,238,240,241,242,243,244,245,246,248,257,258,259,264,266,267,268,276,277,278,280,281,282,284,288,290,291,299,300,301,303,304,305,308,311,312,313) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,4,59,60,61,62,64,65,66,68,69,70,77,78,79,110,111,113,114,115,123,124,125,127,128,129,130,131,132,133,135,137,138,139,140,142,143,144,146,147,148,165,166,167,168,177,178,179,183,184,185,186,188,189,197,198,199,201,202,203,204,205,206,207,209,210,218,219,220,222,223,224,225,226,227,228,230,239,240,241,245,253,254,255,257,258,259,261,267,268,269,277,278,279,281,282,283,286,290,293,294,302,303,304,306,307,308,310,311,312) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,4,44,46,47,52,53,54,55,57,58,59,61,62,63,70,71,72,116,118,119,121,122,123,131,132,133,135,136,137,138,139,140,141,143,145,146,147,164,165,166,167,168,169,176,177,178,182,190,191,192,194,195,196,197,198,199,200,202,203,211,212,213,215,216,217,218,219,220,221,223,224,232,233,234,236,237,238,239,240,241,242,244,245,246,253,254,255,260,262,268,269,277,278,279,281,282,283,284,288,291,292,300,301,302,304,305,306,308,313,314) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,4,42,44,45,52,53,54,55,57,58,59,108,109,111,112,113,121,122,123,125,126,127,128,130,131,132,133,135,136,137,138,143,144,145,146,148,149,150,167,168,169,170,171,172,179,180,181,185,193,194,195,197,198,199,200,201,202,203,205,206,214,215,216,218,219,220,221,222,223,224,226,227,235,236,237,239,240,241,242,243,244,245,247,248,249,256,257,258,263,265,268,269,277,278,279,281,282,283,284,286,290,291,292,300,301,302,304,305,306,311,314,315) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "⚠️ 파일 output3523.csv 처리 중 오류 발생: Execution failed on sql '\n",
      "    WITH name_cte AS (\n",
      "        SELECT DISTINCT \"character.name\" AS name\n",
      "        FROM output\n",
      "        WHERE \"character.teamId\" IN (\n",
      "            SELECT DISTINCT \"character.teamId\"\n",
      "            FROM output\n",
      "            WHERE \"character.accountId\" IN (\n",
      "                SELECT DISTINCT substr(teamKillers_AccountId, 3, 40) FROM output\n",
      "            )\n",
      "        )\n",
      "    )\n",
      "    \n",
      "    SELECT \"attacker.name\" AS name, COUNT(damage) AS damage_count, damageTypeCategory\n",
      "    FROM output\n",
      "    WHERE \"attacker.teamId\" = \"victim.teamId\"\n",
      "      AND \"attacker.name\" IN (SELECT name FROM name_cte)\n",
      "      AND \"victim.name\" IN (SELECT name FROM name_cte)\n",
      "      AND \"attacker.name\" != \"victim.name\"\n",
      "    GROUP BY \"attacker.name\", damageTypeCategory\n",
      "    ': no such column: damage\n",
      "⚠️ 파일 output3524.csv 처리 중 오류 발생: Execution failed on sql '\n",
      "    WITH name_cte AS (\n",
      "        SELECT DISTINCT \"character.name\" AS name\n",
      "        FROM output\n",
      "        WHERE \"character.teamId\" IN (\n",
      "            SELECT DISTINCT \"character.teamId\"\n",
      "            FROM output\n",
      "            WHERE \"character.accountId\" IN (\n",
      "                SELECT DISTINCT substr(teamKillers_AccountId, 3, 40) FROM output\n",
      "            )\n",
      "        )\n",
      "    )\n",
      "    \n",
      "    SELECT \"attacker.name\" AS name, COUNT(damage) AS damage_count, damageTypeCategory\n",
      "    FROM output\n",
      "    WHERE \"attacker.teamId\" = \"victim.teamId\"\n",
      "      AND \"attacker.name\" IN (SELECT name FROM name_cte)\n",
      "      AND \"victim.name\" IN (SELECT name FROM name_cte)\n",
      "      AND \"attacker.name\" != \"victim.name\"\n",
      "    GROUP BY \"attacker.name\", damageTypeCategory\n",
      "    ': no such column: damage\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,20,42,44,45,49,50,51,52,54,55,56,58,59,60,67,68,69,116,144,148,149,150,167,168,169,170,171,172,179,180,181,185,193,194,195,197,198,199,200,201,202,203,205,206,214,215,216,218,219,220,221,222,223,224,226,227,235,236,237,239,240,241,242,243,244,245,247,248,249,256,257,258,263,266,269,273,280,281,282) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,4,52,53,54,55,57,58,59,141,143,144,145,146,148,149,150,167,168,169,170,171,172,179,180,181,185,193,194,195,197,198,199,200,201,202,203,205,206,214,215,216,218,219,220,221,222,223,224,226,227,235,236,237,239,240,241,242,243,244,245,247,248,249,256,257,258,266,268,269,277,278,279,281,282,283,285,289,291,293,296,297,305,306,307,309,310,311,312,313) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,4,42,44,45,49,50,51,52,54,55,56,105,106,107,108,110,111,112,113,115,116,117,118,122,124,125,127,128,136,137,138,140,141,142,144,145,146,147,148,150,151,152,169,170,171,172,173,174,181,182,183,187,195,196,197,199,200,201,202,203,204,205,207,208,216,217,218,220,221,222,223,224,225,226,228,229,237,238,239,241,242,243,244,245,246,247,249,250,251,258,259,260,266,269,270,278,279,280,282,283,284,287,291,293,295,296,304,305,306,308,309,310,313,314) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,4,17,38,52,53,54,55,57,58,59,61,62,63,70,71,72,136,148,149,150,167,168,169,170,179,180,181,185,193,194,195,197,198,199,200,201,202,203,205,206,214,215,216,218,219,220,221,222,223,224,226,227,235,236,237,239,240,241,242,243,244,245,247,256,257,258,265,267,268,269,277,278,279,281,282,283,284,287,291,293,296,297,305,306,307,309,310,311,314,315) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,20,26,27,28,29,31,32,33,35,36,37,44,45,46,83,84,129,135,136,138,139,140,141,142,143,144,147,149,150,151,168,169,170,171,180,181,182,186,194,195,196,198,199,200,201,202,203,204,206,207,215,216,217,219,220,221,222,223,224,225,227,228,236,237,238,240,241,242,243,244,245,246,248,257,258,259,263,266,271,272,280,281,282,284,285,286,287,291,295,296,297) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,4,42,44,45,52,53,54,55,57,58,59,61,62,63,70,71,72,142,143,144,145,146,148,150,151,152,169,170,171,172,173,174,181,182,183,187,195,196,197,199,200,201,202,203,204,205,207,208,216,217,218,220,221,222,223,224,225,226,228,229,237,238,239,241,242,243,244,245,246,247,249,250,251,258,259,260,267,268,269,277,278,279,281,282,283,284,288,290,291,292,300,301,302,304,305,306,311,312) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,17,50,51,52,53,54,55,57,58,59,61,62,63,70,71,72,124,168,169,245,246,260,266,268,269,277,278,279,281,282,283,284,288,290,296,297) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,4,26,42,44,45,46,49,50,51,52,54,55,56,58,59,60,67,68,69,108,120,122,123,125,126,134,135,136,138,139,140,142,143,145,146,147,164,165,166,167,168,169,176,177,178,182,183,185,187,188,196,197,198,200,201,202,203,204,205,206,208,209,217,218,219,221,222,223,224,225,226,227,229,230,231,238,239,240,245,247,250,252,256,258,260,261,269,270,271,273,274,275,278,279) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,20,44,46,47,49,50,51,52,54,55,56,58,59,60,67,68,69,106,107,142,144,145,146,147,149,150,151,168,169,170,171,180,181,182,186,194,195,196,198,199,200,201,202,203,204,206,207,215,216,217,219,220,221,222,223,224,225,227,228,236,237,238,240,241,242,243,244,245,246,248,257,258,259,264,268,269,273,275,276,284,285,286,288,289,290,293,295,296) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,23,24,25,28,44,46,47,48,50,51,52,53,54,55,57,58,59,61,62,63,70,71,72,116,138,139,140,141,147,148,150,151,152,169,170,171,172,173,174,181,182,183,187,195,196,197,199,200,201,202,203,204,205,207,208,216,217,218,220,221,222,223,224,225,226,228,229,237,238,239,241,242,243,244,245,246,247,249,250,251,258,259,260,265,269,273,276,277,278,286,287,288,290,291,292,295,296) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,4,24,25,44,46,47,52,53,54,55,57,58,59,61,62,63,70,71,72,108,112,114,115,116,117,119,120,121,122,124,126,127,128,136,137,138,140,141,142,143,144,145,146,148,149,150,167,168,169,170,171,172,179,180,181,185,193,194,195,197,198,199,200,201,202,203,205,206,214,215,216,218,219,220,221,222,223,224,226,227,235,236,237,239,240,241,242,243,244,245,247,256,257,258,263,265,267,268,276,277,278,280,281,282,287,291,294,295,296,304,305,306,308,309,310,313,314) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,17,42,44,45,52,53,54,55,57,58,59,108,112,113,115,116,124,125,126,127,128,129,130,131,133,134,135,136,138,139,140,142,143,145,146,147,164,165,166,167,168,169,176,177,178,182,183,184,185,187,188,196,197,198,200,201,202,203,204,205,206,208,209,217,218,219,221,222,223,224,225,226,227,229,230,231,238,239,240,245,246,250,253,257,259,264,265,273,274,275,277,278,279,280,281,282,283,291,292,293,295,296,297,298,306,307,308,310,311,312,313,314) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "⚠️ 파일 output3537.csv 처리 중 오류 발생: Execution failed on sql '\n",
      "    WITH name_cte AS (\n",
      "        SELECT DISTINCT \"character.name\" AS name\n",
      "        FROM output\n",
      "        WHERE \"character.teamId\" IN (\n",
      "            SELECT DISTINCT \"character.teamId\"\n",
      "            FROM output\n",
      "            WHERE \"character.accountId\" IN (\n",
      "                SELECT DISTINCT substr(teamKillers_AccountId, 3, 40) FROM output\n",
      "            )\n",
      "        )\n",
      "    )\n",
      "    \n",
      "    SELECT \"attacker.name\" AS name, COUNT(damage) AS damage_count, damageTypeCategory\n",
      "    FROM output\n",
      "    WHERE \"attacker.teamId\" = \"victim.teamId\"\n",
      "      AND \"attacker.name\" IN (SELECT name FROM name_cte)\n",
      "      AND \"victim.name\" IN (SELECT name FROM name_cte)\n",
      "      AND \"attacker.name\" != \"victim.name\"\n",
      "    GROUP BY \"attacker.name\", damageTypeCategory\n",
      "    ': no such column: damage\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,4,42,44,45,52,53,54,55,57,58,59,108,109,111,112,113,121,122,123,125,126,127,128,129,130,131,133,135,136,137,154,155,156,157,158,159,166,167,168,172,180,181,182,184,185,186,187,188,189,190,192,193,201,202,203,205,206,207,208,209,210,211,213,214,222,223,224,226,227,228,229,230,231,232,234,235,236,243,244,245,249,251,252,253,254,256,257,258,261,266,268,269,277,278,279,281,282,283,284,288,289,292,293,301,302,303,305,306,307,309,313,314) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,4,42,44,45,47,48,49,50,51,52,53,54,55,57,58,59,61,62,63,70,71,72,108,109,111,112,113,121,122,123,125,126,127,128,130,131,132,133,135,136,137,141,143,144,145,146,149,151,152,153,170,171,172,173,174,175,182,183,184,188,189,190,191,193,194,202,203,204,206,207,208,209,210,211,212,214,215,223,224,225,227,228,229,230,231,232,233,235,236,237,244,245,246,251,253,254,262,263,264,266,267,268,269,277,278,279,281,282,283,286,290,295,297,298,299) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,4,17,38,42,44,45,49,50,51,52,53,54,55,57,58,59,61,62,63,70,71,72,108,110,111,112,113,115,116,117,118,122,123,125,126,134,135,136,137,138,139,140,141,144,145,146,147,148,150,151,152,169,170,171,172,173,174,181,182,183,187,195,196,197,199,200,201,202,203,204,205,207,208,216,217,218,220,221,222,223,224,225,226,228,229,237,238,239,241,242,243,244,245,246,247,249,258,259,260,265,269,270,278,279,280,282,283,284,285,289,292,293,294,295,303,304,305,307,308,309,312,313) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,4,24,25,49,50,51,52,53,54,55,57,58,59,61,62,63,70,71,72,112,133,134,135,136,146,148,149,150,167,168,169,170,171,172,179,180,181,185,193,194,195,197,198,199,200,201,202,203,205,206,214,215,216,218,219,220,221,222,223,224,226,227,235,236,237,239,240,241,242,243,244,245,247,248,249,256,257,258,263,264,265,273,274,275,277,278,279,281,283,287,290,296,297) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,20,26,27,28,29,31,32,33,35,36,37,44,45,46,118,119,120,134,143,145,146,147,164,165,166,167,168,169,176,177,178,182,190,191,192,194,195,196,197,198,199,200,202,203,211,212,213,215,216,217,218,219,220,221,223,224,232,233,234,236,237,238,239,240,241,242,244,245,246,253,254,255,260,262,269,273,276,277,285,286,287,289,290,291,292,294,295,296) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,4,44,46,47,49,50,51,52,54,55,56,105,106,107,108,109,111,112,113,121,122,123,125,126,127,128,130,132,133,134,135,137,138,139,142,143,144,145,147,148,149,166,167,168,169,170,171,178,179,180,184,192,193,194,196,197,198,199,200,201,202,204,205,213,214,215,217,218,219,220,221,222,223,225,226,234,235,236,238,239,240,241,242,243,244,246,247,248,255,256,257,265,269,270,271,279,280,281,283,284,285,286,290,292,296,297,305,306,307,309,310,311,312,313,314) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,4,42,44,45,47,48,49,50,51,52,53,54,55,57,58,59,61,62,63,70,71,72,108,110,111,112,113,115,116,117,118,119,121,122,123,131,132,133,135,136,137,138,141,142,143,144,145,147,148,149,166,167,168,169,170,171,178,179,180,184,192,193,194,196,197,198,199,200,201,202,204,205,213,214,215,217,218,219,220,221,222,223,225,226,234,235,236,238,239,240,241,242,243,244,246,247,248,255,256,257,262,270,271,279,280,281,283,284,285,287,291,293,296,297,305,306,307,309,310,311,313,314,315) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,4,42,44,45,48,49,52,53,54,55,57,58,59,108,109,111,112,113,121,122,123,125,126,127,131,133,134,135,136,138,139,140,141,142,143,144,146,149,150,151,168,169,170,171,172,173,180,181,182,186,194,195,196,198,199,200,201,202,203,204,206,207,215,216,217,219,220,221,222,223,224,225,227,228,236,237,238,240,241,242,243,244,245,246,248,249,250,257,258,259,264,266,268,269,277,278,279,281,282,283,286,290,291,292,300,301,302,304,305,306,308,313,314,315) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "⚠️ 파일 output3546.csv 처리 중 오류 발생: Execution failed on sql '\n",
      "    WITH name_cte AS (\n",
      "        SELECT DISTINCT \"character.name\" AS name\n",
      "        FROM output\n",
      "        WHERE \"character.teamId\" IN (\n",
      "            SELECT DISTINCT \"character.teamId\"\n",
      "            FROM output\n",
      "            WHERE \"character.accountId\" IN (\n",
      "                SELECT DISTINCT substr(teamKillers_AccountId, 3, 40) FROM output\n",
      "            )\n",
      "        )\n",
      "    )\n",
      "    \n",
      "    SELECT \"attacker.name\" AS name, COUNT(damage) AS damage_count, damageTypeCategory\n",
      "    FROM output\n",
      "    WHERE \"attacker.teamId\" = \"victim.teamId\"\n",
      "      AND \"attacker.name\" IN (SELECT name FROM name_cte)\n",
      "      AND \"victim.name\" IN (SELECT name FROM name_cte)\n",
      "      AND \"attacker.name\" != \"victim.name\"\n",
      "    GROUP BY \"attacker.name\", damageTypeCategory\n",
      "    ': no such column: damage\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,4,42,44,45,52,53,54,55,57,58,59,61,62,63,70,71,72,108,110,111,112,113,115,116,117,118,119,121,122,123,131,132,133,135,136,137,138,139,140,141,146,148,149,150,167,168,169,170,171,172,179,180,181,185,193,194,195,197,198,199,200,201,202,203,205,206,214,215,216,218,219,220,221,222,223,224,226,227,235,236,237,239,240,241,242,243,244,245,247,256,257,258,263,265,268,269,277,278,279,281,282,283,284,288,293,296,297,305,306,307,309,310,311,313,314) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,4,44,46,47,49,50,51,52,54,55,56,135,136,137,141,142,143,144,146,149,150,151,152,169,170,171,172,173,174,181,182,183,187,195,196,197,199,200,201,202,203,204,205,207,208,216,217,218,220,221,222,223,224,225,226,228,229,237,238,239,241,242,243,244,245,246,247,249,250,251,258,259,260,265,267,268,276,277,278,280,281,282,286,290,291,294,295,303,304,305,307,308,309,312,313,314) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,4,42,44,45,49,50,51,52,54,55,56,116,200,221,227,228,242,247,250,252,256,258,259,267,268,269,271,272,273,277,278,279) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,4,17,42,44,45,47,48,50,51,52,53,54,55,57,58,59,61,62,63,70,71,72,108,109,111,112,113,121,122,123,124,125,126,127,128,130,131,132,133,135,136,137,141,142,143,144,146,148,149,150,167,168,169,170,171,172,179,180,181,185,193,194,195,197,198,199,200,201,202,203,205,206,214,215,216,218,219,220,221,222,223,224,226,227,235,236,237,239,240,241,242,243,244,245,247,248,249,256,257,258,263,265,267,268,276,277,278,280,281,282,284,288,291,294,296,297) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,4,59,60,61,62,64,65,66,68,69,70,77,78,79,110,112,113,114,115,117,118,119,120,121,123,124,125,133,134,135,137,138,139,140,141,142,143,146,147,148,149,166,167,168,169,178,179,180,184,192,193,194,196,197,198,199,200,201,202,204,205,213,214,215,217,218,219,220,221,222,223,225,226,234,235,236,238,239,240,241,242,243,244,246,255,256,257,263,265,266,274,275,276,278,279,280,286,290,295,297,298) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "⚠️ 파일 output3552.csv 처리 중 오류 발생: Execution failed on sql '\n",
      "    WITH name_cte AS (\n",
      "        SELECT DISTINCT \"character.name\" AS name\n",
      "        FROM output\n",
      "        WHERE \"character.teamId\" IN (\n",
      "            SELECT DISTINCT \"character.teamId\"\n",
      "            FROM output\n",
      "            WHERE \"character.accountId\" IN (\n",
      "                SELECT DISTINCT substr(teamKillers_AccountId, 3, 40) FROM output\n",
      "            )\n",
      "        )\n",
      "    )\n",
      "    \n",
      "    SELECT \"attacker.name\" AS name, COUNT(damage) AS damage_count, damageTypeCategory\n",
      "    FROM output\n",
      "    WHERE \"attacker.teamId\" = \"victim.teamId\"\n",
      "      AND \"attacker.name\" IN (SELECT name FROM name_cte)\n",
      "      AND \"victim.name\" IN (SELECT name FROM name_cte)\n",
      "      AND \"attacker.name\" != \"victim.name\"\n",
      "    GROUP BY \"attacker.name\", damageTypeCategory\n",
      "    ': no such column: damage\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,4,24,25,47,49,50,52,53,54,55,57,58,59,61,108,110,111,112,113,115,116,117,118,119,121,122,123,131,132,133,135,136,137,138,139,140,141,143,145,146,147,164,165,166,167,168,169,176,177,178,182,190,191,192,194,195,196,197,198,199,200,202,203,211,212,213,215,216,217,218,219,220,221,223,224,232,233,234,236,237,238,239,240,241,242,244,245,246,253,254,255,263,264,272,273,274,276,277,278,280,283,286,287,291,293,294,295,303,304,305,307,308,309,314,315) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,17,52,53,54,55,57,58,59,61,62,63,70,71,72,124,148,149,150,167,168,169,170,171,172,179,180,181,185,193,194,195,197,198,199,200,201,202,203,205,206,214,215,216,218,219,220,221,222,223,224,226,227,235,236,237,239,240,241,242,243,244,245,247,256,257,258,263,265,267,269,270,278,279,280,282,283,284,285,289,292,293,294) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,4,44,46,47,49,50,51,52,53,54,55,57,58,59,108,110,111,112,113,115,116,117,118,119,121,122,123,131,132,133,135,136,137,139,140,142,143,144,145,147,148,149,166,167,168,169,170,171,178,179,180,184,192,193,194,196,197,198,199,200,201,202,204,205,213,214,215,217,218,219,220,221,222,223,225,226,234,235,236,238,239,240,241,242,243,244,246,247,248,255,256,257,262,265,266,274,275,276,278,279,280,287,291,293,294,302,303,304,306,307,308,310,313,314) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,4,42,44,45,47,48,49,50,51,52,54,55,56,58,105,106,107,108,112,114,115,116,117,119,120,121,122,123,125,126,134,135,136,138,139,140,141,144,145,146,147,148,151,152,153,170,171,172,173,174,175,182,183,184,188,196,197,198,200,201,202,203,204,205,206,208,209,217,218,219,221,222,223,224,225,226,227,229,230,238,239,240,242,243,244,245,246,247,248,250,251,252,259,260,261,266,267,275,276,277,279,280,281,283,284,288,289,290,298,299,300,302,303,304,307,313,314) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,4,42,44,45,49,50,51,52,53,54,55,57,58,59,107,108,110,111,112,120,121,122,124,125,126,128,130,131,132,133,135,136,137,141,143,144,145,146,148,149,150,167,168,169,170,171,172,179,180,181,185,193,194,195,197,198,199,200,201,202,203,205,206,214,215,216,218,219,220,221,222,223,224,226,227,235,236,237,239,240,241,242,243,244,245,247,256,257,258,263,267,268,269,277,278,279,281,282,283,284,288,291,293,294,302,303,304,306,307,308,313,314) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,47,48,49,50,51,52,53,54,55,57,58,59,61,62,63,70,71,72,148,149,150,167,168,169,170,171,172,179,180,181,185,193,194,195,197,198,199,200,201,202,203,205,206,214,215,216,218,219,220,221,222,223,224,226,227,235,236,237,239,240,241,242,243,244,245,247,248,249,256,257,258,265,266,267,275,276,277,279,280,281,283,287,291,294,296,297,298) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,4,42,44,45,47,48,50,51,52,53,54,55,57,58,59,61,108,109,111,112,113,121,122,123,125,126,127,131,133,135,136,137,138,140,141,142,143,144,145,146,148,149,150,167,168,169,170,171,172,179,180,181,185,193,194,195,197,198,199,200,201,202,203,205,206,214,215,216,218,219,220,221,222,223,224,226,227,235,236,237,239,240,241,242,243,244,245,247,256,257,258,263,265,268,269,277,278,279,281,282,283,286,290,292,294,295,296,304,305,306,308,309,310,314,315) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,4,44,46,47,49,50,51,52,53,54,55,57,58,59,108,110,111,112,113,115,116,117,118,119,121,122,123,131,132,133,135,136,137,141,142,143,144,146,148,149,150,167,168,169,170,171,172,179,180,181,185,193,194,195,197,198,199,200,201,202,203,205,206,214,215,216,218,219,220,221,222,223,224,226,227,235,236,237,239,240,241,242,243,244,245,247,248,249,256,257,258,263,265,267,268,276,277,278,280,281,282,285,287,291,292,293,301,302,303,305,306,307,310,314,315) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,15,43,47,49,50,54,55,56,57,58,59,60,62,63,64,108,110,111,112,113,115,116,117,118,122,123,125,126,134,135,136,137,138,139,140,142,143,145,146,147,164,165,166,167,168,169,176,177,178,182,183,184,185,187,188,196,197,198,200,201,202,203,204,205,206,208,209,217,218,219,221,222,223,224,225,226,227,229,230,231,238,239,240,245,246,251,255,259,260,261,262,263,271,272,273,275,276,277,278,286,287,288,290,291,292,293,294,302,303,304,306,307,308,310,313,314) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,4,44,46,47,49,50,51,52,54,55,56,105,106,107,108,109,111,112,113,121,122,123,125,126,127,128,130,131,132,133,135,136,137,141,143,144,145,146,149,150,151,168,169,170,171,172,173,180,181,182,186,194,195,196,198,199,200,201,202,203,204,206,207,215,216,217,219,220,221,222,223,224,225,227,228,236,237,238,240,241,242,243,244,245,246,248,249,250,257,258,259,265,267,268,269,277,278,279,281,282,283,284,288,290,293,294,302,303,304,306,307,308,310,312,313) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,23,24,25,44,46,47,49,50,51,52,54,55,56,58,59,60,67,68,69,105,106,108,109,110,118,119,120,122,123,124,125,126,127,128,130,131,132,133,135,136,137,141,142,143,144,146,149,150,151,168,169,170,171,180,181,182,186,187,188,189,191,192,200,201,202,204,205,206,207,208,209,210,212,213,221,222,223,225,226,227,228,229,230,231,233,242,243,244,248,256,257,258,260,261,262,264,266,268,269,277,278,279,281,282,283,284,288,294,295,296) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,52,53,54,55,57,58,59,61,62,63,70,71,72,145,146,147,164,165,166,167,168,169,176,177,178,182,190,191,192,194,195,196,197,198,199,200,202,203,211,212,213,215,216,217,218,219,220,221,223,224,232,233,234,236,237,238,239,240,241,242,244,253,254,255,260,262,263,264,272,273,274,276,277,278,284,288,293,294) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "⚠️ 파일 output3564.csv 처리 중 오류 발생: Execution failed on sql '\n",
      "    WITH name_cte AS (\n",
      "        SELECT DISTINCT \"character.name\" AS name\n",
      "        FROM output\n",
      "        WHERE \"character.teamId\" IN (\n",
      "            SELECT DISTINCT \"character.teamId\"\n",
      "            FROM output\n",
      "            WHERE \"character.accountId\" IN (\n",
      "                SELECT DISTINCT substr(teamKillers_AccountId, 3, 40) FROM output\n",
      "            )\n",
      "        )\n",
      "    )\n",
      "    \n",
      "    SELECT \"attacker.name\" AS name, COUNT(damage) AS damage_count, damageTypeCategory\n",
      "    FROM output\n",
      "    WHERE \"attacker.teamId\" = \"victim.teamId\"\n",
      "      AND \"attacker.name\" IN (SELECT name FROM name_cte)\n",
      "      AND \"victim.name\" IN (SELECT name FROM name_cte)\n",
      "      AND \"attacker.name\" != \"victim.name\"\n",
      "    GROUP BY \"attacker.name\", damageTypeCategory\n",
      "    ': no such column: damage\n",
      "⚠️ 파일 output3565.csv 처리 중 오류 발생: Execution failed on sql '\n",
      "    WITH name_cte AS (\n",
      "        SELECT DISTINCT \"character.name\" AS name\n",
      "        FROM output\n",
      "        WHERE \"character.teamId\" IN (\n",
      "            SELECT DISTINCT \"character.teamId\"\n",
      "            FROM output\n",
      "            WHERE \"character.accountId\" IN (\n",
      "                SELECT DISTINCT substr(teamKillers_AccountId, 3, 40) FROM output\n",
      "            )\n",
      "        )\n",
      "    )\n",
      "    \n",
      "    SELECT \"attacker.name\" AS name, COUNT(damage) AS damage_count, damageTypeCategory\n",
      "    FROM output\n",
      "    WHERE \"attacker.teamId\" = \"victim.teamId\"\n",
      "      AND \"attacker.name\" IN (SELECT name FROM name_cte)\n",
      "      AND \"victim.name\" IN (SELECT name FROM name_cte)\n",
      "      AND \"attacker.name\" != \"victim.name\"\n",
      "    GROUP BY \"attacker.name\", damageTypeCategory\n",
      "    ': no such column: damage\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,4,42,44,45,47,48,50,51,52,53,54,55,57,58,59,61,62,63,70,71,72,108,109,111,112,113,121,122,123,125,126,127,131,133,134,135,136,138,139,140,141,142,143,144,146,148,149,150,167,168,169,170,171,172,179,180,181,185,193,194,195,197,198,199,200,201,202,203,205,206,214,215,216,218,219,220,221,222,223,224,226,227,235,236,237,239,240,241,242,243,244,245,247,248,249,256,257,258,263,265,267,268,276,277,278,280,281,282,287,291,293,294,302,303,304,306,307,308,309,313,314,315) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,23,44,46,47,49,50,51,52,54,55,56,58,141,166,167,180,188,189,190,192,193,194,195,216,237,243,244,258,263,269,271,272,280,281,282,284,285,286,287,291,294,296,297) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,4,42,44,45,47,48,49,50,51,52,54,55,56,58,59,60,67,68,69,105,106,107,108,112,114,115,116,117,119,120,121,122,123,125,126,134,135,136,138,139,140,141,142,143,144,146,148,149,150,167,168,169,170,171,172,179,180,181,185,193,194,195,197,198,199,200,201,202,203,205,206,214,215,216,218,219,220,221,222,223,224,226,227,235,236,237,239,240,241,242,243,244,245,247,248,249,256,257,258,263,265,268,269,277,278,279,281,282,283,284,285,286,294,295,296,298,299,300,301,305,312,314,315) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,4,42,44,45,49,50,51,52,53,54,55,57,58,59,107,108,110,111,112,120,121,122,124,125,126,131,132,133,134,136,138,139,140,141,143,144,145,146,148,149,150,167,168,169,170,171,172,179,180,181,185,193,194,195,197,198,199,200,201,202,203,205,206,214,215,216,218,219,220,221,222,223,224,226,227,235,236,237,239,240,241,242,243,244,245,247,256,257,258,265,267,269,270,278,279,280,282,283,284,286,290,292,294,295,296) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,20,42,44,45,47,48,49,50,51,52,54,55,56,58,59,60,67,68,69,105,106,107,116,118,122,123,125,126,134,135,136,138,139,140,141,142,143,144,146,148,149,150,167,168,169,170,179,180,181,185,193,194,195,197,198,199,200,201,202,203,205,206,214,215,216,218,219,220,221,222,223,224,226,227,235,236,237,239,240,241,242,243,244,245,247,248,249,256,257,258,263,265,268,272,273,274,282,283,284,286,287,288,296,297,298) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,4,31,32,40,41,42,44,45,46,47,49,50,51,52,53,54,56,57,58,59,60,61,62,64,65,66,68,69,70,77,78,79,112,114,115,116,117,119,120,121,122,123,125,126,127,135,136,137,139,140,141,142,143,144,145,147,148,149,166,167,168,169,178,179,180,184,192,193,194,196,197,198,199,200,201,202,204,205,213,214,215,217,218,219,220,221,222,223,225,226,234,235,236,238,239,240,241,242,243,244,246,255,256,257,263,265,266,267,275,276,277,279,280,281,286,290,295,296,297) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "⚠️ 파일 output3572.csv 처리 중 오류 발생: Execution failed on sql '\n",
      "    WITH name_cte AS (\n",
      "        SELECT DISTINCT \"character.name\" AS name\n",
      "        FROM output\n",
      "        WHERE \"character.teamId\" IN (\n",
      "            SELECT DISTINCT \"character.teamId\"\n",
      "            FROM output\n",
      "            WHERE \"character.accountId\" IN (\n",
      "                SELECT DISTINCT substr(teamKillers_AccountId, 3, 40) FROM output\n",
      "            )\n",
      "        )\n",
      "    )\n",
      "    \n",
      "    SELECT \"attacker.name\" AS name, COUNT(damage) AS damage_count, damageTypeCategory\n",
      "    FROM output\n",
      "    WHERE \"attacker.teamId\" = \"victim.teamId\"\n",
      "      AND \"attacker.name\" IN (SELECT name FROM name_cte)\n",
      "      AND \"victim.name\" IN (SELECT name FROM name_cte)\n",
      "      AND \"attacker.name\" != \"victim.name\"\n",
      "    GROUP BY \"attacker.name\", damageTypeCategory\n",
      "    ': no such column: damage\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,4,24,25,44,46,47,49,50,51,52,54,55,56,58,59,60,67,68,69,108,110,111,112,113,115,116,117,120,121,123,124,125,133,134,135,137,138,139,144,145,146,147,148,150,152,153,154,171,172,173,174,175,176,183,184,185,189,197,198,199,201,202,203,204,205,206,207,209,210,218,219,220,222,223,224,225,226,227,228,230,231,239,240,241,243,244,245,246,247,248,249,251,252,253,260,261,262,269,270,271,279,280,281,283,284,285,286,290,294,297,298,306,307,308,310,311,312,313,314) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,4,42,44,45,47,48,49,50,51,52,53,54,55,57,58,59,61,62,63,70,71,72,108,112,114,115,116,117,119,120,121,122,123,125,126,134,135,136,138,139,140,141,142,143,144,146,150,151,152,169,170,171,172,173,174,181,182,183,187,195,196,197,199,200,201,202,203,204,205,207,208,216,217,218,220,221,222,223,224,225,226,228,229,237,238,239,241,242,243,244,245,246,247,249,250,251,258,259,260,265,268,269,277,278,279,281,282,283,285,288,292,293,294,302,303,304,306,307,308,311,313,314) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,4,24,25,44,46,47,49,50,51,52,54,55,56,58,125,126,127,131,133,134,135,136,138,139,140,141,143,144,145,146,148,149,150,167,168,169,170,171,172,179,180,181,185,193,194,195,197,198,199,200,201,202,203,205,206,214,215,216,218,219,220,221,222,223,224,226,227,235,236,237,239,240,241,242,243,244,245,247,248,249,256,257,258,263,266,268,269,277,278,279,281,282,283,284,288,289,290,291,299,300,301,303,304,305,308,312,313) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,56,57,58,59,61,62,63,65,66,67,74,75,76,118,140,141,142,143,145,146,147,164,165,166,167,176,177,178,182,190,191,192,194,195,196,197,198,199,200,202,203,211,212,213,215,216,217,218,219,220,221,223,224,232,233,234,236,237,238,239,240,241,242,244,253,254,255,260,262,264,265,266,274,275,276,278,279,280,285,289,290,291,292) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,4,59,60,61,62,64,65,66,68,69,70,77,78,79,110,111,113,114,115,123,124,125,127,128,129,130,132,133,134,135,137,138,139,145,146,147,148,150,151,152,169,170,171,172,173,174,181,182,183,187,195,196,197,199,200,201,202,203,204,205,207,208,216,217,218,220,221,222,223,224,225,226,228,229,237,238,239,241,242,243,244,245,246,247,249,258,259,260,265,268,269,270,278,279,280,282,283,284,287,291,293,295,296,297) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,4,42,44,45,47,48,49,50,51,52,53,54,55,57,58,59,61,62,63,70,71,72,108,109,111,112,113,121,122,123,125,126,127,131,133,134,135,136,138,139,140,141,142,143,144,146,147,155,156,157,159,160,161,162,165,167,168,169,186,187,188,189,190,191,198,199,200,204,212,213,214,216,217,218,219,220,221,222,224,225,233,234,235,237,238,239,240,241,242,243,245,246,254,255,256,258,259,260,261,262,263,264,266,267,268,275,276,277,282,284,288,290,297,298,306,307,308,310,311,312,313,314,315) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "⚠️ 파일 output3580.csv 처리 중 오류 발생: Execution failed on sql '\n",
      "    WITH name_cte AS (\n",
      "        SELECT DISTINCT \"character.name\" AS name\n",
      "        FROM output\n",
      "        WHERE \"character.teamId\" IN (\n",
      "            SELECT DISTINCT \"character.teamId\"\n",
      "            FROM output\n",
      "            WHERE \"character.accountId\" IN (\n",
      "                SELECT DISTINCT substr(teamKillers_AccountId, 3, 40) FROM output\n",
      "            )\n",
      "        )\n",
      "    )\n",
      "    \n",
      "    SELECT \"attacker.name\" AS name, COUNT(damage) AS damage_count, damageTypeCategory\n",
      "    FROM output\n",
      "    WHERE \"attacker.teamId\" = \"victim.teamId\"\n",
      "      AND \"attacker.name\" IN (SELECT name FROM name_cte)\n",
      "      AND \"victim.name\" IN (SELECT name FROM name_cte)\n",
      "      AND \"attacker.name\" != \"victim.name\"\n",
      "    GROUP BY \"attacker.name\", damageTypeCategory\n",
      "    ': no such column: damage\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,4,17,24,25,40,44,46,47,49,50,51,52,53,54,55,57,58,59,61,62,63,70,71,72,108,110,111,112,113,115,116,117,118,119,121,122,123,131,132,133,134,135,136,137,139,140,146,147,148,149,151,152,153,170,171,172,173,174,175,182,183,184,188,196,197,198,200,201,202,203,204,205,206,208,209,217,218,219,221,222,223,224,225,226,227,229,230,238,239,240,242,243,244,245,246,247,248,250,259,260,261,266,268,269,277,278,279,281,282,283,285,289,291,295,296,297) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "⚠️ 파일 output3582.csv 처리 중 오류 발생: Execution failed on sql '\n",
      "    WITH name_cte AS (\n",
      "        SELECT DISTINCT \"character.name\" AS name\n",
      "        FROM output\n",
      "        WHERE \"character.teamId\" IN (\n",
      "            SELECT DISTINCT \"character.teamId\"\n",
      "            FROM output\n",
      "            WHERE \"character.accountId\" IN (\n",
      "                SELECT DISTINCT substr(teamKillers_AccountId, 3, 40) FROM output\n",
      "            )\n",
      "        )\n",
      "    )\n",
      "    \n",
      "    SELECT \"attacker.name\" AS name, COUNT(damage) AS damage_count, damageTypeCategory\n",
      "    FROM output\n",
      "    WHERE \"attacker.teamId\" = \"victim.teamId\"\n",
      "      AND \"attacker.name\" IN (SELECT name FROM name_cte)\n",
      "      AND \"victim.name\" IN (SELECT name FROM name_cte)\n",
      "      AND \"attacker.name\" != \"victim.name\"\n",
      "    GROUP BY \"attacker.name\", damageTypeCategory\n",
      "    ': no such column: damage\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,4,42,44,45,47,48,49,50,51,52,53,54,55,57,58,59,128,130,131,132,133,135,136,137,138,139,140,141,143,145,146,147,164,165,166,167,168,169,176,177,178,182,190,191,192,194,195,196,197,198,199,200,202,203,211,212,213,215,216,217,218,219,220,221,223,224,232,233,234,236,237,238,239,240,241,242,244,245,246,253,254,255,260,262,266,267,275,276,277,279,280,281,289,293,295,297,298,299) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,4,26,27,28,29,31,32,33,35,93,132,133,135,136,137,154,155,156,157,166,167,168,172,173,175,177,178,186,187,188,190,191,192,193,194,195,196,198,199,207,208,209,211,212,213,214,215,216,217,219,220,221,228,229,230,235,238,239,241,242,243,245,249,251,255,259,264,265) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,4,24,25,44,46,47,49,50,51,52,53,54,55,57,58,59,108,109,111,112,113,121,122,123,125,126,127,128,130,131,132,133,135,136,137,145,146,147,148,149,151,154,155,156,173,174,175,176,177,178,185,186,187,191,192,193,194,196,197,205,206,207,209,210,211,212,213,214,215,217,218,226,227,228,230,231,232,233,234,235,236,238,239,240,247,248,249,253,261,262,263,265,266,267,269,270,271,279,280,281,283,284,285,286,290,292,295,298,299) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "⚠️ 파일 output3586.csv 처리 중 오류 발생: Execution failed on sql '\n",
      "    WITH name_cte AS (\n",
      "        SELECT DISTINCT \"character.name\" AS name\n",
      "        FROM output\n",
      "        WHERE \"character.teamId\" IN (\n",
      "            SELECT DISTINCT \"character.teamId\"\n",
      "            FROM output\n",
      "            WHERE \"character.accountId\" IN (\n",
      "                SELECT DISTINCT substr(teamKillers_AccountId, 3, 40) FROM output\n",
      "            )\n",
      "        )\n",
      "    )\n",
      "    \n",
      "    SELECT \"attacker.name\" AS name, COUNT(damage) AS damage_count, damageTypeCategory\n",
      "    FROM output\n",
      "    WHERE \"attacker.teamId\" = \"victim.teamId\"\n",
      "      AND \"attacker.name\" IN (SELECT name FROM name_cte)\n",
      "      AND \"victim.name\" IN (SELECT name FROM name_cte)\n",
      "      AND \"attacker.name\" != \"victim.name\"\n",
      "    GROUP BY \"attacker.name\", damageTypeCategory\n",
      "    ': no such column: damage\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,15,43,47,49,50,57,58,59,60,62,63,64,66,67,68,75,76,77,108,112,114,115,116,117,119,120,121,122,123,125,126,134,135,136,137,138,139,140,141,144,145,147,148,149,166,167,168,169,170,171,178,179,180,184,185,186,187,189,190,198,199,200,201,202,203,204,205,206,207,208,210,211,219,220,221,222,223,224,225,226,227,228,229,231,232,233,240,241,242,247,249,251,255,260,261,262,263,271,272,273,274,275,276,277,279,280,288,289,290,292,293,294,297,298) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,4,42,44,45,47,48,49,50,51,52,53,54,55,57,58,59,108,110,111,112,113,115,116,117,118,122,123,125,126,134,135,136,138,139,140,141,142,143,144,146,148,149,150,167,168,169,170,171,172,179,180,181,185,193,194,195,197,198,199,200,201,202,203,205,206,214,215,216,218,219,220,221,222,223,224,226,227,235,236,237,239,240,241,242,243,244,245,247,248,249,256,257,258,264,265,266,274,275,276,278,279,280,282,284,285,289,292,294,295,303,304,305,307,308,309,313,314) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,4,42,44,45,52,53,54,55,57,58,59,108,110,111,112,113,115,116,117,118,119,121,122,123,131,132,133,135,136,137,139,140,142,143,144,145,147,148,149,166,167,168,169,170,171,178,179,180,184,192,193,194,196,197,198,199,200,201,202,204,205,213,214,215,217,218,219,220,221,222,223,225,226,234,235,236,238,239,240,241,242,243,244,246,247,248,255,256,257,262,264,265,273,274,275,277,278,279,283,287,292,293,294,302,303,304,306,307,308,313,314) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,23,24,25,26,27,29,30,31,33,34,35,42,43,44,80,81,82,83,84,93,96,97,99,100,101,109,110,111,113,114,115,116,124,125,126,128,129,130,131,132,133,134,137,139,140,141,158,159,160,161,170,171,172,176,184,185,186,188,189,190,191,192,193,194,196,197,205,206,207,209,210,211,212,213,214,215,217,218,226,227,228,230,231,232,233,234,235,236,238,247,248,249,253,257,259,264,272,273) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,4,42,44,45,47,48,49,50,51,52,53,54,55,57,58,59,108,112,114,115,116,117,119,120,121,122,123,125,126,134,135,136,138,139,140,141,143,144,145,146,148,149,150,167,168,169,170,171,172,179,180,181,185,193,194,195,197,198,199,200,201,202,203,205,206,214,215,216,218,219,220,221,222,223,224,226,227,235,236,237,239,240,241,242,243,244,245,247,248,249,256,257,258,263,265,267,268,276,277,278,280,281,282,284,288,290,293,294,302,303,304,306,307,308,311,312,313) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,59,60,61,62,64,65,66,68,69,70,77,78,79,110,112,113,114,115,117,118,119,120,121,123,124,125,133,134,135,137,138,139,140,141,142,143,145,146,147,164,165,166,167,176,177,178,182,190,191,192,194,195,196,197,198,199,200,202,203,211,212,213,215,216,217,218,219,220,221,223,224,232,233,234,236,237,238,239,240,241,242,244,253,254,255,260,261,263,265,266,274,275,276,278,279,280,283,287,289,292,293) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,4,42,44,45,49,50,51,52,53,54,55,57,58,59,61,108,110,111,112,113,115,116,117,118,122,123,125,126,134,135,136,138,139,140,141,143,144,145,146,148,149,150,167,168,169,170,171,172,179,180,181,185,193,194,195,197,198,199,200,201,202,203,205,206,214,215,216,218,219,220,221,222,223,224,226,227,235,236,237,239,240,241,242,243,244,245,247,248,249,256,257,258,263,265,266,267,275,276,277,279,280,281,287,291,293,296,297,305,306,307,309,310,311,313,314,315) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,4,17,47,49,50,52,53,54,55,57,58,59,61,62,63,70,71,72,108,109,111,112,113,121,122,123,125,126,127,131,132,133,134,136,138,139,140,141,143,144,145,146,148,149,150,167,168,169,170,171,172,179,180,181,185,193,194,195,197,198,199,200,201,202,203,205,206,214,215,216,218,219,220,221,222,223,224,226,227,235,236,237,239,240,241,242,243,244,245,247,248,249,256,257,258,264,266,267,268,276,277,278,280,281,282,285,289,292,295,296) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,4,24,25,44,46,47,52,53,54,55,57,58,59,61,62,63,70,71,72,108,109,111,112,113,121,122,123,125,126,127,128,129,130,131,133,135,136,137,138,140,141,142,143,149,151,152,153,170,171,172,173,174,175,182,183,184,188,196,197,198,200,201,202,203,204,205,206,208,209,217,218,219,221,222,223,224,225,226,227,229,230,238,239,240,242,243,244,245,246,247,248,250,259,260,261,266,268,269,277,278,279,281,282,283,284,288,291,295,296,304,305,306,308,309,310,311,312,313) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "⚠️ 파일 output3596.csv 처리 중 오류 발생: Execution failed on sql '\n",
      "    WITH name_cte AS (\n",
      "        SELECT DISTINCT \"character.name\" AS name\n",
      "        FROM output\n",
      "        WHERE \"character.teamId\" IN (\n",
      "            SELECT DISTINCT \"character.teamId\"\n",
      "            FROM output\n",
      "            WHERE \"character.accountId\" IN (\n",
      "                SELECT DISTINCT substr(teamKillers_AccountId, 3, 40) FROM output\n",
      "            )\n",
      "        )\n",
      "    )\n",
      "    \n",
      "    SELECT \"attacker.name\" AS name, COUNT(damage) AS damage_count, damageTypeCategory\n",
      "    FROM output\n",
      "    WHERE \"attacker.teamId\" = \"victim.teamId\"\n",
      "      AND \"attacker.name\" IN (SELECT name FROM name_cte)\n",
      "      AND \"victim.name\" IN (SELECT name FROM name_cte)\n",
      "      AND \"attacker.name\" != \"victim.name\"\n",
      "    GROUP BY \"attacker.name\", damageTypeCategory\n",
      "    ': no such column: damage\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,20,24,25,44,46,47,49,50,51,52,54,55,56,58,59,60,67,68,69,105,106,107,108,110,111,112,113,115,116,117,118,119,121,122,123,131,132,133,135,136,137,138,139,140,141,146,149,150,151,152,169,170,171,172,181,182,183,187,195,196,197,199,200,201,202,203,204,205,207,208,216,217,218,220,221,222,223,224,225,226,228,229,237,238,239,241,242,243,244,245,246,247,249,250,251,258,259,260,266,268,272,277,278,279,287,288,289,291,292,293,294,295) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,4,52,53,54,56,57,58,59,61,62,63,65,66,67,74,75,76,107,108,109,110,112,113,114,115,117,118,119,120,121,123,124,125,133,134,135,137,138,139,140,141,142,143,149,150,151,152,169,170,171,172,181,182,183,187,195,196,197,199,200,201,202,203,204,205,207,208,216,217,218,220,221,222,223,224,225,226,228,229,237,238,239,241,242,243,244,245,246,247,249,258,259,260,266,268,269,277,278,279,281,282,283,284,288,290,297,298) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,4,52,53,54,55,56,59,60,61,62,64,65,66,68,69,70,77,78,79,110,112,113,114,115,117,118,119,120,121,123,124,125,133,134,135,137,138,139,140,141,142,143,145,146,147,164,165,166,167,168,169,176,177,178,182,190,191,192,194,195,196,197,198,199,200,202,203,211,212,213,215,216,217,218,219,220,221,223,224,232,233,234,236,237,238,239,240,241,242,244,245,246,253,254,255,260,265,266,267,275,276,277,279,280,281,286,290,292,293,301,302,303,305,306,307,309,310,311) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,20,44,46,47,49,50,51,52,54,55,56,58,59,60,67,68,69,116,138,139,141,146,147,152,153,154,171,172,173,174,175,176,183,184,185,189,197,198,199,201,202,203,204,205,206,207,209,210,218,219,220,222,223,224,225,226,227,228,230,231,239,240,241,243,244,245,246,247,248,249,251,252,253,260,261,262,266,269,271,275,277,278,286,287,288,290,291,292,294,295,303,304,305,307,308,309,312,313,314) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,4,49,50,51,52,54,55,56,58,59,60,67,68,69,140,141,142,143,148,149,150,167,168,169,170,179,180,181,185,193,194,195,197,198,199,200,201,202,203,205,206,214,215,216,218,219,220,221,222,223,224,226,227,235,236,237,239,240,241,242,243,244,245,247,256,257,258,263,265,266,274,275,276,278,279,280,282,283,287,290,295,296,304,305,306,308,309,310,311,312) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,4,42,44,45,47,48,49,50,51,52,53,54,55,57,58,59,61,108,110,111,112,113,115,116,117,118,122,123,125,126,134,135,136,138,139,140,141,143,144,145,146,148,149,150,167,168,169,170,171,172,179,180,181,185,193,194,195,197,198,199,200,201,202,203,205,206,214,215,216,218,219,220,221,222,223,224,226,227,235,236,237,239,240,241,242,243,244,245,247,256,257,258,263,265,268,269,277,278,279,281,282,283,285,286,290,294,295,303,304,305,307,308,309,312,314,315) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "⚠️ 파일 output3603.csv 처리 중 오류 발생: Execution failed on sql '\n",
      "    WITH name_cte AS (\n",
      "        SELECT DISTINCT \"character.name\" AS name\n",
      "        FROM output\n",
      "        WHERE \"character.teamId\" IN (\n",
      "            SELECT DISTINCT \"character.teamId\"\n",
      "            FROM output\n",
      "            WHERE \"character.accountId\" IN (\n",
      "                SELECT DISTINCT substr(teamKillers_AccountId, 3, 40) FROM output\n",
      "            )\n",
      "        )\n",
      "    )\n",
      "    \n",
      "    SELECT \"attacker.name\" AS name, COUNT(damage) AS damage_count, damageTypeCategory\n",
      "    FROM output\n",
      "    WHERE \"attacker.teamId\" = \"victim.teamId\"\n",
      "      AND \"attacker.name\" IN (SELECT name FROM name_cte)\n",
      "      AND \"victim.name\" IN (SELECT name FROM name_cte)\n",
      "      AND \"attacker.name\" != \"victim.name\"\n",
      "    GROUP BY \"attacker.name\", damageTypeCategory\n",
      "    ': no such column: damage\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,4,47,48,49,50,51,52,54,55,56,58,59,60,67,68,69,105,106,107,141,144,169,170,183,191,192,193,195,196,197,200,263,266,267,268,276,277,278,280,281,282,286,287,291,292,293,301,302,303,305,306,307,310,314,315) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,4,24,25,44,46,47,49,50,51,52,54,55,56,58,59,60,67,68,69,105,106,107,108,109,111,112,113,121,122,123,125,126,127,128,130,131,132,133,135,136,137,138,139,140,141,143,144,145,162,163,164,165,166,167,174,175,176,180,188,189,190,192,193,194,195,196,197,198,200,201,209,210,211,213,214,215,216,217,218,219,221,222,230,231,232,234,235,236,237,238,239,240,242,243,244,251,252,253,261,262,265,267,268,276,277,278,280,281,282,284,288,291,292,300,301,302,304,305,306,311,312,314,315) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,4,17,52,53,54,55,57,58,59,61,148,149,150,167,168,169,170,171,172,179,180,181,185,193,194,195,197,198,199,200,201,202,203,205,206,214,215,216,218,219,220,221,222,223,224,226,227,235,236,237,239,240,241,242,243,244,245,247,248,249,256,257,258,263,265,268,269,277,278,279,281,282,283,286,290,293,294,302,303,304,306,307,308,310,313,314) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,4,52,53,54,55,56,59,60,61,62,64,65,66,68,69,70,77,78,79,110,111,113,114,115,123,124,125,127,128,129,130,132,133,134,135,137,138,139,143,144,145,146,148,149,150,167,168,169,170,179,180,181,185,193,194,195,197,198,199,200,201,202,203,205,206,214,215,216,218,219,220,221,222,223,224,226,227,235,236,237,239,240,241,242,243,244,245,247,256,257,258,263,266,267,268,276,277,278,280,281,282,284,288,291,292,300,301,302,304,305,306,310,313,314) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "⚠️ 파일 output3608.csv 처리 중 오류 발생: Execution failed on sql '\n",
      "    WITH name_cte AS (\n",
      "        SELECT DISTINCT \"character.name\" AS name\n",
      "        FROM output\n",
      "        WHERE \"character.teamId\" IN (\n",
      "            SELECT DISTINCT \"character.teamId\"\n",
      "            FROM output\n",
      "            WHERE \"character.accountId\" IN (\n",
      "                SELECT DISTINCT substr(teamKillers_AccountId, 3, 40) FROM output\n",
      "            )\n",
      "        )\n",
      "    )\n",
      "    \n",
      "    SELECT \"attacker.name\" AS name, COUNT(damage) AS damage_count, damageTypeCategory\n",
      "    FROM output\n",
      "    WHERE \"attacker.teamId\" = \"victim.teamId\"\n",
      "      AND \"attacker.name\" IN (SELECT name FROM name_cte)\n",
      "      AND \"victim.name\" IN (SELECT name FROM name_cte)\n",
      "      AND \"attacker.name\" != \"victim.name\"\n",
      "    GROUP BY \"attacker.name\", damageTypeCategory\n",
      "    ': no such column: damage\n",
      "⚠️ 파일 output3609.csv 처리 중 오류 발생: Execution failed on sql '\n",
      "    WITH name_cte AS (\n",
      "        SELECT DISTINCT \"character.name\" AS name\n",
      "        FROM output\n",
      "        WHERE \"character.teamId\" IN (\n",
      "            SELECT DISTINCT \"character.teamId\"\n",
      "            FROM output\n",
      "            WHERE \"character.accountId\" IN (\n",
      "                SELECT DISTINCT substr(teamKillers_AccountId, 3, 40) FROM output\n",
      "            )\n",
      "        )\n",
      "    )\n",
      "    \n",
      "    SELECT \"attacker.name\" AS name, COUNT(damage) AS damage_count, damageTypeCategory\n",
      "    FROM output\n",
      "    WHERE \"attacker.teamId\" = \"victim.teamId\"\n",
      "      AND \"attacker.name\" IN (SELECT name FROM name_cte)\n",
      "      AND \"victim.name\" IN (SELECT name FROM name_cte)\n",
      "      AND \"attacker.name\" != \"victim.name\"\n",
      "    GROUP BY \"attacker.name\", damageTypeCategory\n",
      "    ': no such column: damage\n",
      "⚠️ 파일 output3610.csv 처리 중 오류 발생: Execution failed on sql '\n",
      "    WITH name_cte AS (\n",
      "        SELECT DISTINCT \"character.name\" AS name\n",
      "        FROM output\n",
      "        WHERE \"character.teamId\" IN (\n",
      "            SELECT DISTINCT \"character.teamId\"\n",
      "            FROM output\n",
      "            WHERE \"character.accountId\" IN (\n",
      "                SELECT DISTINCT substr(teamKillers_AccountId, 3, 40) FROM output\n",
      "            )\n",
      "        )\n",
      "    )\n",
      "    \n",
      "    SELECT \"attacker.name\" AS name, COUNT(damage) AS damage_count, damageTypeCategory\n",
      "    FROM output\n",
      "    WHERE \"attacker.teamId\" = \"victim.teamId\"\n",
      "      AND \"attacker.name\" IN (SELECT name FROM name_cte)\n",
      "      AND \"victim.name\" IN (SELECT name FROM name_cte)\n",
      "      AND \"attacker.name\" != \"victim.name\"\n",
      "    GROUP BY \"attacker.name\", damageTypeCategory\n",
      "    ': no such column: teamKillers_AccountId\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,4,42,44,45,52,53,54,55,57,58,59,61,62,63,70,71,72,108,112,113,115,116,124,125,126,128,129,130,131,133,134,135,136,138,139,140,141,143,144,145,146,148,149,150,167,168,169,170,171,172,179,180,181,185,193,194,195,197,198,199,200,201,202,203,205,206,214,215,216,218,219,220,221,222,223,224,226,227,235,236,237,239,240,241,242,243,244,245,247,256,257,258,263,265,268,269,277,278,279,281,282,283,284,288,291,293,294,302,303,304,306,307,308,310,311,312) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,4,24,25,44,46,47,49,50,51,52,53,54,55,57,58,59,61,62,63,70,71,72,108,110,111,112,113,115,116,117,118,119,121,122,123,131,132,133,135,136,137,141,143,144,145,146,148,149,150,167,168,169,170,171,172,179,180,181,185,193,194,195,197,198,199,200,201,202,203,205,206,214,215,216,218,219,220,221,222,223,224,226,227,235,236,237,239,240,241,242,243,244,245,247,256,257,258,264,268,269,270,278,279,280,282,283,284,287,291,293,296,297,305,306,307,309,310,311,313,314) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "⚠️ 파일 output3613.csv 처리 중 오류 발생: Execution failed on sql '\n",
      "    WITH name_cte AS (\n",
      "        SELECT DISTINCT \"character.name\" AS name\n",
      "        FROM output\n",
      "        WHERE \"character.teamId\" IN (\n",
      "            SELECT DISTINCT \"character.teamId\"\n",
      "            FROM output\n",
      "            WHERE \"character.accountId\" IN (\n",
      "                SELECT DISTINCT substr(teamKillers_AccountId, 3, 40) FROM output\n",
      "            )\n",
      "        )\n",
      "    )\n",
      "    \n",
      "    SELECT \"attacker.name\" AS name, COUNT(damage) AS damage_count, damageTypeCategory\n",
      "    FROM output\n",
      "    WHERE \"attacker.teamId\" = \"victim.teamId\"\n",
      "      AND \"attacker.name\" IN (SELECT name FROM name_cte)\n",
      "      AND \"victim.name\" IN (SELECT name FROM name_cte)\n",
      "      AND \"attacker.name\" != \"victim.name\"\n",
      "    GROUP BY \"attacker.name\", damageTypeCategory\n",
      "    ': no such column: damage\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,4,17,47,49,50,52,53,54,55,57,58,59,61,62,63,70,71,72,108,110,111,112,113,115,116,117,118,119,121,122,123,131,132,133,134,135,136,137,141,143,144,145,146,148,149,150,167,168,169,170,171,172,179,180,181,185,193,194,195,197,198,199,200,201,202,203,205,206,214,215,216,218,219,220,221,222,223,224,226,227,235,236,237,239,240,241,242,243,244,245,247,248,249,256,257,258,263,266,267,268,276,277,278,280,281,282,284,288,289,295,296,297) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,4,17,38,42,44,45,49,50,51,52,53,54,55,57,58,59,61,62,63,70,71,72,108,109,111,112,113,121,122,123,124,125,126,127,128,130,131,132,133,135,136,137,141,143,144,145,146,148,149,150,167,168,169,170,171,172,179,180,181,185,193,194,195,196,197,198,199,200,201,202,203,205,206,214,215,216,218,219,220,221,222,223,224,226,227,235,236,237,239,240,241,242,243,244,245,247,248,249,256,257,258,263,265,267,268,276,277,278,280,281,282,284,288,291,292,300,301,302,304,305,306,308,309,312,313) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,4,44,46,47,50,51,52,53,54,55,57,58,59,61,108,109,111,112,113,121,122,123,125,126,127,128,130,131,132,133,135,136,137,141,143,144,145,146,148,149,150,167,168,169,170,171,172,179,180,181,185,193,194,195,197,198,199,200,201,202,203,205,206,214,215,216,218,219,220,221,222,223,224,226,227,235,236,237,239,240,241,242,243,244,245,247,256,257,258,263,265,267,268,276,277,278,280,281,282,284,288,289,290,298,299,300,302,303,304,306,313,314) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,47,48,49,50,51,52,54,55,56,58,59,60,67,68,69,105,110,111,144,145,147,148,149,166,167,168,169,178,179,180,184,185,186,187,189,190,198,199,200,202,203,204,205,206,207,208,210,211,219,220,221,223,224,225,226,227,228,229,231,240,241,242,247,250,251,252,253,261,262,263,265,266,267,268,269,277,278,279,281,282,283,284,288,289,291,294,295) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "⚠️ 파일 output3617.csv 처리 중 오류 발생: Execution failed on sql '\n",
      "    WITH name_cte AS (\n",
      "        SELECT DISTINCT \"character.name\" AS name\n",
      "        FROM output\n",
      "        WHERE \"character.teamId\" IN (\n",
      "            SELECT DISTINCT \"character.teamId\"\n",
      "            FROM output\n",
      "            WHERE \"character.accountId\" IN (\n",
      "                SELECT DISTINCT substr(teamKillers_AccountId, 3, 40) FROM output\n",
      "            )\n",
      "        )\n",
      "    )\n",
      "    \n",
      "    SELECT \"attacker.name\" AS name, COUNT(damage) AS damage_count, damageTypeCategory\n",
      "    FROM output\n",
      "    WHERE \"attacker.teamId\" = \"victim.teamId\"\n",
      "      AND \"attacker.name\" IN (SELECT name FROM name_cte)\n",
      "      AND \"victim.name\" IN (SELECT name FROM name_cte)\n",
      "      AND \"attacker.name\" != \"victim.name\"\n",
      "    GROUP BY \"attacker.name\", damageTypeCategory\n",
      "    ': no such column: damage\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,4,42,44,45,47,48,49,52,53,54,55,57,58,59,108,109,111,112,113,121,122,123,125,126,127,131,133,134,135,136,138,139,140,141,142,143,144,147,148,149,166,167,168,169,170,171,178,179,180,184,192,193,194,196,197,198,199,200,201,202,204,205,213,214,215,217,218,219,220,221,222,223,225,226,234,235,236,238,239,240,241,242,243,244,246,255,256,257,261,264,266,267,268,276,277,278,280,281,282,283,285,289,293,294,302,303,304,306,307,308,312,314,315) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,23,44,46,47,49,50,51,52,54,55,56,58,118,119,121,122,123,131,132,133,135,136,137,139,140,141,142,143,149,151,152,153,170,171,172,173,182,183,184,188,196,197,198,200,201,202,203,204,205,206,208,209,217,218,219,221,222,223,224,225,226,227,229,230,238,239,240,242,243,244,245,246,247,248,250,251,252,259,260,261,269,271,275,277,281,282,290,291,292,294,295,296,297,298) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,4,44,46,47,52,53,54,55,57,58,59,61,62,63,70,71,72,108,112,113,115,116,124,125,126,128,129,130,131,133,134,135,136,138,139,140,141,143,144,145,146,148,149,150,167,168,169,170,171,172,179,180,181,185,193,194,195,197,198,199,200,201,202,203,205,206,214,215,216,218,219,220,221,222,223,224,226,227,235,236,237,239,240,241,242,243,244,245,247,256,257,258,264,267,268,269,277,278,279,281,282,283,284,287,291,294,295,303,304,305,307,308,309,311,314,315) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,4,42,44,45,50,51,52,53,54,55,57,58,59,61,108,109,111,112,113,121,122,123,125,126,127,128,130,131,132,133,135,136,137,141,142,143,144,146,148,149,150,167,168,169,170,171,172,179,180,181,185,193,194,195,197,198,199,200,201,202,203,205,206,214,215,216,218,219,220,221,222,223,224,226,227,235,236,237,239,240,241,242,243,244,245,247,248,249,256,257,258,263,265,267,268,276,277,278,280,281,282,284,288,290,291,299,300,301,303,304,305,310,311,312) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,54,55,56,59,60,61,62,64,65,66,68,69,70,77,78,79,110,111,113,114,115,123,124,125,127,128,129,131,132,134,135,136,153,154,155,156,165,166,167,171,172,173,174,176,177,185,186,187,189,190,191,192,193,194,195,197,198,206,207,208,210,211,212,213,214,215,216,218,227,228,229,233,235,236,237,238,240,241,242,244,246,247,252,256,258,259,260,261,269,270,271,273,274,275,276,277) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "⚠️ 파일 output3624.csv 처리 중 오류 발생: Execution failed on sql '\n",
      "    WITH name_cte AS (\n",
      "        SELECT DISTINCT \"character.name\" AS name\n",
      "        FROM output\n",
      "        WHERE \"character.teamId\" IN (\n",
      "            SELECT DISTINCT \"character.teamId\"\n",
      "            FROM output\n",
      "            WHERE \"character.accountId\" IN (\n",
      "                SELECT DISTINCT substr(teamKillers_AccountId, 3, 40) FROM output\n",
      "            )\n",
      "        )\n",
      "    )\n",
      "    \n",
      "    SELECT \"attacker.name\" AS name, COUNT(damage) AS damage_count, damageTypeCategory\n",
      "    FROM output\n",
      "    WHERE \"attacker.teamId\" = \"victim.teamId\"\n",
      "      AND \"attacker.name\" IN (SELECT name FROM name_cte)\n",
      "      AND \"victim.name\" IN (SELECT name FROM name_cte)\n",
      "      AND \"attacker.name\" != \"victim.name\"\n",
      "    GROUP BY \"attacker.name\", damageTypeCategory\n",
      "    ': no such column: damage\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,4,42,44,45,49,50,51,52,54,55,56,105,106,107,108,110,111,112,113,115,116,117,118,119,121,122,123,131,132,133,135,136,137,140,141,142,143,145,150,151,152,169,170,171,172,173,174,181,182,183,187,195,196,197,199,200,201,202,203,204,205,207,208,216,217,218,220,221,222,223,224,225,226,228,229,237,238,239,241,242,243,244,245,246,247,249,250,251,258,259,260,265,267,268,276,277,278,280,281,282,285,286,290,295,296,297) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,4,42,44,45,49,50,51,52,53,54,55,57,58,59,61,108,109,111,112,113,121,122,123,125,126,127,132,134,135,136,137,139,140,141,142,143,144,145,147,149,150,151,168,169,170,171,172,173,180,181,182,186,194,195,196,198,199,200,201,202,203,204,206,207,215,216,217,219,220,221,222,223,224,225,227,228,236,237,238,240,241,242,243,244,245,246,248,249,250,257,258,259,264,267,271,272,280,281,282,284,285,286,287,291,294,295,296,304,305,306,308,309,310,313,314) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,4,55,56,59,60,61,62,64,65,66,68,69,70,77,78,79,110,111,113,114,115,123,124,125,127,128,129,130,132,133,134,135,137,138,139,140,141,142,143,145,146,147,164,165,166,167,176,177,178,182,190,191,192,194,195,196,197,198,199,200,202,203,211,212,213,215,216,217,218,219,220,221,223,224,232,233,234,236,237,238,239,240,241,242,244,253,254,255,260,261,262,270,271,272,274,275,276,281,287,291,293,295,296,304,305,306,308,309,310,312,313) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,20,42,44,45,47,48,49,50,52,53,54,56,57,58,65,66,67,103,105,106,107,108,110,111,112,113,114,115,116,117,119,120,121,129,130,131,133,134,135,136,137,138,139,140,141,143,144,145,162,163,164,165,174,175,176,180,188,189,190,192,193,194,195,196,197,198,200,201,209,210,211,213,214,215,216,217,218,219,221,222,230,231,232,234,235,236,237,238,239,240,242,243,244,251,252,253,258,260,261,268,272,277,278,279,287,288,289,291,292,293,295,296) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "⚠️ 파일 output3628.csv 처리 중 오류 발생: Execution failed on sql '\n",
      "    WITH name_cte AS (\n",
      "        SELECT DISTINCT \"character.name\" AS name\n",
      "        FROM output\n",
      "        WHERE \"character.teamId\" IN (\n",
      "            SELECT DISTINCT \"character.teamId\"\n",
      "            FROM output\n",
      "            WHERE \"character.accountId\" IN (\n",
      "                SELECT DISTINCT substr(teamKillers_AccountId, 3, 40) FROM output\n",
      "            )\n",
      "        )\n",
      "    )\n",
      "    \n",
      "    SELECT \"attacker.name\" AS name, COUNT(damage) AS damage_count, damageTypeCategory\n",
      "    FROM output\n",
      "    WHERE \"attacker.teamId\" = \"victim.teamId\"\n",
      "      AND \"attacker.name\" IN (SELECT name FROM name_cte)\n",
      "      AND \"victim.name\" IN (SELECT name FROM name_cte)\n",
      "      AND \"attacker.name\" != \"victim.name\"\n",
      "    GROUP BY \"attacker.name\", damageTypeCategory\n",
      "    ': no such column: damage\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,4,24,25,44,46,47,49,50,51,52,54,55,56,58,59,60,67,68,69,105,106,107,108,110,111,112,113,115,116,117,118,119,121,122,123,131,132,133,135,136,137,138,139,140,141,146,148,149,150,167,168,169,170,171,172,179,180,181,185,193,194,195,197,198,199,200,201,202,203,205,206,214,215,216,218,219,220,221,222,223,224,226,227,235,236,237,239,240,241,242,243,244,245,247,256,257,258,263,265,266,267,275,276,277,279,280,281,285,289,290,292,298,299) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,4,44,46,47,49,50,51,52,54,55,56,58,59,60,67,68,69,108,110,111,112,113,115,116,117,118,119,121,122,123,131,132,133,135,136,137,141,143,144,145,146,148,149,150,167,168,169,170,171,172,179,180,181,185,193,194,195,197,198,199,200,201,202,203,205,206,214,215,216,218,219,220,221,222,223,224,226,227,235,236,237,239,240,241,242,243,244,245,247,248,249,256,257,258,263,267,268,269,270,278,279,280,282,283,284,286,290,292,298,299) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,4,49,50,51,52,53,54,55,57,58,59,61,62,63,70,71,72,140,143,145,146,147,164,165,166,167,168,169,176,177,178,182,190,191,192,194,195,196,197,198,199,200,202,203,211,212,213,215,216,217,218,219,220,221,223,224,232,233,234,236,237,238,239,240,241,242,244,245,246,253,254,255,260,261,262,270,271,272,274,275,276,278,286,290,292,295,296,304,305,306,308,309,310,313,314,315) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,4,42,44,45,47,48,49,50,51,52,53,54,55,57,58,59,61,62,63,70,71,72,108,110,111,112,113,115,116,117,118,119,121,122,123,131,132,133,135,136,137,138,139,140,141,144,145,146,147,164,165,166,167,168,169,176,177,178,182,190,191,192,194,195,196,197,198,199,200,202,203,211,212,213,215,216,217,218,219,220,221,223,224,232,233,234,236,237,238,239,240,241,242,244,245,246,253,254,255,260,261,264,265,273,274,275,277,278,279,284,288,290,295,296,297) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,20,26,27,28,29,31,32,33,35,36,37,44,45,46,84,100,102,103,104,125,126,127,136,139,140,142,143,144,161,162,163,164,173,174,175,179,180,182,184,185,193,194,195,197,198,199,200,201,202,203,205,206,214,215,216,218,219,220,221,222,223,224,226,235,236,237,242,250,253,254,258,263,264,265) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,15,28,43,47,49,50,52,53,54,57,58,59,60,62,63,64,66,67,68,75,76,77,108,110,111,112,113,115,116,117,118,119,121,122,123,131,132,133,134,135,136,137,142,143,144,145,147,150,154,155,156,173,174,175,176,177,178,185,186,187,191,192,193,194,196,197,205,206,207,209,210,211,212,213,214,215,217,218,226,227,228,230,231,232,233,234,235,236,238,247,248,249,253,261,262,263,265,266,267,268,269,277,278,279,281,282,283,285,286,287,291,293,294,302,303,304,306,307,308,312,314,315) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "⚠️ 파일 output3636.csv 처리 중 오류 발생: Execution failed on sql '\n",
      "    WITH name_cte AS (\n",
      "        SELECT DISTINCT \"character.name\" AS name\n",
      "        FROM output\n",
      "        WHERE \"character.teamId\" IN (\n",
      "            SELECT DISTINCT \"character.teamId\"\n",
      "            FROM output\n",
      "            WHERE \"character.accountId\" IN (\n",
      "                SELECT DISTINCT substr(teamKillers_AccountId, 3, 40) FROM output\n",
      "            )\n",
      "        )\n",
      "    )\n",
      "    \n",
      "    SELECT \"attacker.name\" AS name, COUNT(damage) AS damage_count, damageTypeCategory\n",
      "    FROM output\n",
      "    WHERE \"attacker.teamId\" = \"victim.teamId\"\n",
      "      AND \"attacker.name\" IN (SELECT name FROM name_cte)\n",
      "      AND \"victim.name\" IN (SELECT name FROM name_cte)\n",
      "      AND \"attacker.name\" != \"victim.name\"\n",
      "    GROUP BY \"attacker.name\", damageTypeCategory\n",
      "    ': no such column: damage\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,20,24,25,28,44,46,47,48,49,50,51,52,54,55,56,58,105,106,107,136,139,144,145,146,147,164,165,166,167,168,169,176,177,178,182,190,191,192,194,195,196,197,198,199,200,202,203,211,212,213,215,216,217,218,219,220,221,223,224,232,233,234,236,237,238,239,240,241,242,244,245,246,253,254,255,262,266,269,273,277,281,282,283,291,292,293,295,296,297,298,299) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,4,52,53,54,55,56,59,60,61,62,64,65,66,68,69,70,77,78,79,110,111,113,114,115,123,124,125,127,128,129,130,132,133,134,135,137,138,139,140,141,142,143,145,146,147,164,165,166,167,176,177,178,182,190,191,192,194,195,196,197,198,199,200,202,203,211,212,213,215,216,217,218,219,220,221,223,224,232,233,234,236,237,238,239,240,241,242,244,245,246,253,254,255,263,265,267,268,276,277,278,280,281,282,285,289,291,294,297,298,306,307,308,310,311,312,314,315) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "⚠️ 파일 output3639.csv 처리 중 오류 발생: Execution failed on sql '\n",
      "    WITH name_cte AS (\n",
      "        SELECT DISTINCT \"character.name\" AS name\n",
      "        FROM output\n",
      "        WHERE \"character.teamId\" IN (\n",
      "            SELECT DISTINCT \"character.teamId\"\n",
      "            FROM output\n",
      "            WHERE \"character.accountId\" IN (\n",
      "                SELECT DISTINCT substr(teamKillers_AccountId, 3, 40) FROM output\n",
      "            )\n",
      "        )\n",
      "    )\n",
      "    \n",
      "    SELECT \"attacker.name\" AS name, COUNT(damage) AS damage_count, damageTypeCategory\n",
      "    FROM output\n",
      "    WHERE \"attacker.teamId\" = \"victim.teamId\"\n",
      "      AND \"attacker.name\" IN (SELECT name FROM name_cte)\n",
      "      AND \"victim.name\" IN (SELECT name FROM name_cte)\n",
      "      AND \"attacker.name\" != \"victim.name\"\n",
      "    GROUP BY \"attacker.name\", damageTypeCategory\n",
      "    ': no such column: damage\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,17,24,25,40,44,46,47,49,50,51,52,53,54,55,57,58,59,61,62,63,70,71,72,108,109,111,112,113,121,122,123,124,125,126,127,128,130,131,132,133,135,136,137,138,140,141,142,143,145,146,147,164,165,166,167,168,169,176,177,178,182,190,191,192,194,195,196,197,198,199,200,202,203,211,212,213,215,216,217,218,219,220,221,223,224,232,233,234,236,237,238,239,240,241,242,244,253,254,255,264,267,268,269,277,278,279,281,282,283,284,288,289,291,292,300,301,302,304,305,306,309,312,313) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "⚠️ 파일 output3641.csv 처리 중 오류 발생: Execution failed on sql '\n",
      "    WITH name_cte AS (\n",
      "        SELECT DISTINCT \"character.name\" AS name\n",
      "        FROM output\n",
      "        WHERE \"character.teamId\" IN (\n",
      "            SELECT DISTINCT \"character.teamId\"\n",
      "            FROM output\n",
      "            WHERE \"character.accountId\" IN (\n",
      "                SELECT DISTINCT substr(teamKillers_AccountId, 3, 40) FROM output\n",
      "            )\n",
      "        )\n",
      "    )\n",
      "    \n",
      "    SELECT \"attacker.name\" AS name, COUNT(damage) AS damage_count, damageTypeCategory\n",
      "    FROM output\n",
      "    WHERE \"attacker.teamId\" = \"victim.teamId\"\n",
      "      AND \"attacker.name\" IN (SELECT name FROM name_cte)\n",
      "      AND \"victim.name\" IN (SELECT name FROM name_cte)\n",
      "      AND \"attacker.name\" != \"victim.name\"\n",
      "    GROUP BY \"attacker.name\", damageTypeCategory\n",
      "    ': no such column: damage\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,4,52,53,54,55,57,58,59,61,62,63,70,71,72,145,146,147,164,165,166,167,176,177,178,182,190,191,192,194,195,196,197,198,199,200,202,203,211,212,213,215,216,217,218,219,220,221,223,224,232,233,234,236,237,238,239,240,241,242,244,253,254,255,261,263,264,265,273,274,275,277,278,279,281,285,289,294,298,299) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "⚠️ 파일 output3643.csv 처리 중 오류 발생: Execution failed on sql '\n",
      "    WITH name_cte AS (\n",
      "        SELECT DISTINCT \"character.name\" AS name\n",
      "        FROM output\n",
      "        WHERE \"character.teamId\" IN (\n",
      "            SELECT DISTINCT \"character.teamId\"\n",
      "            FROM output\n",
      "            WHERE \"character.accountId\" IN (\n",
      "                SELECT DISTINCT substr(teamKillers_AccountId, 3, 40) FROM output\n",
      "            )\n",
      "        )\n",
      "    )\n",
      "    \n",
      "    SELECT \"attacker.name\" AS name, COUNT(damage) AS damage_count, damageTypeCategory\n",
      "    FROM output\n",
      "    WHERE \"attacker.teamId\" = \"victim.teamId\"\n",
      "      AND \"attacker.name\" IN (SELECT name FROM name_cte)\n",
      "      AND \"victim.name\" IN (SELECT name FROM name_cte)\n",
      "      AND \"attacker.name\" != \"victim.name\"\n",
      "    GROUP BY \"attacker.name\", damageTypeCategory\n",
      "    ': no such column: damage\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,4,42,44,45,47,48,49,50,51,52,53,54,55,57,58,59,61,62,63,70,71,72,128,130,131,132,133,135,136,137,141,143,144,145,146,148,149,150,167,168,169,170,171,172,179,180,181,185,193,194,195,197,198,199,200,201,202,203,205,206,214,215,216,218,219,220,221,222,223,224,226,227,235,236,237,239,240,241,242,243,244,245,247,248,249,256,257,258,263,265,267,268,276,277,278,280,281,282,284,288,290,295,296) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,23,44,46,47,49,50,51,52,54,55,56,58,59,60,67,68,69,106,107,136,139,143,144,145,162,163,164,165,174,175,176,180,188,189,190,192,193,194,195,196,197,198,200,201,209,210,211,213,214,215,216,217,218,219,221,222,230,231,232,234,235,236,237,238,239,240,242,251,252,253,257,261,263,264,265,273,274,275,277,278,279,285,289,294,295,296) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,4,42,44,45,47,48,49,50,51,52,53,54,55,57,58,59,61,62,63,70,71,72,108,112,114,115,116,117,119,120,121,122,123,125,126,134,135,136,138,139,140,141,142,143,144,146,149,150,151,152,169,170,171,172,173,174,181,182,183,187,195,196,197,199,200,201,202,203,204,205,207,208,216,217,218,220,221,222,223,224,225,226,228,229,237,238,239,241,242,243,244,245,246,247,249,250,251,258,259,260,265,267,268,276,277,278,280,281,282,285,289,291,293,294,302,303,304,306,307,308,311,312) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "⚠️ 파일 output3647.csv 처리 중 오류 발생: Execution failed on sql '\n",
      "    WITH name_cte AS (\n",
      "        SELECT DISTINCT \"character.name\" AS name\n",
      "        FROM output\n",
      "        WHERE \"character.teamId\" IN (\n",
      "            SELECT DISTINCT \"character.teamId\"\n",
      "            FROM output\n",
      "            WHERE \"character.accountId\" IN (\n",
      "                SELECT DISTINCT substr(teamKillers_AccountId, 3, 40) FROM output\n",
      "            )\n",
      "        )\n",
      "    )\n",
      "    \n",
      "    SELECT \"attacker.name\" AS name, COUNT(damage) AS damage_count, damageTypeCategory\n",
      "    FROM output\n",
      "    WHERE \"attacker.teamId\" = \"victim.teamId\"\n",
      "      AND \"attacker.name\" IN (SELECT name FROM name_cte)\n",
      "      AND \"victim.name\" IN (SELECT name FROM name_cte)\n",
      "      AND \"attacker.name\" != \"victim.name\"\n",
      "    GROUP BY \"attacker.name\", damageTypeCategory\n",
      "    ': no such column: teamKillers_AccountId\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,4,42,44,45,47,48,49,50,51,52,53,54,55,57,58,59,61,62,63,70,71,72,108,112,113,115,116,124,125,126,128,129,130,131,133,134,135,136,138,139,140,141,142,143,144,147,148,149,150,167,168,169,170,171,172,179,180,181,185,193,194,195,197,198,199,200,201,202,203,205,206,214,215,216,218,219,220,221,222,223,224,226,227,235,236,237,239,240,241,242,243,244,245,247,248,249,256,257,258,262,266,269,270,278,279,280,282,283,284,285,289,292,297,298,299) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,20,26,42,44,45,46,47,48,49,50,52,53,54,56,57,58,65,66,67,116,142,147,148,149,150,167,168,169,170,179,180,181,185,193,194,195,197,198,199,200,201,202,203,205,206,214,215,216,218,219,220,221,222,223,224,226,227,235,236,237,239,240,241,242,243,244,245,247,248,249,256,257,258,262,266,268,272,273,274,282,283,284,286,287,288,294,296,298,299) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,4,24,25,44,46,47,49,50,51,52,54,55,56,58,59,60,67,68,69,105,106,108,109,110,118,119,120,122,123,124,125,126,127,131,133,134,135,136,138,139,140,141,142,143,144,146,148,149,150,167,168,169,170,171,172,179,180,181,185,193,194,195,197,198,199,200,201,202,203,205,206,214,215,216,218,219,220,221,222,223,224,226,227,235,236,237,239,240,241,242,243,244,245,247,248,249,256,257,258,263,265,267,268,276,277,278,280,281,282,284,288,292,294,296,297,305,306,307,309,310,311,314,315) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,4,24,25,49,50,51,52,53,54,55,57,58,59,61,143,144,145,146,148,149,150,167,168,169,170,171,172,179,180,181,185,193,194,195,197,198,199,200,201,202,203,205,206,214,215,216,218,219,220,221,222,223,224,226,227,235,236,237,239,240,241,242,243,244,245,247,248,249,256,257,258,264,266,268,269,270,278,279,280,282,283,284,287,291,293,298,299) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,50,51,52,53,54,55,57,58,59,61,62,63,70,71,72,245,246,261,262,263,271,272,273,275,276,277,279,284,285,293,294,295,297,298,299,300,304,308,309) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,25,31,47,49,50,51,57,59,60,61,62,64,65,66,68,69,70,77,78,79,110,112,113,114,115,117,118,119,120,121,123,124,125,133,134,135,137,138,139,140,141,142,143,146,147,148,165,166,167,168,177,178,179,183,184,185,186,188,189,197,198,199,201,202,203,204,205,206,207,209,210,218,219,220,222,223,224,225,226,227,228,230,231,232,239,240,241,245,253,254,255,257,258,259,261,264,269,273,275,276,284,285,286,288,289,290,292,293) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "⚠️ 파일 output3653.csv 처리 중 오류 발생: Execution failed on sql '\n",
      "    WITH name_cte AS (\n",
      "        SELECT DISTINCT \"character.name\" AS name\n",
      "        FROM output\n",
      "        WHERE \"character.teamId\" IN (\n",
      "            SELECT DISTINCT \"character.teamId\"\n",
      "            FROM output\n",
      "            WHERE \"character.accountId\" IN (\n",
      "                SELECT DISTINCT substr(teamKillers_AccountId, 3, 40) FROM output\n",
      "            )\n",
      "        )\n",
      "    )\n",
      "    \n",
      "    SELECT \"attacker.name\" AS name, COUNT(damage) AS damage_count, damageTypeCategory\n",
      "    FROM output\n",
      "    WHERE \"attacker.teamId\" = \"victim.teamId\"\n",
      "      AND \"attacker.name\" IN (SELECT name FROM name_cte)\n",
      "      AND \"victim.name\" IN (SELECT name FROM name_cte)\n",
      "      AND \"attacker.name\" != \"victim.name\"\n",
      "    GROUP BY \"attacker.name\", damageTypeCategory\n",
      "    ': no such column: damage\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,23,28,44,46,47,48,49,50,51,52,54,55,56,58,59,60,67,68,69,118,119,121,122,123,131,132,133,135,136,137,138,139,140,141,144,149,150,151,168,169,170,171,180,181,182,186,194,195,196,198,199,200,201,202,203,204,206,207,215,216,217,219,220,221,222,223,224,225,227,228,236,237,238,240,241,242,243,244,245,246,248,249,250,257,258,259,263,267,268,272,278,281,282) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,4,5,6,7,9,10,11,13,86,87,89,90,91,99,100,101,103,104,105,107,108,109,116,117,118,130,135,136,137,141,145,146,147,150,151) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "⚠️ 파일 output3656.csv 처리 중 오류 발생: Execution failed on sql '\n",
      "    WITH name_cte AS (\n",
      "        SELECT DISTINCT \"character.name\" AS name\n",
      "        FROM output\n",
      "        WHERE \"character.teamId\" IN (\n",
      "            SELECT DISTINCT \"character.teamId\"\n",
      "            FROM output\n",
      "            WHERE \"character.accountId\" IN (\n",
      "                SELECT DISTINCT substr(teamKillers_AccountId, 3, 40) FROM output\n",
      "            )\n",
      "        )\n",
      "    )\n",
      "    \n",
      "    SELECT \"attacker.name\" AS name, COUNT(damage) AS damage_count, damageTypeCategory\n",
      "    FROM output\n",
      "    WHERE \"attacker.teamId\" = \"victim.teamId\"\n",
      "      AND \"attacker.name\" IN (SELECT name FROM name_cte)\n",
      "      AND \"victim.name\" IN (SELECT name FROM name_cte)\n",
      "      AND \"attacker.name\" != \"victim.name\"\n",
      "    GROUP BY \"attacker.name\", damageTypeCategory\n",
      "    ': no such column: teamKillers_AccountId\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,4,17,24,25,26,47,49,50,52,53,54,55,57,58,59,108,109,111,112,113,121,122,123,124,125,126,127,128,130,131,132,133,135,136,137,141,142,143,144,146,148,149,150,167,168,169,170,171,172,179,180,181,185,193,194,195,197,198,199,200,201,202,203,205,206,214,215,216,218,219,220,221,222,223,224,226,227,235,236,237,239,240,241,242,243,244,245,247,256,257,258,263,265,268,269,277,278,279,281,282,283,284,288,290,293,296,297) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "⚠️ 파일 output3658.csv 처리 중 오류 발생: Execution failed on sql '\n",
      "    WITH name_cte AS (\n",
      "        SELECT DISTINCT \"character.name\" AS name\n",
      "        FROM output\n",
      "        WHERE \"character.teamId\" IN (\n",
      "            SELECT DISTINCT \"character.teamId\"\n",
      "            FROM output\n",
      "            WHERE \"character.accountId\" IN (\n",
      "                SELECT DISTINCT substr(teamKillers_AccountId, 3, 40) FROM output\n",
      "            )\n",
      "        )\n",
      "    )\n",
      "    \n",
      "    SELECT \"attacker.name\" AS name, COUNT(damage) AS damage_count, damageTypeCategory\n",
      "    FROM output\n",
      "    WHERE \"attacker.teamId\" = \"victim.teamId\"\n",
      "      AND \"attacker.name\" IN (SELECT name FROM name_cte)\n",
      "      AND \"victim.name\" IN (SELECT name FROM name_cte)\n",
      "      AND \"attacker.name\" != \"victim.name\"\n",
      "    GROUP BY \"attacker.name\", damageTypeCategory\n",
      "    ': no such column: damage\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,15,28,31,32,33,36,48,52,54,55,56,57,58,59,60,62,63,64,66,67,68,75,76,77,108,110,111,112,113,115,116,117,118,119,121,122,123,131,132,133,134,135,136,137,138,139,140,141,147,148,152,153,154,171,172,173,174,183,184,185,189,190,191,192,194,195,203,204,205,207,208,209,210,211,212,213,215,216,224,225,226,228,229,230,231,232,233,234,236,237,238,245,246,247,251,259,260,261,263,264,265,267,268,269,277,278,279,281,282,283,284,288,289,296,297,305,306,307,309,310,311,312,313) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "⚠️ 파일 output3660.csv 처리 중 오류 발생: Execution failed on sql '\n",
      "    WITH name_cte AS (\n",
      "        SELECT DISTINCT \"character.name\" AS name\n",
      "        FROM output\n",
      "        WHERE \"character.teamId\" IN (\n",
      "            SELECT DISTINCT \"character.teamId\"\n",
      "            FROM output\n",
      "            WHERE \"character.accountId\" IN (\n",
      "                SELECT DISTINCT substr(teamKillers_AccountId, 3, 40) FROM output\n",
      "            )\n",
      "        )\n",
      "    )\n",
      "    \n",
      "    SELECT \"attacker.name\" AS name, COUNT(damage) AS damage_count, damageTypeCategory\n",
      "    FROM output\n",
      "    WHERE \"attacker.teamId\" = \"victim.teamId\"\n",
      "      AND \"attacker.name\" IN (SELECT name FROM name_cte)\n",
      "      AND \"victim.name\" IN (SELECT name FROM name_cte)\n",
      "      AND \"attacker.name\" != \"victim.name\"\n",
      "    GROUP BY \"attacker.name\", damageTypeCategory\n",
      "    ': no such column: damage\n",
      "⚠️ 파일 output3661.csv 처리 중 오류 발생: Execution failed on sql '\n",
      "    WITH name_cte AS (\n",
      "        SELECT DISTINCT \"character.name\" AS name\n",
      "        FROM output\n",
      "        WHERE \"character.teamId\" IN (\n",
      "            SELECT DISTINCT \"character.teamId\"\n",
      "            FROM output\n",
      "            WHERE \"character.accountId\" IN (\n",
      "                SELECT DISTINCT substr(teamKillers_AccountId, 3, 40) FROM output\n",
      "            )\n",
      "        )\n",
      "    )\n",
      "    \n",
      "    SELECT \"attacker.name\" AS name, COUNT(damage) AS damage_count, damageTypeCategory\n",
      "    FROM output\n",
      "    WHERE \"attacker.teamId\" = \"victim.teamId\"\n",
      "      AND \"attacker.name\" IN (SELECT name FROM name_cte)\n",
      "      AND \"victim.name\" IN (SELECT name FROM name_cte)\n",
      "      AND \"attacker.name\" != \"victim.name\"\n",
      "    GROUP BY \"attacker.name\", damageTypeCategory\n",
      "    ': no such column: damage\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,4,57,59,60,61,62,64,65,66,68,69,70,77,78,79,112,114,115,116,117,119,120,121,122,126,127,129,130,138,139,140,142,143,144,145,146,147,148,150,151,152,169,170,171,172,173,174,181,182,183,187,195,196,197,199,200,201,202,203,204,205,207,208,216,217,218,220,221,222,223,224,225,226,228,229,237,238,239,241,242,243,244,245,246,247,249,258,259,260,267,270,271,272,280,281,282,284,285,286,287,291,294,295,296,304,305,306,308,309,310,313,314) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,20,24,25,44,46,47,49,50,51,52,54,55,56,58,59,60,67,68,69,106,107,116,139,143,144,145,162,163,164,165,166,167,174,175,176,180,188,189,190,192,193,194,195,196,197,198,200,201,209,210,211,213,214,215,216,217,218,219,221,222,230,231,232,234,235,236,237,238,239,240,242,243,244,251,252,253,261,263,267,269,273,274,275,283,284,285,287,288,289,292,294,295) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,15,28,43,47,49,50,55,56,57,58,59,60,62,63,64,66,108,112,114,115,116,117,119,120,121,122,123,125,126,134,135,136,137,138,139,140,141,142,143,144,146,149,150,151,152,169,170,171,172,173,174,181,182,183,187,195,196,197,199,200,201,202,203,204,205,207,208,216,217,218,220,221,222,223,224,225,226,228,229,237,238,239,241,242,243,244,245,246,247,249,250,251,258,259,260,267,271,272,280,281,282,284,285,286,287,291,293,294,295,303,304,305,307,308,309,312,314,315) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "⚠️ 파일 output3665.csv 처리 중 오류 발생: Execution failed on sql '\n",
      "    WITH name_cte AS (\n",
      "        SELECT DISTINCT \"character.name\" AS name\n",
      "        FROM output\n",
      "        WHERE \"character.teamId\" IN (\n",
      "            SELECT DISTINCT \"character.teamId\"\n",
      "            FROM output\n",
      "            WHERE \"character.accountId\" IN (\n",
      "                SELECT DISTINCT substr(teamKillers_AccountId, 3, 40) FROM output\n",
      "            )\n",
      "        )\n",
      "    )\n",
      "    \n",
      "    SELECT \"attacker.name\" AS name, COUNT(damage) AS damage_count, damageTypeCategory\n",
      "    FROM output\n",
      "    WHERE \"attacker.teamId\" = \"victim.teamId\"\n",
      "      AND \"attacker.name\" IN (SELECT name FROM name_cte)\n",
      "      AND \"victim.name\" IN (SELECT name FROM name_cte)\n",
      "      AND \"attacker.name\" != \"victim.name\"\n",
      "    GROUP BY \"attacker.name\", damageTypeCategory\n",
      "    ': no such column: damage\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,15,28,47,49,50,52,53,54,55,56,57,58,59,60,62,63,64,108,112,113,115,116,124,125,126,127,128,129,130,131,133,134,135,136,138,139,140,141,142,143,144,146,148,149,150,167,168,169,170,171,172,179,180,181,185,193,194,195,197,198,199,200,201,202,203,205,206,214,215,216,218,219,220,221,222,223,224,226,227,235,236,237,239,240,241,242,243,244,245,247,256,257,258,263,266,268,269,277,278,279,281,282,283,286,290,291,294,295,303,304,305,307,308,309,313,314,315) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "⚠️ 파일 output3667.csv 처리 중 오류 발생: Execution failed on sql '\n",
      "    WITH name_cte AS (\n",
      "        SELECT DISTINCT \"character.name\" AS name\n",
      "        FROM output\n",
      "        WHERE \"character.teamId\" IN (\n",
      "            SELECT DISTINCT \"character.teamId\"\n",
      "            FROM output\n",
      "            WHERE \"character.accountId\" IN (\n",
      "                SELECT DISTINCT substr(teamKillers_AccountId, 3, 40) FROM output\n",
      "            )\n",
      "        )\n",
      "    )\n",
      "    \n",
      "    SELECT \"attacker.name\" AS name, COUNT(damage) AS damage_count, damageTypeCategory\n",
      "    FROM output\n",
      "    WHERE \"attacker.teamId\" = \"victim.teamId\"\n",
      "      AND \"attacker.name\" IN (SELECT name FROM name_cte)\n",
      "      AND \"victim.name\" IN (SELECT name FROM name_cte)\n",
      "      AND \"attacker.name\" != \"victim.name\"\n",
      "    GROUP BY \"attacker.name\", damageTypeCategory\n",
      "    ': no such column: damage\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,4,42,44,45,47,48,49,50,51,52,53,54,55,57,58,59,61,62,63,70,71,72,108,112,114,115,116,117,119,120,121,122,123,125,126,134,135,136,138,139,140,141,143,144,145,146,149,150,151,168,169,170,171,172,173,180,181,182,186,194,195,196,198,199,200,201,202,203,204,206,207,215,216,217,219,220,221,222,223,224,225,227,228,229,230,231,233,234,235,242,243,244,248,256,257,258,260,261,262,264,266,268,269,277,278,279,281,282,283,287,291,293,296,297,305,306,307,309,310,311,313,314) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,4,42,44,45,52,53,54,55,57,58,59,108,110,111,112,113,115,116,117,118,119,121,122,123,131,132,133,135,136,137,138,142,143,144,145,147,148,149,166,167,168,169,170,171,178,179,180,184,192,193,194,196,197,198,199,200,201,202,204,205,213,214,215,217,218,219,220,221,222,223,225,226,234,235,236,238,239,240,241,242,243,244,246,247,248,255,256,257,265,268,270,271,279,280,281,283,284,285,286,290,292,297,298) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,4,42,44,45,49,50,51,52,53,54,55,57,58,59,61,62,63,70,71,72,107,108,110,111,112,120,121,122,124,125,126,128,130,131,132,133,135,136,137,141,142,143,144,146,148,149,150,167,168,169,170,171,172,179,180,181,185,193,194,195,197,198,199,200,201,202,203,205,206,214,215,216,218,219,220,221,222,223,224,226,227,235,236,237,239,240,241,242,243,244,245,247,248,249,256,257,258,266,268,270,271,279,280,281,283,284,285,286,290,291,292,300,301,302,304,305,306,308,309,314,315) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,4,24,25,44,46,47,49,50,51,52,54,55,56,58,59,60,67,68,69,105,106,107,108,112,113,115,116,124,125,126,128,129,130,131,132,133,134,136,138,139,140,157,158,159,160,161,162,169,170,171,175,183,184,185,187,188,189,190,191,192,193,195,196,204,205,206,208,209,210,211,212,213,214,216,217,225,226,227,229,230,231,232,233,234,235,237,238,239,246,247,248,252,254,255,256,257,259,260,261,264,266,267,268,276,277,278,280,281,282,286,290,291,292,300,301,302,304,305,306,308,312,313) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,4,17,38,42,44,45,52,53,54,55,57,58,59,61,62,63,70,71,72,108,109,111,112,113,121,122,123,124,125,126,127,128,129,130,131,133,135,136,137,138,140,141,142,148,149,151,152,153,170,171,172,173,174,175,182,183,184,188,196,197,198,200,201,202,203,204,205,206,208,209,217,218,219,221,222,223,224,225,226,227,229,230,238,239,240,242,243,244,245,246,247,248,250,251,252,259,260,261,266,267,268,276,277,278,280,281,282,285,289,290,295,296,297) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,4,17,42,44,45,47,48,49,50,51,52,53,54,55,57,58,59,61,62,63,70,71,72,108,110,111,112,113,115,116,117,118,122,123,125,126,134,135,136,137,138,139,140,141,142,143,144,147,148,149,150,167,168,169,170,171,172,179,180,181,185,193,194,195,197,198,199,200,201,202,203,205,206,214,215,216,218,219,220,221,222,223,224,226,227,235,236,237,239,240,241,242,243,244,245,247,248,249,256,257,258,263,266,269,270,278,279,280,281,282,283,284,285,289,291,295,296) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,4,42,44,45,47,48,49,50,51,52,53,54,55,57,58,59,108,110,111,112,113,115,116,117,118,122,124,125,127,128,136,137,138,140,141,142,143,144,145,146,149,150,151,152,169,170,171,172,173,174,181,182,183,187,195,196,197,199,200,201,202,203,204,205,207,208,216,217,218,220,221,222,223,224,225,226,228,229,237,238,239,241,242,243,244,245,246,247,249,250,251,258,259,260,265,267,268,269,277,278,279,281,282,283,287,291,293,294,295,303,304,305,307,308,309,312,313) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,4,42,44,45,47,48,49,50,51,52,53,54,55,57,58,59,61,62,63,70,71,72,108,109,111,112,113,121,122,123,125,126,127,131,133,134,135,136,138,139,140,143,144,146,147,148,149,151,152,153,170,171,172,173,174,175,182,183,184,188,196,197,198,200,201,202,203,204,205,206,208,209,217,218,219,221,222,223,224,225,226,227,229,230,238,239,240,242,243,244,245,246,247,248,250,251,252,259,260,261,267,268,269,277,278,279,281,282,283,284,288,291,294,295,303,304,305,307,308,309,313,314) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,4,17,42,44,45,52,53,54,55,57,58,59,61,62,63,70,71,72,108,110,111,112,113,115,116,117,118,120,121,123,124,125,133,134,135,137,138,139,143,144,145,146,148,149,150,167,168,169,170,171,172,179,180,181,185,193,194,195,197,198,199,200,201,202,203,205,206,214,215,216,218,219,220,221,222,223,224,226,227,235,236,237,239,240,241,242,243,244,245,247,256,257,258,263,265,268,269,277,278,279,281,282,283,284,285,289,294,295,296,304,305,306,308,309,310,311,312) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,4,47,48,49,50,51,52,53,54,55,57,58,59,61,62,63,70,71,72,128,129,131,133,145,146,147,164,165,166,167,168,169,176,177,178,182,190,191,192,194,195,196,197,198,199,200,202,203,211,212,213,215,216,217,218,219,220,221,223,224,232,233,234,236,237,238,239,240,241,242,244,245,246,253,254,255,263,266,267,275,276,277,279,280,281,283,284,288,295,296,297) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,4,49,50,51,52,54,55,56,58,59,60,67,68,69,139,148,149,150,167,168,169,170,171,172,179,180,181,185,193,194,195,197,198,199,200,201,202,203,205,206,214,215,216,218,219,220,221,222,223,224,226,227,235,236,237,239,240,241,242,243,244,245,247,256,257,258,263,265,266,274,275,276,278,279,280,282,285,287,291,293,296,297,305,306,307,309,310,311,314,315) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,4,24,25,44,46,47,52,53,54,55,57,58,59,61,62,63,70,71,72,108,110,111,112,113,115,116,117,118,119,121,122,123,131,132,133,135,136,137,141,142,143,144,146,148,149,150,167,168,169,170,171,172,179,180,181,185,193,194,195,197,198,199,200,201,202,203,205,206,214,215,216,218,219,220,221,222,223,224,226,227,235,236,237,239,240,241,242,243,244,245,247,256,257,258,263,265,267,268,276,277,278,280,281,282,284,286,290,294,295,303,304,305,307,308,309,311,314,315) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,23,42,44,45,49,50,51,52,54,55,56,58,59,60,67,68,69,139,147,148,152,153,154,171,172,173,174,175,176,183,184,185,189,197,198,199,201,202,203,204,205,206,207,209,210,218,219,220,222,223,224,225,226,227,228,230,231,232,233,234,236,237,238,245,246,247,251,259,260,261,263,264,265,267,269,273,275,276,284,285,286,288,289,290,293,294,295) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,20,47,48,49,50,51,52,54,55,56,58,59,60,67,68,69,105,110,111,132,144,146,149,150,151,168,169,170,171,180,181,182,186,187,188,189,191,192,200,201,202,204,205,206,207,208,209,210,212,213,221,222,223,225,226,227,228,229,230,231,233,234,235,242,243,244,248,256,257,258,260,261,262,264,267,268,272,274,275,276,284,285,286,288,289,290,295,296) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,23,42,44,45,47,48,49,50,51,52,54,55,56,58,59,60,67,68,69,106,107,136,143,144,145,162,163,164,165,166,167,174,175,176,180,188,189,190,192,193,194,195,196,197,198,200,201,209,210,211,213,214,215,216,217,218,219,221,222,230,231,232,234,235,236,237,238,239,240,242,243,244,251,252,253,258,259,263,265,266,274,275,276,278,279,280,281,285,294,295,296) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,4,42,44,45,47,48,49,50,51,52,53,54,55,57,58,59,61,62,63,70,71,72,108,110,111,112,113,115,116,117,118,119,121,122,123,131,132,133,135,136,137,138,140,141,142,143,148,149,150,167,168,169,170,171,172,179,180,181,185,193,194,195,197,198,199,200,201,202,203,205,206,214,215,216,218,219,220,221,222,223,224,226,227,235,236,237,239,240,241,242,243,244,245,247,248,249,256,257,258,263,265,266,267,275,276,277,279,280,281,284,285,289,291,292,293,301,302,303,305,306,307,314,315) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,4,24,25,44,46,47,50,51,52,53,54,55,57,58,59,61,62,63,70,71,72,108,110,111,112,113,115,116,117,118,122,123,125,126,134,135,136,138,139,140,142,143,146,147,148,149,151,152,153,170,171,172,173,174,175,182,183,184,188,196,197,198,200,201,202,203,204,205,206,208,209,217,218,219,221,222,223,224,225,226,227,229,230,238,239,240,242,243,244,245,246,247,248,250,251,252,259,260,261,266,270,271,279,280,281,283,284,285,286,290,294,295,303,304,305,307,308,309,311,313,314) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,4,17,42,44,45,50,51,52,53,54,55,57,58,59,61,62,63,70,71,72,108,109,111,112,113,121,122,123,125,126,127,128,130,131,132,133,135,136,137,141,143,144,145,146,148,149,150,167,168,169,170,171,172,179,180,181,185,193,194,195,197,198,199,200,201,202,203,205,206,214,215,216,218,219,220,221,222,223,224,226,227,235,236,237,239,240,241,242,243,244,245,247,256,257,258,264,266,267,268,276,277,278,280,281,282,284,288,292,294,296,297) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,4,42,44,45,49,50,51,52,53,54,55,57,58,59,61,62,63,70,71,72,108,110,111,112,113,115,116,117,118,119,121,122,123,131,132,133,135,136,137,141,143,144,145,146,148,149,150,167,168,169,170,171,172,179,180,181,185,193,194,195,197,198,199,200,201,202,203,205,206,214,215,216,218,219,220,221,222,223,224,226,227,235,236,237,239,240,241,242,243,244,245,247,256,257,258,264,266,267,268,276,277,278,280,281,282,284,286,290,294,296,297) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,4,24,25,49,50,51,52,53,54,55,57,58,59,61,62,63,70,71,72,108,109,111,112,113,121,122,123,125,126,127,128,130,131,132,133,135,136,137,141,144,146,147,148,149,151,152,153,170,171,172,173,174,175,182,183,184,188,196,197,198,200,201,202,203,204,205,206,208,209,217,218,219,221,222,223,224,225,226,227,229,230,238,239,240,242,243,244,245,246,247,248,250,251,252,259,260,261,266,267,271,274,278,279,287,288,289,291,292,293,294,295,303,304,305,307,308,309,312,313) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,4,59,60,61,62,64,65,66,68,69,70,77,78,79,110,112,113,114,115,117,118,119,120,121,123,124,125,133,134,135,137,138,139,140,141,142,143,146,147,148,149,166,167,168,169,170,171,178,179,180,184,192,193,194,196,197,198,199,200,201,202,204,205,213,214,215,217,218,219,220,221,222,223,225,226,234,235,236,238,239,240,241,242,243,244,246,255,256,257,263,264,265,273,274,275,277,278,279,284,288,291,295,298,299) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,20,42,44,45,47,48,49,50,52,53,54,56,57,58,65,66,67,116,144,147,148,149,166,167,168,169,178,179,180,184,192,193,194,196,197,198,199,200,201,202,204,205,213,214,215,217,218,219,220,221,222,223,225,226,227,228,229,231,232,233,240,241,242,246,248,256,257,258,260,261,262,264,268,269,277,278,279,281,282,283,285,289,295,296,297) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,4,24,25,44,46,47,49,50,51,52,53,54,55,57,58,59,61,62,63,70,71,72,108,110,111,112,113,115,116,117,118,119,121,122,123,131,132,133,135,136,137,141,142,143,144,146,149,150,151,152,169,170,171,172,173,174,181,182,183,187,195,196,197,199,200,201,202,203,204,205,207,208,216,217,218,220,221,222,223,224,225,226,228,229,237,238,239,241,242,243,244,245,246,247,249,258,259,260,266,268,269,277,278,279,281,282,283,285,289,290,291,299,300,301,303,304,305,310,311,312) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "⚠️ 파일 output3691.csv 처리 중 오류 발생: Execution failed on sql '\n",
      "    WITH name_cte AS (\n",
      "        SELECT DISTINCT \"character.name\" AS name\n",
      "        FROM output\n",
      "        WHERE \"character.teamId\" IN (\n",
      "            SELECT DISTINCT \"character.teamId\"\n",
      "            FROM output\n",
      "            WHERE \"character.accountId\" IN (\n",
      "                SELECT DISTINCT substr(teamKillers_AccountId, 3, 40) FROM output\n",
      "            )\n",
      "        )\n",
      "    )\n",
      "    \n",
      "    SELECT \"attacker.name\" AS name, COUNT(damage) AS damage_count, damageTypeCategory\n",
      "    FROM output\n",
      "    WHERE \"attacker.teamId\" = \"victim.teamId\"\n",
      "      AND \"attacker.name\" IN (SELECT name FROM name_cte)\n",
      "      AND \"victim.name\" IN (SELECT name FROM name_cte)\n",
      "      AND \"attacker.name\" != \"victim.name\"\n",
      "    GROUP BY \"attacker.name\", damageTypeCategory\n",
      "    ': no such column: damage\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,4,42,44,45,52,53,54,55,57,58,59,61,62,63,70,71,72,108,112,113,115,116,124,125,126,128,129,130,131,132,133,134,136,138,140,141,142,143,145,146,147,148,149,150,167,168,169,170,171,172,179,180,181,185,193,194,195,197,198,199,200,201,202,203,205,206,214,215,216,218,219,220,221,222,223,224,226,227,235,236,237,239,240,241,242,243,244,245,247,256,257,258,263,265,266,267,275,276,277,279,280,281,287,291,293,296,297,305,306,307,309,310,311,313,314,315) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,4,59,60,61,62,64,65,66,68,69,70,77,78,79,110,112,113,114,115,117,118,119,120,121,123,124,125,133,134,135,137,138,139,140,141,142,143,146,150,151,152,169,170,171,172,181,182,183,187,195,196,197,199,200,201,202,203,204,205,207,208,216,217,218,220,221,222,223,224,225,226,228,229,237,238,239,241,242,243,244,245,246,247,249,258,259,260,266,268,269,277,278,279,281,282,283,284,288,291,292,293,301,302,303,305,306,307,312,313) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,4,24,25,26,50,51,52,53,54,55,57,58,59,61,62,63,70,71,72,108,110,111,112,113,115,116,117,118,119,121,122,123,131,132,133,135,136,137,141,142,143,144,148,149,150,167,168,169,170,171,172,179,180,181,185,193,194,195,197,198,199,200,201,202,203,205,206,214,215,216,218,219,220,221,222,223,224,226,227,235,236,237,239,240,241,242,243,244,245,247,256,257,258,263,266,267,268,276,277,278,280,281,282,284,287,288,296,297,298,300,301,302,303,307,310,314,315) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,49,50,51,52,53,54,55,57,58,59,61,62,63,70,71,72,167,168,183,245,253,254,255,257,258,259,261,263,268,269,277,278,279,281,282,283,284,288,293,297,298) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "⚠️ 파일 output3695.csv 처리 중 오류 발생: Execution failed on sql '\n",
      "    WITH name_cte AS (\n",
      "        SELECT DISTINCT \"character.name\" AS name\n",
      "        FROM output\n",
      "        WHERE \"character.teamId\" IN (\n",
      "            SELECT DISTINCT \"character.teamId\"\n",
      "            FROM output\n",
      "            WHERE \"character.accountId\" IN (\n",
      "                SELECT DISTINCT substr(teamKillers_AccountId, 3, 40) FROM output\n",
      "            )\n",
      "        )\n",
      "    )\n",
      "    \n",
      "    SELECT \"attacker.name\" AS name, COUNT(damage) AS damage_count, damageTypeCategory\n",
      "    FROM output\n",
      "    WHERE \"attacker.teamId\" = \"victim.teamId\"\n",
      "      AND \"attacker.name\" IN (SELECT name FROM name_cte)\n",
      "      AND \"victim.name\" IN (SELECT name FROM name_cte)\n",
      "      AND \"attacker.name\" != \"victim.name\"\n",
      "    GROUP BY \"attacker.name\", damageTypeCategory\n",
      "    ': no such column: damage\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,4,42,44,45,47,48,52,53,54,55,57,58,59,61,62,63,70,71,72,108,109,111,112,113,121,122,123,125,126,127,131,133,134,135,136,138,139,140,141,142,143,144,146,148,149,150,167,168,169,170,171,172,179,180,181,185,193,194,195,197,198,199,200,201,202,203,205,206,214,215,216,218,219,220,221,222,223,224,226,227,235,236,237,239,240,241,242,243,244,245,247,248,249,256,257,258,264,266,268,269,277,278,279,281,282,283,284,288,292,295,298,299) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,4,24,25,44,46,47,49,50,51,52,53,54,55,57,58,59,61,62,63,70,71,72,108,112,114,115,116,117,119,120,121,122,123,125,126,134,135,136,138,139,140,141,142,143,144,146,148,149,150,167,168,169,170,171,172,179,180,181,185,193,194,195,197,198,199,200,201,202,203,205,206,214,215,216,218,219,220,221,222,223,224,226,227,235,236,237,239,240,241,242,243,244,245,247,248,249,256,257,258,263,265,267,268,276,277,278,280,281,282,285,289,291,296,297,305,306,307,309,310,311,313,314,315) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,15,28,29,30,33,45,49,51,52,53,54,55,56,57,58,59,60,62,63,64,108,112,114,115,116,117,119,120,121,122,123,125,126,134,135,136,138,139,140,141,142,143,144,146,147,148,165,166,167,168,169,170,177,178,179,183,191,192,193,195,196,197,198,199,200,201,203,204,212,213,214,216,217,218,219,220,221,222,224,225,233,234,235,237,238,239,240,241,242,243,245,246,247,254,255,256,261,263,267,268,269,277,278,279,281,282,283,284,288,292,294,296,297) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,42,44,45,47,48,49,50,51,52,54,55,56,105,106,107,108,110,111,112,113,115,116,117,118,122,123,125,126,134,135,136,138,139,140,141,142,143,144,146,148,149,150,167,168,169,170,171,172,179,180,181,185,193,194,195,197,198,199,200,201,202,203,205,206,214,215,216,218,219,220,221,222,223,224,226,227,235,236,237,239,240,241,242,243,244,245,247,248,249,256,257,258,264,266,271,272,280,281,282,284,285,286,287,291,295,296,298,299) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,20,44,46,47,49,50,51,52,54,55,56,58,59,60,67,68,69,113,136,137,142,147,148,149,150,167,168,169,170,179,180,181,185,193,194,195,197,198,199,200,201,202,203,205,206,214,215,216,218,219,220,221,222,223,224,226,227,235,236,237,239,240,241,242,243,244,245,247,248,249,256,257,258,262,266,269,273,276,279,280,281,282,290,291,292,294,295,296) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,20,26,27,28,29,31,32,33,35,36,37,44,45,46,83,84,93,132,137,140,141,143,144,145,149,151,152,153,170,171,172,173,182,183,184,188,196,197,198,200,201,202,203,204,205,206,208,209,217,218,219,221,222,223,224,225,226,227,229,230,238,239,240,242,243,244,245,246,247,248,250,251,252,259,260,261,268,269,273,276,277,285,286,287,289,290,291,293,295,296) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "⚠️ 파일 output3702.csv 처리 중 오류 발생: Execution failed on sql '\n",
      "    WITH name_cte AS (\n",
      "        SELECT DISTINCT \"character.name\" AS name\n",
      "        FROM output\n",
      "        WHERE \"character.teamId\" IN (\n",
      "            SELECT DISTINCT \"character.teamId\"\n",
      "            FROM output\n",
      "            WHERE \"character.accountId\" IN (\n",
      "                SELECT DISTINCT substr(teamKillers_AccountId, 3, 40) FROM output\n",
      "            )\n",
      "        )\n",
      "    )\n",
      "    \n",
      "    SELECT \"attacker.name\" AS name, COUNT(damage) AS damage_count, damageTypeCategory\n",
      "    FROM output\n",
      "    WHERE \"attacker.teamId\" = \"victim.teamId\"\n",
      "      AND \"attacker.name\" IN (SELECT name FROM name_cte)\n",
      "      AND \"victim.name\" IN (SELECT name FROM name_cte)\n",
      "      AND \"attacker.name\" != \"victim.name\"\n",
      "    GROUP BY \"attacker.name\", damageTypeCategory\n",
      "    ': no such column: teamKillers_AccountId\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "⚠️ 파일 output3704.csv 처리 중 오류 발생: Execution failed on sql '\n",
      "    WITH name_cte AS (\n",
      "        SELECT DISTINCT \"character.name\" AS name\n",
      "        FROM output\n",
      "        WHERE \"character.teamId\" IN (\n",
      "            SELECT DISTINCT \"character.teamId\"\n",
      "            FROM output\n",
      "            WHERE \"character.accountId\" IN (\n",
      "                SELECT DISTINCT substr(teamKillers_AccountId, 3, 40) FROM output\n",
      "            )\n",
      "        )\n",
      "    )\n",
      "    \n",
      "    SELECT \"attacker.name\" AS name, COUNT(damage) AS damage_count, damageTypeCategory\n",
      "    FROM output\n",
      "    WHERE \"attacker.teamId\" = \"victim.teamId\"\n",
      "      AND \"attacker.name\" IN (SELECT name FROM name_cte)\n",
      "      AND \"victim.name\" IN (SELECT name FROM name_cte)\n",
      "      AND \"attacker.name\" != \"victim.name\"\n",
      "    GROUP BY \"attacker.name\", damageTypeCategory\n",
      "    ': no such column: damage\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,4,24,25,44,46,47,49,50,51,52,53,54,55,57,58,59,108,110,111,112,113,115,116,117,118,119,121,122,123,131,132,133,135,136,137,138,139,140,141,143,145,146,147,164,165,166,167,168,169,176,177,178,182,190,191,192,194,195,196,197,198,199,200,202,203,211,212,213,215,216,217,218,219,220,221,223,224,232,233,234,236,237,238,239,240,241,242,244,245,246,253,254,255,260,262,265,266,274,275,276,278,279,280,284,288,290,292,293,301,302,303,305,306,307,311,312) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,42,44,45,47,48,49,50,51,52,53,54,55,57,58,59,108,110,111,112,113,115,116,117,118,119,121,122,123,131,132,133,135,136,137,138,139,140,141,148,150,151,152,169,170,171,172,173,174,181,182,183,187,195,196,197,199,200,201,202,203,204,205,207,208,216,217,218,220,221,222,223,224,225,226,228,229,237,238,239,241,242,243,244,245,246,247,249,258,259,260,266,269,270,271,279,280,281,283,284,285,286,290,292,293,294,302,303,304,306,307,308,312,314,315) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,4,42,44,45,47,48,49,50,52,53,54,56,57,58,65,66,67,119,139,140,142,143,144,161,162,163,164,173,174,175,179,180,181,182,184,185,193,194,195,197,198,199,200,201,202,203,205,206,214,215,216,218,219,220,221,222,223,224,226,227,228,235,236,237,245,248,249,251,255,257,263,264,265,273,274,275,277,278,279,281,282) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,4,44,46,47,49,50,51,52,54,55,56,58,105,106,110,111,112,113,115,116,124,125,126,128,129,130,131,133,134,135,136,138,139,140,141,142,143,144,146,149,150,151,152,169,170,171,172,173,174,181,182,183,187,195,196,197,199,200,201,202,203,204,205,207,208,216,217,218,220,221,222,223,224,225,226,228,229,237,238,239,241,242,243,244,245,246,247,249,250,251,258,259,260,266,267,268,276,277,278,280,281,282,283,287,291,295,296,304,305,306,308,309,310,313,314) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,15,20,38,47,48,49,50,51,52,53,54,55,57,58,59,61,62,63,70,71,72,124,136,139,145,146,147,164,165,166,167,176,177,178,182,190,191,192,193,194,195,196,197,198,199,200,202,203,211,212,213,214,215,216,217,218,219,220,221,223,224,232,233,234,235,236,237,238,239,240,241,242,244,253,254,255,260,262,268,269,277,278,279,281,282,283,284,288,291,295,296) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,4,42,44,45,49,50,51,52,54,55,56,105,106,110,111,112,114,115,116,117,119,120,121,122,123,125,126,134,135,136,138,139,140,141,144,145,147,148,149,166,167,168,169,170,171,178,179,180,184,185,186,187,189,190,198,199,200,202,203,204,205,206,207,208,210,211,219,220,221,223,224,225,226,227,228,229,231,240,241,242,247,248,249,250,258,259,260,262,263,264,266,268,269,277,278,279,281,282,283,286,290,291,293,294,302,303,304,306,307,308,312,314,315) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,20,42,44,45,47,48,49,50,52,53,54,56,57,58,65,66,67,111,114,115,118,119,121,122,123,131,132,133,135,136,137,138,139,140,141,144,145,146,147,164,165,166,167,176,177,178,182,190,191,192,194,195,196,197,198,199,200,202,203,211,212,213,215,216,217,218,219,220,221,223,224,232,233,234,236,237,238,239,240,241,242,244,245,246,253,254,255,260,262,269,273,276,277,285,286,287,289,290,291,293,294) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "⚠️ 파일 output3712.csv 처리 중 오류 발생: Execution failed on sql '\n",
      "    WITH name_cte AS (\n",
      "        SELECT DISTINCT \"character.name\" AS name\n",
      "        FROM output\n",
      "        WHERE \"character.teamId\" IN (\n",
      "            SELECT DISTINCT \"character.teamId\"\n",
      "            FROM output\n",
      "            WHERE \"character.accountId\" IN (\n",
      "                SELECT DISTINCT substr(teamKillers_AccountId, 3, 40) FROM output\n",
      "            )\n",
      "        )\n",
      "    )\n",
      "    \n",
      "    SELECT \"attacker.name\" AS name, COUNT(damage) AS damage_count, damageTypeCategory\n",
      "    FROM output\n",
      "    WHERE \"attacker.teamId\" = \"victim.teamId\"\n",
      "      AND \"attacker.name\" IN (SELECT name FROM name_cte)\n",
      "      AND \"victim.name\" IN (SELECT name FROM name_cte)\n",
      "      AND \"attacker.name\" != \"victim.name\"\n",
      "    GROUP BY \"attacker.name\", damageTypeCategory\n",
      "    ': no such column: damage\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,4,42,44,45,52,53,54,55,57,58,59,61,62,63,70,71,72,108,109,111,112,113,121,122,123,125,126,127,128,130,131,132,133,135,136,137,138,139,140,141,143,145,146,147,164,165,166,167,168,169,176,177,178,182,190,191,192,194,195,196,197,198,199,200,202,203,211,212,213,215,216,217,218,219,220,221,223,224,232,233,234,236,237,238,239,240,241,242,244,253,254,255,263,266,268,269,277,278,279,281,282,283,287,291,293,294,295,303,304,305,307,308,309,313,314,315) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,4,24,25,26,27,28,52,53,54,55,57,58,59,61,62,63,70,71,72,129,130,134,135,136,153,154,155,156,165,166,167,171,172,173,174,176,177,178,179,180,182,183,184,185,186,188,197,198,199,215,217,218,219,221,229,230,231,233,234,235,236,244,245,246,248,249,250,251,259,260,261,263,264,265,266,267,275,276,277,279,280,281,283,284,288,293,295,296) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "⚠️ 파일 output3715.csv 처리 중 오류 발생: Execution failed on sql '\n",
      "    WITH name_cte AS (\n",
      "        SELECT DISTINCT \"character.name\" AS name\n",
      "        FROM output\n",
      "        WHERE \"character.teamId\" IN (\n",
      "            SELECT DISTINCT \"character.teamId\"\n",
      "            FROM output\n",
      "            WHERE \"character.accountId\" IN (\n",
      "                SELECT DISTINCT substr(teamKillers_AccountId, 3, 40) FROM output\n",
      "            )\n",
      "        )\n",
      "    )\n",
      "    \n",
      "    SELECT \"attacker.name\" AS name, COUNT(damage) AS damage_count, damageTypeCategory\n",
      "    FROM output\n",
      "    WHERE \"attacker.teamId\" = \"victim.teamId\"\n",
      "      AND \"attacker.name\" IN (SELECT name FROM name_cte)\n",
      "      AND \"victim.name\" IN (SELECT name FROM name_cte)\n",
      "      AND \"attacker.name\" != \"victim.name\"\n",
      "    GROUP BY \"attacker.name\", damageTypeCategory\n",
      "    ': no such column: teamKillers_AccountId\n",
      "⚠️ 파일 output3716.csv 처리 중 오류 발생: Execution failed on sql '\n",
      "    WITH name_cte AS (\n",
      "        SELECT DISTINCT \"character.name\" AS name\n",
      "        FROM output\n",
      "        WHERE \"character.teamId\" IN (\n",
      "            SELECT DISTINCT \"character.teamId\"\n",
      "            FROM output\n",
      "            WHERE \"character.accountId\" IN (\n",
      "                SELECT DISTINCT substr(teamKillers_AccountId, 3, 40) FROM output\n",
      "            )\n",
      "        )\n",
      "    )\n",
      "    \n",
      "    SELECT \"attacker.name\" AS name, COUNT(damage) AS damage_count, damageTypeCategory\n",
      "    FROM output\n",
      "    WHERE \"attacker.teamId\" = \"victim.teamId\"\n",
      "      AND \"attacker.name\" IN (SELECT name FROM name_cte)\n",
      "      AND \"victim.name\" IN (SELECT name FROM name_cte)\n",
      "      AND \"attacker.name\" != \"victim.name\"\n",
      "    GROUP BY \"attacker.name\", damageTypeCategory\n",
      "    ': no such column: damage\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,20,24,25,26,27,29,30,31,33,34,35,42,43,44,117,121,122,123,124,125,134,137,142,143,144,161,162,163,164,173,174,175,179,187,188,189,191,192,193,194,195,196,197,199,200,208,209,210,212,213,214,215,216,217,218,220,221,229,230,231,233,234,235,236,237,238,239,241,250,251,252,258,263,265,269,274,275) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,4,42,44,45,47,48,49,50,51,52,54,55,56,125,126,128,141,143,145,146,147,164,165,166,167,168,169,176,177,178,182,190,191,192,194,195,196,197,198,199,200,202,203,211,212,213,215,216,217,218,219,220,221,223,224,232,233,234,236,237,238,239,240,241,242,244,245,246,253,254,255,260,262,271,275,277,278,286,287,288,290,291,292,295,297,298) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "⚠️ 파일 output3718.csv 처리 중 오류 발생: Execution failed on sql '\n",
      "    WITH name_cte AS (\n",
      "        SELECT DISTINCT \"character.name\" AS name\n",
      "        FROM output\n",
      "        WHERE \"character.teamId\" IN (\n",
      "            SELECT DISTINCT \"character.teamId\"\n",
      "            FROM output\n",
      "            WHERE \"character.accountId\" IN (\n",
      "                SELECT DISTINCT substr(teamKillers_AccountId, 3, 40) FROM output\n",
      "            )\n",
      "        )\n",
      "    )\n",
      "    \n",
      "    SELECT \"attacker.name\" AS name, COUNT(damage) AS damage_count, damageTypeCategory\n",
      "    FROM output\n",
      "    WHERE \"attacker.teamId\" = \"victim.teamId\"\n",
      "      AND \"attacker.name\" IN (SELECT name FROM name_cte)\n",
      "      AND \"victim.name\" IN (SELECT name FROM name_cte)\n",
      "      AND \"attacker.name\" != \"victim.name\"\n",
      "    GROUP BY \"attacker.name\", damageTypeCategory\n",
      "    ': no such column: damage\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,13,14,16,20,26,27,35,36,37,39,40,41,42,44,45,46,47,48,49,50,51,52,53,54,55,57,58,59,61,62,63,70,71,72,108,110,111,112,113,115,116,117,118,119,121,122,123,131,132,133,135,136,137,138,139,140,141,143,145,146,147,164,165,166,167,168,169,176,177,178,182,190,191,192,194,195,196,197,198,199,200,202,203,211,212,213,215,216,217,218,219,220,221,223,224,232,233,234,236,237,238,239,240,241,242,244,245,246,253,254,255,263,265,267,268,276,277,278,280,281,282,286,290,292,293,301,302,303,305,306,307,311,313,314,315) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,23,24,25,26,27,29,30,31,33,34,35,42,43,44,132,140,143,144,146,147,148,149,151,152,153,170,171,172,173,182,183,184,188,196,197,198,200,201,202,203,204,205,206,208,209,217,218,219,221,222,223,224,225,226,227,229,230,238,239,240,242,243,244,245,246,247,248,250,259,260,261,266,268,269,277,278,279,281,282,283,285,289,292,293,301,302,303,305,306,307,309,310,311) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "⚠️ 파일 output3721.csv 처리 중 오류 발생: Execution failed on sql '\n",
      "    WITH name_cte AS (\n",
      "        SELECT DISTINCT \"character.name\" AS name\n",
      "        FROM output\n",
      "        WHERE \"character.teamId\" IN (\n",
      "            SELECT DISTINCT \"character.teamId\"\n",
      "            FROM output\n",
      "            WHERE \"character.accountId\" IN (\n",
      "                SELECT DISTINCT substr(teamKillers_AccountId, 3, 40) FROM output\n",
      "            )\n",
      "        )\n",
      "    )\n",
      "    \n",
      "    SELECT \"attacker.name\" AS name, COUNT(damage) AS damage_count, damageTypeCategory\n",
      "    FROM output\n",
      "    WHERE \"attacker.teamId\" = \"victim.teamId\"\n",
      "      AND \"attacker.name\" IN (SELECT name FROM name_cte)\n",
      "      AND \"victim.name\" IN (SELECT name FROM name_cte)\n",
      "      AND \"attacker.name\" != \"victim.name\"\n",
      "    GROUP BY \"attacker.name\", damageTypeCategory\n",
      "    ': no such column: damage\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,42,44,45,47,48,49,50,51,52,54,55,56,58,105,106,108,109,110,118,119,120,122,123,124,126,127,129,130,131,148,149,150,151,152,153,160,161,162,166,167,168,169,171,172,180,181,182,184,185,186,187,188,189,190,192,193,201,202,203,205,206,207,208,209,210,211,213,222,223,224,228,230,232,233,234,235,237,238,239,240,241,242,247,249,251,252,253,261,262,263,265,266,267,269,273,275,281,282) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "⚠️ 파일 output3723.csv 처리 중 오류 발생: Execution failed on sql '\n",
      "    WITH name_cte AS (\n",
      "        SELECT DISTINCT \"character.name\" AS name\n",
      "        FROM output\n",
      "        WHERE \"character.teamId\" IN (\n",
      "            SELECT DISTINCT \"character.teamId\"\n",
      "            FROM output\n",
      "            WHERE \"character.accountId\" IN (\n",
      "                SELECT DISTINCT substr(teamKillers_AccountId, 3, 40) FROM output\n",
      "            )\n",
      "        )\n",
      "    )\n",
      "    \n",
      "    SELECT \"attacker.name\" AS name, COUNT(damage) AS damage_count, damageTypeCategory\n",
      "    FROM output\n",
      "    WHERE \"attacker.teamId\" = \"victim.teamId\"\n",
      "      AND \"attacker.name\" IN (SELECT name FROM name_cte)\n",
      "      AND \"victim.name\" IN (SELECT name FROM name_cte)\n",
      "      AND \"attacker.name\" != \"victim.name\"\n",
      "    GROUP BY \"attacker.name\", damageTypeCategory\n",
      "    ': no such column: damage\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,4,42,44,45,49,50,51,52,54,55,56,58,59,60,67,68,69,105,106,107,108,112,114,115,116,117,119,120,121,122,123,125,126,134,135,136,138,139,140,141,143,144,145,146,149,150,151,152,169,170,171,172,173,174,181,182,183,187,195,196,197,199,200,201,202,203,204,205,207,208,216,217,218,220,221,222,223,224,225,226,228,229,237,238,239,241,242,243,244,245,246,247,249,258,259,260,264,265,273,274,275,277,278,279,282,287,291,293,297,298,306,307,308,310,311,312,313,314,315) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "⚠️ 파일 output3726.csv 처리 중 오류 발생: Execution failed on sql '\n",
      "    WITH name_cte AS (\n",
      "        SELECT DISTINCT \"character.name\" AS name\n",
      "        FROM output\n",
      "        WHERE \"character.teamId\" IN (\n",
      "            SELECT DISTINCT \"character.teamId\"\n",
      "            FROM output\n",
      "            WHERE \"character.accountId\" IN (\n",
      "                SELECT DISTINCT substr(teamKillers_AccountId, 3, 40) FROM output\n",
      "            )\n",
      "        )\n",
      "    )\n",
      "    \n",
      "    SELECT \"attacker.name\" AS name, COUNT(damage) AS damage_count, damageTypeCategory\n",
      "    FROM output\n",
      "    WHERE \"attacker.teamId\" = \"victim.teamId\"\n",
      "      AND \"attacker.name\" IN (SELECT name FROM name_cte)\n",
      "      AND \"victim.name\" IN (SELECT name FROM name_cte)\n",
      "      AND \"attacker.name\" != \"victim.name\"\n",
      "    GROUP BY \"attacker.name\", damageTypeCategory\n",
      "    ': no such column: teamKillers_AccountId\n",
      "⚠️ 파일 output3727.csv 처리 중 오류 발생: Execution failed on sql '\n",
      "    WITH name_cte AS (\n",
      "        SELECT DISTINCT \"character.name\" AS name\n",
      "        FROM output\n",
      "        WHERE \"character.teamId\" IN (\n",
      "            SELECT DISTINCT \"character.teamId\"\n",
      "            FROM output\n",
      "            WHERE \"character.accountId\" IN (\n",
      "                SELECT DISTINCT substr(teamKillers_AccountId, 3, 40) FROM output\n",
      "            )\n",
      "        )\n",
      "    )\n",
      "    \n",
      "    SELECT \"attacker.name\" AS name, COUNT(damage) AS damage_count, damageTypeCategory\n",
      "    FROM output\n",
      "    WHERE \"attacker.teamId\" = \"victim.teamId\"\n",
      "      AND \"attacker.name\" IN (SELECT name FROM name_cte)\n",
      "      AND \"victim.name\" IN (SELECT name FROM name_cte)\n",
      "      AND \"attacker.name\" != \"victim.name\"\n",
      "    GROUP BY \"attacker.name\", damageTypeCategory\n",
      "    ': no such column: damage\n",
      "⚠️ 파일 output3728.csv 처리 중 오류 발생: Execution failed on sql '\n",
      "    WITH name_cte AS (\n",
      "        SELECT DISTINCT \"character.name\" AS name\n",
      "        FROM output\n",
      "        WHERE \"character.teamId\" IN (\n",
      "            SELECT DISTINCT \"character.teamId\"\n",
      "            FROM output\n",
      "            WHERE \"character.accountId\" IN (\n",
      "                SELECT DISTINCT substr(teamKillers_AccountId, 3, 40) FROM output\n",
      "            )\n",
      "        )\n",
      "    )\n",
      "    \n",
      "    SELECT \"attacker.name\" AS name, COUNT(damage) AS damage_count, damageTypeCategory\n",
      "    FROM output\n",
      "    WHERE \"attacker.teamId\" = \"victim.teamId\"\n",
      "      AND \"attacker.name\" IN (SELECT name FROM name_cte)\n",
      "      AND \"victim.name\" IN (SELECT name FROM name_cte)\n",
      "      AND \"attacker.name\" != \"victim.name\"\n",
      "    GROUP BY \"attacker.name\", damageTypeCategory\n",
      "    ': no such column: damage\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,20,26,42,44,45,46,47,48,49,50,51,52,54,55,56,58,59,60,67,68,69,126,138,140,141,142,147,148,149,150,167,168,169,170,171,172,179,180,181,185,193,194,195,197,198,199,200,201,202,203,205,206,214,215,216,218,219,220,221,222,223,224,226,227,235,236,237,239,240,241,242,243,244,245,247,248,249,256,257,258,263,267,268,272,278,279,287,288,289,291,292,293,295,296) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,4,42,44,45,50,51,52,53,54,55,57,58,59,108,110,111,112,113,115,116,117,118,119,121,122,123,131,132,133,135,136,137,138,143,144,145,146,149,150,151,152,169,170,171,172,173,174,181,182,183,187,195,196,197,199,200,201,202,203,204,205,207,208,216,217,218,220,221,222,223,224,225,226,228,229,237,238,239,241,242,243,244,245,246,247,249,250,251,258,259,260,265,267,268,276,277,278,280,281,282,286,290,293,294,295,303,304,305,307,308,309,313,314,315) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,4,42,44,45,47,48,49,50,51,52,53,54,55,57,58,59,61,62,63,70,71,72,108,112,113,115,116,124,125,126,128,129,130,131,133,134,135,136,138,139,140,142,144,145,146,147,150,151,152,153,170,171,172,173,174,175,182,183,184,188,196,197,198,200,201,202,203,204,205,206,208,209,217,218,219,221,222,223,224,225,226,227,229,230,238,239,240,242,243,244,245,246,247,248,250,259,260,261,266,267,268,276,277,278,280,281,282,284,288,294,295,303,304,305,307,308,309,311,312,313) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,20,42,44,45,49,50,51,52,54,55,56,58,59,60,67,68,69,106,107,116,138,139,140,141,144,145,146,147,164,165,166,167,176,177,178,182,190,191,192,194,195,196,197,198,199,200,202,203,211,212,213,215,216,217,218,219,220,221,223,224,232,233,234,236,237,238,239,240,241,242,244,245,246,253,254,255,263,266,269,270,278,279,280,282,283,284,285,289,292,293) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,4,17,40,44,46,47,52,53,54,55,57,58,59,61,62,63,70,71,72,81,112,114,115,116,117,119,120,121,122,123,125,126,134,135,136,137,138,139,140,141,143,144,145,146,149,150,151,152,169,170,171,172,173,174,181,182,183,187,195,196,197,199,200,201,202,203,204,205,207,208,216,217,218,219,220,221,222,223,224,225,226,228,229,237,238,239,240,241,242,243,244,245,246,247,249,258,259,260,265,267,268,276,277,278,280,281,282,284,288,292,294,295,303,304,305,307,308,309,311,312,313) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "⚠️ 파일 output3734.csv 처리 중 오류 발생: Execution failed on sql '\n",
      "    WITH name_cte AS (\n",
      "        SELECT DISTINCT \"character.name\" AS name\n",
      "        FROM output\n",
      "        WHERE \"character.teamId\" IN (\n",
      "            SELECT DISTINCT \"character.teamId\"\n",
      "            FROM output\n",
      "            WHERE \"character.accountId\" IN (\n",
      "                SELECT DISTINCT substr(teamKillers_AccountId, 3, 40) FROM output\n",
      "            )\n",
      "        )\n",
      "    )\n",
      "    \n",
      "    SELECT \"attacker.name\" AS name, COUNT(damage) AS damage_count, damageTypeCategory\n",
      "    FROM output\n",
      "    WHERE \"attacker.teamId\" = \"victim.teamId\"\n",
      "      AND \"attacker.name\" IN (SELECT name FROM name_cte)\n",
      "      AND \"victim.name\" IN (SELECT name FROM name_cte)\n",
      "      AND \"attacker.name\" != \"victim.name\"\n",
      "    GROUP BY \"attacker.name\", damageTypeCategory\n",
      "    ': no such column: damage\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,20,44,46,47,49,50,51,52,54,55,56,58,59,60,67,68,69,105,106,107,119,138,139,140,141,146,149,151,152,153,170,171,172,173,182,183,184,188,196,197,198,200,201,202,203,204,205,206,208,209,217,218,219,221,222,223,224,225,226,227,229,230,238,239,240,242,243,244,245,246,247,248,250,251,252,259,260,261,266,268,272,275,277,278,286,287,288,290,291,292,295,296) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,15,28,43,47,49,50,52,53,54,55,56,57,58,59,60,62,63,64,66,67,68,75,76,77,108,112,113,115,116,124,125,126,127,128,129,130,131,133,134,135,136,138,139,140,141,142,143,144,147,149,150,151,168,169,170,171,180,181,182,186,194,195,196,198,199,200,201,202,203,204,206,207,215,216,217,219,220,221,222,223,224,225,227,228,236,237,238,240,241,242,243,244,245,246,248,257,258,259,265,267,268,269,277,278,279,281,282,283,286,290,291,292,300,301,302,304,305,306,308,310,314,315) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,4,59,60,61,62,64,65,66,68,69,70,77,78,79,110,112,113,114,115,117,118,119,120,121,123,124,125,133,134,135,137,138,139,140,141,142,143,148,149,150,167,168,169,170,171,172,179,180,181,185,193,194,195,197,198,199,200,201,202,203,205,206,214,215,216,218,219,220,221,222,223,224,226,227,235,236,237,239,240,241,242,243,244,245,247,256,257,258,263,266,267,268,276,277,278,280,281,282,284,285,289,290,291,299,300,301,303,304,305,308,314,315) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "⚠️ 파일 output3738.csv 처리 중 오류 발생: Execution failed on sql '\n",
      "    WITH name_cte AS (\n",
      "        SELECT DISTINCT \"character.name\" AS name\n",
      "        FROM output\n",
      "        WHERE \"character.teamId\" IN (\n",
      "            SELECT DISTINCT \"character.teamId\"\n",
      "            FROM output\n",
      "            WHERE \"character.accountId\" IN (\n",
      "                SELECT DISTINCT substr(teamKillers_AccountId, 3, 40) FROM output\n",
      "            )\n",
      "        )\n",
      "    )\n",
      "    \n",
      "    SELECT \"attacker.name\" AS name, COUNT(damage) AS damage_count, damageTypeCategory\n",
      "    FROM output\n",
      "    WHERE \"attacker.teamId\" = \"victim.teamId\"\n",
      "      AND \"attacker.name\" IN (SELECT name FROM name_cte)\n",
      "      AND \"victim.name\" IN (SELECT name FROM name_cte)\n",
      "      AND \"attacker.name\" != \"victim.name\"\n",
      "    GROUP BY \"attacker.name\", damageTypeCategory\n",
      "    ': no such column: damage\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,4,17,24,25,26,27,28,43,47,49,50,52,53,54,55,57,58,59,61,62,63,70,71,72,108,110,111,112,113,115,116,117,118,122,123,125,126,134,135,136,137,138,139,140,141,143,144,145,146,149,152,153,154,171,172,173,174,175,176,183,184,185,189,190,191,192,194,195,203,204,205,207,208,209,210,211,212,213,215,216,224,225,226,228,229,230,231,232,233,234,236,245,246,247,252,253,261,262,263,265,266,267,268,269,277,278,279,281,282,283,285,289,292,294,295,303,304,305,307,308,309,310,312,313) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,20,42,44,45,49,50,51,52,54,55,56,58,59,60,67,68,69,142,143,145,146,147,164,165,166,167,176,177,178,182,183,185,187,188,196,197,198,200,201,202,203,204,205,206,208,209,217,218,219,221,222,223,224,225,226,227,229,230,231,238,239,240,245,247,248,252,256,259,260,268,269,270,272,273,274,279,280,281,282,283,291,292,293,295,296,297,298,299) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,4,17,24,25,26,41,45,47,48,50,51,52,53,54,55,57,58,59,61,62,63,70,71,72,108,112,114,115,116,117,119,120,121,122,123,125,126,134,135,136,137,138,139,140,141,142,143,144,146,147,148,165,166,167,168,169,170,177,178,179,183,191,192,193,195,196,197,198,199,200,201,203,204,212,213,214,216,217,218,219,220,221,222,224,225,233,234,235,237,238,239,240,241,242,243,245,246,247,254,255,256,262,263,267,268,269,277,278,279,281,282,283,285,289,294,295,296,304,305,306,308,309,310,311,312,313) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,4,52,53,54,55,56,59,60,61,62,64,65,66,68,69,70,77,78,79,110,111,113,114,115,123,124,125,127,128,129,130,132,133,134,135,137,138,139,140,141,142,143,145,146,147,164,165,166,167,168,169,176,177,178,182,190,191,192,194,195,196,197,198,199,200,202,203,211,212,213,215,216,217,218,219,220,221,223,224,232,233,234,236,237,238,239,240,241,242,244,253,254,255,260,265,266,267,275,276,277,279,280,281,287,291,294,297,298) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,15,28,29,30,31,46,50,52,53,55,56,57,58,59,60,62,63,64,66,67,68,75,76,77,108,112,114,115,116,117,119,120,121,122,123,125,126,134,135,136,137,138,139,140,141,142,143,144,146,149,150,151,168,169,170,171,172,173,180,181,182,186,187,188,189,191,192,200,201,202,204,205,206,207,208,209,210,212,213,221,222,223,225,226,227,228,229,230,231,233,234,235,242,243,244,249,250,251,259,260,261,263,264,265,269,277,278,279,281,282,283,285,287,291,294,297,298,299) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,4,17,24,25,49,50,51,52,53,54,55,57,58,59,134,144,146,147,148,149,151,152,153,170,171,172,173,174,175,182,183,184,188,196,197,198,200,201,202,203,204,205,206,208,209,217,218,219,221,222,223,224,225,226,227,229,230,238,239,240,242,243,244,245,246,247,248,250,259,260,261,266,268,269,277,278,279,281,282,283,285,289,291,292,293,301,302,303,305,306,307,309,310,311) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "⚠️ 파일 output3745.csv 처리 중 오류 발생: Execution failed on sql '\n",
      "    WITH name_cte AS (\n",
      "        SELECT DISTINCT \"character.name\" AS name\n",
      "        FROM output\n",
      "        WHERE \"character.teamId\" IN (\n",
      "            SELECT DISTINCT \"character.teamId\"\n",
      "            FROM output\n",
      "            WHERE \"character.accountId\" IN (\n",
      "                SELECT DISTINCT substr(teamKillers_AccountId, 3, 40) FROM output\n",
      "            )\n",
      "        )\n",
      "    )\n",
      "    \n",
      "    SELECT \"attacker.name\" AS name, COUNT(damage) AS damage_count, damageTypeCategory\n",
      "    FROM output\n",
      "    WHERE \"attacker.teamId\" = \"victim.teamId\"\n",
      "      AND \"attacker.name\" IN (SELECT name FROM name_cte)\n",
      "      AND \"victim.name\" IN (SELECT name FROM name_cte)\n",
      "      AND \"attacker.name\" != \"victim.name\"\n",
      "    GROUP BY \"attacker.name\", damageTypeCategory\n",
      "    ': no such column: damage\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,15,28,29,30,31,50,52,53,57,58,59,60,62,63,64,66,67,68,75,76,77,108,112,113,115,116,124,125,126,128,129,130,131,133,134,135,136,138,139,140,141,144,145,147,148,149,166,167,168,169,170,171,178,179,180,184,185,186,187,189,190,198,199,200,202,203,204,205,206,207,208,210,211,219,220,221,223,224,225,226,227,228,229,231,232,233,240,241,242,247,250,251,255,257,259,260,261,262,270,271,272,274,275,276,278,279,287,288,289,291,292,293,294,302,303,304,306,307,308,311,312) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "⚠️ 파일 output3747.csv 처리 중 오류 발생: Execution failed on sql '\n",
      "    WITH name_cte AS (\n",
      "        SELECT DISTINCT \"character.name\" AS name\n",
      "        FROM output\n",
      "        WHERE \"character.teamId\" IN (\n",
      "            SELECT DISTINCT \"character.teamId\"\n",
      "            FROM output\n",
      "            WHERE \"character.accountId\" IN (\n",
      "                SELECT DISTINCT substr(teamKillers_AccountId, 3, 40) FROM output\n",
      "            )\n",
      "        )\n",
      "    )\n",
      "    \n",
      "    SELECT \"attacker.name\" AS name, COUNT(damage) AS damage_count, damageTypeCategory\n",
      "    FROM output\n",
      "    WHERE \"attacker.teamId\" = \"victim.teamId\"\n",
      "      AND \"attacker.name\" IN (SELECT name FROM name_cte)\n",
      "      AND \"victim.name\" IN (SELECT name FROM name_cte)\n",
      "      AND \"attacker.name\" != \"victim.name\"\n",
      "    GROUP BY \"attacker.name\", damageTypeCategory\n",
      "    ': no such column: damage\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,4,24,25,44,46,47,49,50,51,52,53,54,55,57,58,59,61,62,63,70,71,72,108,110,111,112,113,115,116,117,118,122,123,125,126,134,135,136,138,139,140,141,142,143,144,146,148,149,150,167,168,169,170,171,172,179,180,181,185,193,194,195,197,198,199,200,201,202,203,205,206,214,215,216,218,219,220,221,222,223,224,226,227,235,236,237,239,240,241,242,243,244,245,247,256,257,258,263,265,266,267,275,276,277,279,280,281,288,292,293,294,302,303,304,306,307,308,310,313,314) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,4,42,44,45,47,48,49,50,51,52,53,54,55,57,58,59,61,62,63,70,71,72,108,112,114,115,116,117,119,120,121,122,123,125,126,134,135,136,138,139,140,142,146,147,148,149,151,152,153,170,171,172,173,174,175,182,183,184,188,196,197,198,200,201,202,203,204,205,206,208,209,217,218,219,221,222,223,224,225,226,227,229,230,238,239,240,242,243,244,245,246,247,248,250,259,260,261,265,268,269,270,278,279,280,282,283,284,286,290,294,295,303,304,305,307,308,309,311,313,314,315) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,4,44,46,47,49,50,51,52,54,55,56,116,139,140,142,143,144,161,162,163,164,173,174,175,179,180,182,184,185,193,194,195,197,198,199,200,201,202,203,205,206,214,215,216,218,219,220,221,222,223,224,226,227,228,235,236,237,242,247,250,251,255,257,263,264) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "⚠️ 파일 output3751.csv 처리 중 오류 발생: Execution failed on sql '\n",
      "    WITH name_cte AS (\n",
      "        SELECT DISTINCT \"character.name\" AS name\n",
      "        FROM output\n",
      "        WHERE \"character.teamId\" IN (\n",
      "            SELECT DISTINCT \"character.teamId\"\n",
      "            FROM output\n",
      "            WHERE \"character.accountId\" IN (\n",
      "                SELECT DISTINCT substr(teamKillers_AccountId, 3, 40) FROM output\n",
      "            )\n",
      "        )\n",
      "    )\n",
      "    \n",
      "    SELECT \"attacker.name\" AS name, COUNT(damage) AS damage_count, damageTypeCategory\n",
      "    FROM output\n",
      "    WHERE \"attacker.teamId\" = \"victim.teamId\"\n",
      "      AND \"attacker.name\" IN (SELECT name FROM name_cte)\n",
      "      AND \"victim.name\" IN (SELECT name FROM name_cte)\n",
      "      AND \"attacker.name\" != \"victim.name\"\n",
      "    GROUP BY \"attacker.name\", damageTypeCategory\n",
      "    ': no such column: damage\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,4,42,44,45,52,53,54,55,57,58,59,61,108,110,111,112,113,115,116,117,118,119,121,122,123,131,132,133,135,136,137,141,142,143,144,146,148,149,150,167,168,169,170,171,172,179,180,181,185,193,194,195,197,198,199,200,201,202,203,205,206,214,215,216,218,219,220,221,222,223,224,226,227,235,236,237,239,240,241,242,243,244,245,247,256,257,258,265,267,268,269,277,278,279,281,282,283,285,286,290,292,295,296,304,305,306,308,309,310,313,314) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,15,20,44,46,47,52,53,54,55,57,58,59,142,143,145,146,147,164,165,166,167,168,169,176,177,178,182,183,185,187,188,196,197,198,200,201,202,203,204,205,206,208,209,217,218,219,221,222,223,224,225,226,227,229,238,239,240,244,247,249,252,256,262,263) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,23,26,42,44,45,46,47,48,49,50,51,52,54,55,56,58,105,106,107,108,109,111,112,113,121,122,123,125,126,127,128,129,130,131,133,135,136,137,138,140,141,142,144,145,146,147,164,165,166,167,168,169,176,177,178,182,190,191,192,194,195,196,197,198,199,200,202,203,211,212,213,215,216,217,218,219,220,221,223,224,232,233,234,236,237,238,239,240,241,242,244,245,246,253,254,255,263,267,268,272,275,276,284,285,286,288,289,290,295,296,297) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "⚠️ 파일 output3755.csv 처리 중 오류 발생: Execution failed on sql '\n",
      "    WITH name_cte AS (\n",
      "        SELECT DISTINCT \"character.name\" AS name\n",
      "        FROM output\n",
      "        WHERE \"character.teamId\" IN (\n",
      "            SELECT DISTINCT \"character.teamId\"\n",
      "            FROM output\n",
      "            WHERE \"character.accountId\" IN (\n",
      "                SELECT DISTINCT substr(teamKillers_AccountId, 3, 40) FROM output\n",
      "            )\n",
      "        )\n",
      "    )\n",
      "    \n",
      "    SELECT \"attacker.name\" AS name, COUNT(damage) AS damage_count, damageTypeCategory\n",
      "    FROM output\n",
      "    WHERE \"attacker.teamId\" = \"victim.teamId\"\n",
      "      AND \"attacker.name\" IN (SELECT name FROM name_cte)\n",
      "      AND \"victim.name\" IN (SELECT name FROM name_cte)\n",
      "      AND \"attacker.name\" != \"victim.name\"\n",
      "    GROUP BY \"attacker.name\", damageTypeCategory\n",
      "    ': no such column: damage\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,4,42,44,45,47,48,49,50,51,52,53,54,55,57,58,59,61,62,63,70,71,72,79,108,110,111,112,113,115,116,117,118,119,121,122,123,131,132,133,135,136,137,141,143,144,145,146,149,150,151,152,169,170,171,172,173,174,181,182,183,187,195,196,197,199,200,201,202,203,204,205,207,208,216,217,218,220,221,222,223,224,225,226,228,229,237,238,239,241,242,243,244,245,246,247,249,250,251,258,259,260,265,268,269,277,278,279,281,282,283,286,290,292,296,297,305,306,307,309,310,311,313,314,315) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,20,26,27,28,29,31,32,33,35,36,37,44,45,46,82,83,84,93,134,135,136,137,140,141,143,144,145,147,148,149,157,158,159,161,162,163,165,166,167,184,185,186,187,196,197,198,202,210,211,212,214,215,216,217,218,219,220,222,223,231,232,233,235,236,237,238,239,240,241,243,244,252,253,254,256,257,258,259,260,261,262,264,265,266,273,274,275,280,281,284,288,295,296,297) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,20,26,46,47,48,49,50,52,53,54,56,57,58,65,66,67,137,140,147,148,149,166,167,168,169,178,179,180,184,192,193,194,196,197,198,199,200,201,202,204,205,213,214,215,217,218,219,220,221,222,223,225,226,234,235,236,238,239,240,241,242,243,244,246,255,256,257,262,265,269,272,273) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "⚠️ 파일 output3758.csv 처리 중 오류 발생: Execution failed on sql '\n",
      "    WITH name_cte AS (\n",
      "        SELECT DISTINCT \"character.name\" AS name\n",
      "        FROM output\n",
      "        WHERE \"character.teamId\" IN (\n",
      "            SELECT DISTINCT \"character.teamId\"\n",
      "            FROM output\n",
      "            WHERE \"character.accountId\" IN (\n",
      "                SELECT DISTINCT substr(teamKillers_AccountId, 3, 40) FROM output\n",
      "            )\n",
      "        )\n",
      "    )\n",
      "    \n",
      "    SELECT \"attacker.name\" AS name, COUNT(damage) AS damage_count, damageTypeCategory\n",
      "    FROM output\n",
      "    WHERE \"attacker.teamId\" = \"victim.teamId\"\n",
      "      AND \"attacker.name\" IN (SELECT name FROM name_cte)\n",
      "      AND \"victim.name\" IN (SELECT name FROM name_cte)\n",
      "      AND \"attacker.name\" != \"victim.name\"\n",
      "    GROUP BY \"attacker.name\", damageTypeCategory\n",
      "    ': no such column: damage\n",
      "⚠️ 파일 output3759.csv 처리 중 오류 발생: Execution failed on sql '\n",
      "    WITH name_cte AS (\n",
      "        SELECT DISTINCT \"character.name\" AS name\n",
      "        FROM output\n",
      "        WHERE \"character.teamId\" IN (\n",
      "            SELECT DISTINCT \"character.teamId\"\n",
      "            FROM output\n",
      "            WHERE \"character.accountId\" IN (\n",
      "                SELECT DISTINCT substr(teamKillers_AccountId, 3, 40) FROM output\n",
      "            )\n",
      "        )\n",
      "    )\n",
      "    \n",
      "    SELECT \"attacker.name\" AS name, COUNT(damage) AS damage_count, damageTypeCategory\n",
      "    FROM output\n",
      "    WHERE \"attacker.teamId\" = \"victim.teamId\"\n",
      "      AND \"attacker.name\" IN (SELECT name FROM name_cte)\n",
      "      AND \"victim.name\" IN (SELECT name FROM name_cte)\n",
      "      AND \"attacker.name\" != \"victim.name\"\n",
      "    GROUP BY \"attacker.name\", damageTypeCategory\n",
      "    ': no such column: damage\n",
      "⚠️ 파일 output3760.csv 처리 중 오류 발생: Execution failed on sql '\n",
      "    WITH name_cte AS (\n",
      "        SELECT DISTINCT \"character.name\" AS name\n",
      "        FROM output\n",
      "        WHERE \"character.teamId\" IN (\n",
      "            SELECT DISTINCT \"character.teamId\"\n",
      "            FROM output\n",
      "            WHERE \"character.accountId\" IN (\n",
      "                SELECT DISTINCT substr(teamKillers_AccountId, 3, 40) FROM output\n",
      "            )\n",
      "        )\n",
      "    )\n",
      "    \n",
      "    SELECT \"attacker.name\" AS name, COUNT(damage) AS damage_count, damageTypeCategory\n",
      "    FROM output\n",
      "    WHERE \"attacker.teamId\" = \"victim.teamId\"\n",
      "      AND \"attacker.name\" IN (SELECT name FROM name_cte)\n",
      "      AND \"victim.name\" IN (SELECT name FROM name_cte)\n",
      "      AND \"attacker.name\" != \"victim.name\"\n",
      "    GROUP BY \"attacker.name\", damageTypeCategory\n",
      "    ': no such column: teamKillers_AccountId\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,4,42,44,45,49,50,51,52,53,54,55,57,58,59,61,108,112,114,115,116,117,119,120,121,122,123,125,126,134,135,136,138,139,140,141,142,143,144,147,148,150,151,152,169,170,171,172,173,174,181,182,183,187,195,196,197,199,200,201,202,203,204,205,207,208,216,217,218,220,221,222,223,224,225,226,228,229,237,238,239,241,242,243,244,245,246,247,249,258,259,260,264,265,266,274,275,276,278,279,280,284,286,290,295,298,299,307,308,309,311,312,313,314,315) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,20,24,25,26,27,28,29,31,32,33,35,36,37,44,45,46,82,83,84,85,87,88,89,90,92,93,94,96,97,99,100,116,124,125,126,128,129,130,131,132,133,134,140,143,144,146,147,148,149,150,151,168,169,170,171,180,181,182,186,194,195,196,198,199,200,201,202,203,204,206,207,215,216,217,219,220,221,222,223,224,225,227,228,236,237,238,240,241,242,243,244,245,246,248,249,250,257,258,259,263,266,268,272,274,281,282) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "⚠️ 파일 output3764.csv 처리 중 오류 발생: Execution failed on sql '\n",
      "    WITH name_cte AS (\n",
      "        SELECT DISTINCT \"character.name\" AS name\n",
      "        FROM output\n",
      "        WHERE \"character.teamId\" IN (\n",
      "            SELECT DISTINCT \"character.teamId\"\n",
      "            FROM output\n",
      "            WHERE \"character.accountId\" IN (\n",
      "                SELECT DISTINCT substr(teamKillers_AccountId, 3, 40) FROM output\n",
      "            )\n",
      "        )\n",
      "    )\n",
      "    \n",
      "    SELECT \"attacker.name\" AS name, COUNT(damage) AS damage_count, damageTypeCategory\n",
      "    FROM output\n",
      "    WHERE \"attacker.teamId\" = \"victim.teamId\"\n",
      "      AND \"attacker.name\" IN (SELECT name FROM name_cte)\n",
      "      AND \"victim.name\" IN (SELECT name FROM name_cte)\n",
      "      AND \"attacker.name\" != \"victim.name\"\n",
      "    GROUP BY \"attacker.name\", damageTypeCategory\n",
      "    ': no such column: damage\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,4,17,42,44,45,52,53,54,55,57,58,59,61,62,63,70,71,72,108,109,111,112,113,121,122,123,124,125,126,127,128,130,131,132,133,135,136,137,138,139,140,141,147,148,149,150,167,168,169,170,171,172,179,180,181,185,193,194,195,197,198,199,200,201,202,203,205,206,214,215,216,218,219,220,221,222,223,224,226,227,235,236,237,239,240,241,242,243,244,245,247,248,249,256,257,258,262,265,267,268,276,277,278,280,281,282,284,288,293,294,295) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,4,42,44,45,49,50,51,52,54,55,56,58,59,60,67,68,69,136,142,143,145,146,147,164,165,166,167,168,169,176,177,178,182,183,185,187,188,196,197,198,200,201,202,203,204,205,206,208,209,217,218,219,221,222,223,224,225,226,227,229,238,239,240,245,247,251,252,256,259,263,264) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,17,38,52,53,54,55,57,58,59,134,170,171,186,205,247,251,252,260,261,262,264,265,266,268,269,277,278,279,281,282,283,284,285,289,290,291,299,300,301,303,304,305,309,310,311) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,15,28,46,50,52,53,57,58,59,60,62,63,64,66,67,68,75,76,77,108,112,114,115,116,117,119,120,121,122,123,125,126,134,135,136,137,138,139,140,141,142,143,144,146,148,149,150,167,168,169,170,179,180,181,185,193,194,195,197,198,199,200,201,202,203,205,206,214,215,216,217,218,219,220,221,222,223,224,226,227,235,236,237,238,239,240,241,242,243,244,245,247,256,257,258,264,267,270,271,279,280,281,282,283,284,285,286,287,291,295,298,299) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,4,59,60,61,62,64,65,66,68,69,70,77,78,79,110,112,113,114,115,117,118,119,120,121,123,124,125,133,134,135,137,138,139,140,141,142,143,145,146,147,164,165,166,167,168,169,176,177,178,182,190,191,192,194,195,196,197,198,199,200,202,203,211,212,213,215,216,217,218,219,220,221,223,224,232,233,234,236,237,238,239,240,241,242,244,253,254,255,260,262,264,266,267,275,276,277,279,280,281,283,287,289,292,293) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "⚠️ 파일 output3769.csv 처리 중 오류 발생: Execution failed on sql '\n",
      "    WITH name_cte AS (\n",
      "        SELECT DISTINCT \"character.name\" AS name\n",
      "        FROM output\n",
      "        WHERE \"character.teamId\" IN (\n",
      "            SELECT DISTINCT \"character.teamId\"\n",
      "            FROM output\n",
      "            WHERE \"character.accountId\" IN (\n",
      "                SELECT DISTINCT substr(teamKillers_AccountId, 3, 40) FROM output\n",
      "            )\n",
      "        )\n",
      "    )\n",
      "    \n",
      "    SELECT \"attacker.name\" AS name, COUNT(damage) AS damage_count, damageTypeCategory\n",
      "    FROM output\n",
      "    WHERE \"attacker.teamId\" = \"victim.teamId\"\n",
      "      AND \"attacker.name\" IN (SELECT name FROM name_cte)\n",
      "      AND \"victim.name\" IN (SELECT name FROM name_cte)\n",
      "      AND \"attacker.name\" != \"victim.name\"\n",
      "    GROUP BY \"attacker.name\", damageTypeCategory\n",
      "    ': no such column: damage\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,4,59,60,61,62,64,65,66,68,69,70,77,78,79,110,111,113,114,115,123,124,125,127,128,129,130,132,133,134,135,137,138,139,140,141,142,143,145,146,147,164,165,166,167,168,169,176,177,178,182,190,191,192,194,195,196,197,198,199,200,202,203,211,212,213,215,216,217,218,219,220,221,223,224,232,233,234,236,237,238,239,240,241,242,244,253,254,255,260,263,265,266,274,275,276,278,279,280,284,285,289,292,293,301,302,303,305,306,307,309,314,315) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,49,50,51,52,54,55,56,58,59,60,67,68,69,143,144,145,146,149,150,151,152,169,170,171,172,181,182,183,187,195,196,197,199,200,201,202,203,204,205,207,208,216,217,218,220,221,222,223,224,225,226,228,229,237,238,239,241,242,243,244,245,246,247,249,258,259,260,267,268,269,277,278,279,281,282,283,285,289,293,296,297,305,306,307,309,310,311,313,314,315) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,15,28,43,47,49,50,52,53,54,57,58,59,60,62,63,64,66,67,68,75,76,77,108,112,114,115,116,117,119,120,121,122,123,125,126,134,135,136,137,138,139,140,141,142,143,144,146,148,149,150,167,168,169,170,171,172,179,180,181,185,193,194,195,196,197,198,199,200,201,202,203,205,206,214,215,216,217,218,219,220,221,222,223,224,226,227,235,236,237,238,239,240,241,242,243,244,245,247,248,249,256,257,258,263,266,268,269,277,278,279,280,281,282,283,286,290,291,292,300,301,302,304,305,306,310,313,314) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,20,24,25,44,46,47,49,50,51,52,54,55,56,58,59,60,67,68,69,126,147,149,151,152,153,170,171,172,173,182,183,184,188,196,197,198,200,201,202,203,204,205,206,208,209,217,218,219,221,222,223,224,225,226,227,229,230,238,239,240,242,243,244,245,246,247,248,250,251,252,259,260,261,266,269,270,274,276,277,285,286,287,289,290,291,294,295,296) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,4,42,44,45,47,48,49,50,51,52,54,55,56,58,59,60,67,68,69,105,106,108,109,110,118,119,120,122,123,124,125,126,127,128,130,131,132,133,135,136,137,138,143,144,145,146,148,149,150,167,168,169,170,171,172,179,180,181,185,193,194,195,197,198,199,200,201,202,203,205,206,214,215,216,218,219,220,221,222,223,224,226,227,235,236,237,239,240,241,242,243,244,245,247,248,249,256,257,258,263,265,266,267,275,276,277,279,280,281,287,288,292,295,296,297,305,306,307,309,310,311,314,315) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "⚠️ 파일 output3776.csv 처리 중 오류 발생: Execution failed on sql '\n",
      "    WITH name_cte AS (\n",
      "        SELECT DISTINCT \"character.name\" AS name\n",
      "        FROM output\n",
      "        WHERE \"character.teamId\" IN (\n",
      "            SELECT DISTINCT \"character.teamId\"\n",
      "            FROM output\n",
      "            WHERE \"character.accountId\" IN (\n",
      "                SELECT DISTINCT substr(teamKillers_AccountId, 3, 40) FROM output\n",
      "            )\n",
      "        )\n",
      "    )\n",
      "    \n",
      "    SELECT \"attacker.name\" AS name, COUNT(damage) AS damage_count, damageTypeCategory\n",
      "    FROM output\n",
      "    WHERE \"attacker.teamId\" = \"victim.teamId\"\n",
      "      AND \"attacker.name\" IN (SELECT name FROM name_cte)\n",
      "      AND \"victim.name\" IN (SELECT name FROM name_cte)\n",
      "      AND \"attacker.name\" != \"victim.name\"\n",
      "    GROUP BY \"attacker.name\", damageTypeCategory\n",
      "    ': no such column: damage\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,17,47,48,49,50,51,52,53,54,55,57,58,59,61,62,63,70,71,72,138,141,149,150,151,168,169,170,171,180,181,182,186,194,195,196,198,199,200,201,202,203,204,206,207,215,216,217,219,220,221,222,223,224,225,227,228,229,230,231,233,242,243,244,248,256,257,258,260,261,262,265,266,267,275,276,277,279,280,281,283,285,289,291,292,293) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,4,17,25,26,41,52,53,54,55,57,58,59,61,62,63,70,71,72,137,148,149,150,167,168,169,170,171,172,179,180,181,185,193,194,195,197,198,199,200,201,202,203,205,206,214,215,216,218,219,220,221,222,223,224,226,227,235,236,237,239,240,241,242,243,244,245,247,256,257,258,263,265,267,268,276,277,278,279,280,281,282,284,288,290,294,295) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,4,54,55,56,59,60,61,62,64,65,66,68,69,70,77,78,79,141,142,144,145,146,163,164,165,166,175,176,177,181,182,183,184,186,187,195,196,197,199,200,201,202,203,204,205,207,208,216,217,218,220,221,222,223,224,225,226,228,237,238,239,244,246,247,248,249,257,258,259,261,262,263,264,265,273,274,275,277,278,279,281,283,287,289,290,291,292) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,4,24,25,26,27,29,30,31,87,88,89,96,97,98,106,125,139,140,141,142,144,148,152,153,154) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "⚠️ 파일 output3780.csv 처리 중 오류 발생: Execution failed on sql '\n",
      "    WITH name_cte AS (\n",
      "        SELECT DISTINCT \"character.name\" AS name\n",
      "        FROM output\n",
      "        WHERE \"character.teamId\" IN (\n",
      "            SELECT DISTINCT \"character.teamId\"\n",
      "            FROM output\n",
      "            WHERE \"character.accountId\" IN (\n",
      "                SELECT DISTINCT substr(teamKillers_AccountId, 3, 40) FROM output\n",
      "            )\n",
      "        )\n",
      "    )\n",
      "    \n",
      "    SELECT \"attacker.name\" AS name, COUNT(damage) AS damage_count, damageTypeCategory\n",
      "    FROM output\n",
      "    WHERE \"attacker.teamId\" = \"victim.teamId\"\n",
      "      AND \"attacker.name\" IN (SELECT name FROM name_cte)\n",
      "      AND \"victim.name\" IN (SELECT name FROM name_cte)\n",
      "      AND \"attacker.name\" != \"victim.name\"\n",
      "    GROUP BY \"attacker.name\", damageTypeCategory\n",
      "    ': no such column: teamKillers_AccountId\n",
      "⚠️ 파일 output3781.csv 처리 중 오류 발생: Execution failed on sql '\n",
      "    WITH name_cte AS (\n",
      "        SELECT DISTINCT \"character.name\" AS name\n",
      "        FROM output\n",
      "        WHERE \"character.teamId\" IN (\n",
      "            SELECT DISTINCT \"character.teamId\"\n",
      "            FROM output\n",
      "            WHERE \"character.accountId\" IN (\n",
      "                SELECT DISTINCT substr(teamKillers_AccountId, 3, 40) FROM output\n",
      "            )\n",
      "        )\n",
      "    )\n",
      "    \n",
      "    SELECT \"attacker.name\" AS name, COUNT(damage) AS damage_count, damageTypeCategory\n",
      "    FROM output\n",
      "    WHERE \"attacker.teamId\" = \"victim.teamId\"\n",
      "      AND \"attacker.name\" IN (SELECT name FROM name_cte)\n",
      "      AND \"victim.name\" IN (SELECT name FROM name_cte)\n",
      "      AND \"attacker.name\" != \"victim.name\"\n",
      "    GROUP BY \"attacker.name\", damageTypeCategory\n",
      "    ': no such column: damage\n",
      "⚠️ 파일 output3782.csv 처리 중 오류 발생: Execution failed on sql '\n",
      "    WITH name_cte AS (\n",
      "        SELECT DISTINCT \"character.name\" AS name\n",
      "        FROM output\n",
      "        WHERE \"character.teamId\" IN (\n",
      "            SELECT DISTINCT \"character.teamId\"\n",
      "            FROM output\n",
      "            WHERE \"character.accountId\" IN (\n",
      "                SELECT DISTINCT substr(teamKillers_AccountId, 3, 40) FROM output\n",
      "            )\n",
      "        )\n",
      "    )\n",
      "    \n",
      "    SELECT \"attacker.name\" AS name, COUNT(damage) AS damage_count, damageTypeCategory\n",
      "    FROM output\n",
      "    WHERE \"attacker.teamId\" = \"victim.teamId\"\n",
      "      AND \"attacker.name\" IN (SELECT name FROM name_cte)\n",
      "      AND \"victim.name\" IN (SELECT name FROM name_cte)\n",
      "      AND \"attacker.name\" != \"victim.name\"\n",
      "    GROUP BY \"attacker.name\", damageTypeCategory\n",
      "    ': no such column: damage\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,4,52,53,54,55,57,58,59,61,139,143,146,147,148,165,166,167,168,169,170,177,178,179,183,184,185,186,188,189,197,198,199,201,202,203,204,205,206,207,209,210,218,219,220,222,223,224,225,226,227,228,230,231,232,239,240,241,246,254,255,256,258,259,260,262,267,268,269,277,278,279,281,282,283,284,288,290,293,298,299) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,15,28,31,47,49,50,51,52,53,54,55,57,58,59,61,62,63,70,71,72,103,104,105,106,107,108,110,111,112,113,115,116,117,118,119,121,122,123,131,132,133,134,135,136,137,138,139,140,141,147,148,149,150,167,168,169,170,179,180,181,185,193,194,195,197,198,199,200,201,202,203,205,206,214,215,216,218,219,220,221,222,223,224,226,227,235,236,237,239,240,241,242,243,244,245,247,256,257,258,264,268,271,272,280,281,282,284,285,286,287,290,291,294,295,296) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,4,42,44,45,47,48,49,50,51,52,53,54,55,57,58,59,61,62,63,70,71,72,108,110,111,112,113,115,116,117,118,119,121,122,123,131,132,133,135,136,137,138,139,140,141,146,148,149,150,167,168,169,170,171,172,179,180,181,185,193,194,195,197,198,199,200,201,202,203,205,206,214,215,216,218,219,220,221,222,223,224,226,227,235,236,237,239,240,241,242,243,244,245,247,256,257,258,263,265,266,274,275,276,278,279,280,284,286,287,291,292,293,301,302,303,305,306,307,311,314,315) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,15,28,47,49,50,54,55,56,57,58,59,60,62,63,64,66,67,68,75,76,77,108,112,113,115,116,124,125,126,128,129,130,131,133,134,135,136,138,139,140,142,143,145,146,147,164,165,166,167,176,177,178,182,183,184,185,187,188,196,197,198,200,201,202,203,204,205,206,208,209,217,218,219,221,222,223,224,225,226,227,229,238,239,240,244,246,247,249,251,252,260,261,262,264,265,266,268,269,277,278,279,281,282,283,287,291,293,294,297,298,306,307,308,310,311,312,314,315) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "⚠️ 파일 output3787.csv 처리 중 오류 발생: Execution failed on sql '\n",
      "    WITH name_cte AS (\n",
      "        SELECT DISTINCT \"character.name\" AS name\n",
      "        FROM output\n",
      "        WHERE \"character.teamId\" IN (\n",
      "            SELECT DISTINCT \"character.teamId\"\n",
      "            FROM output\n",
      "            WHERE \"character.accountId\" IN (\n",
      "                SELECT DISTINCT substr(teamKillers_AccountId, 3, 40) FROM output\n",
      "            )\n",
      "        )\n",
      "    )\n",
      "    \n",
      "    SELECT \"attacker.name\" AS name, COUNT(damage) AS damage_count, damageTypeCategory\n",
      "    FROM output\n",
      "    WHERE \"attacker.teamId\" = \"victim.teamId\"\n",
      "      AND \"attacker.name\" IN (SELECT name FROM name_cte)\n",
      "      AND \"victim.name\" IN (SELECT name FROM name_cte)\n",
      "      AND \"attacker.name\" != \"victim.name\"\n",
      "    GROUP BY \"attacker.name\", damageTypeCategory\n",
      "    ': no such column: damage\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,4,17,42,44,45,52,53,54,55,57,58,59,108,110,111,112,113,115,116,117,118,119,121,122,123,131,132,133,134,135,136,137,138,145,146,147,148,149,151,152,153,170,171,172,173,174,175,182,183,184,188,196,197,198,200,201,202,203,204,205,206,208,209,217,218,219,221,222,223,224,225,226,227,229,230,238,239,240,242,243,244,245,246,247,248,250,251,252,259,260,261,266,267,268,276,277,278,280,281,282,286,290,291,292,300,301,302,304,305,306,310,311,312) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,20,42,44,45,47,48,49,50,51,52,54,55,56,58,59,60,67,68,69,125,126,127,136,138,139,140,141,146,148,149,150,167,168,169,170,179,180,181,185,193,194,195,197,198,199,200,201,202,203,205,206,214,215,216,218,219,220,221,222,223,224,226,227,235,236,237,239,240,241,242,243,244,245,247,248,249,256,257,258,263,265,269,273,274,275,283,284,285,287,288,289,291,294,295) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,4,24,25,44,46,47,49,50,51,52,54,55,56,58,59,60,67,68,69,113,116,117,139,140,142,143,144,161,162,163,164,173,174,175,179,180,181,182,184,185,193,194,195,197,198,199,200,201,202,203,205,206,214,215,216,218,219,220,221,222,223,224,226,227,228,235,236,237,242,243,246,251,255,258,261,262,263,271,272,273,275,276,277,278,279) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "⚠️ 파일 output3791.csv 처리 중 오류 발생: Execution failed on sql '\n",
      "    WITH name_cte AS (\n",
      "        SELECT DISTINCT \"character.name\" AS name\n",
      "        FROM output\n",
      "        WHERE \"character.teamId\" IN (\n",
      "            SELECT DISTINCT \"character.teamId\"\n",
      "            FROM output\n",
      "            WHERE \"character.accountId\" IN (\n",
      "                SELECT DISTINCT substr(teamKillers_AccountId, 3, 40) FROM output\n",
      "            )\n",
      "        )\n",
      "    )\n",
      "    \n",
      "    SELECT \"attacker.name\" AS name, COUNT(damage) AS damage_count, damageTypeCategory\n",
      "    FROM output\n",
      "    WHERE \"attacker.teamId\" = \"victim.teamId\"\n",
      "      AND \"attacker.name\" IN (SELECT name FROM name_cte)\n",
      "      AND \"victim.name\" IN (SELECT name FROM name_cte)\n",
      "      AND \"attacker.name\" != \"victim.name\"\n",
      "    GROUP BY \"attacker.name\", damageTypeCategory\n",
      "    ': no such column: damage\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,15,28,45,49,51,52,55,56,57,58,59,60,62,63,64,108,110,111,112,113,115,116,117,118,122,123,125,126,134,135,136,137,138,139,140,141,142,143,144,146,147,148,165,166,167,168,169,170,177,178,179,183,191,192,193,194,195,196,197,198,199,200,201,203,204,212,213,214,215,216,217,218,219,220,221,222,224,225,233,234,235,236,237,238,239,240,241,242,243,245,254,255,256,260,263,265,268,269,277,278,279,280,281,282,283,285,289,291,292,300,301,302,304,305,306,311,312,313) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,25,31,47,49,50,51,52,53,54,55,57,58,59,61,62,63,70,71,72,103,104,105,106,108,109,110,111,113,114,115,116,117,119,120,121,129,130,131,133,134,135,136,137,138,139,141,142,144,146,147,148,165,166,167,168,177,178,179,183,191,192,193,195,196,197,198,199,200,201,203,204,212,213,214,216,217,218,219,220,221,222,224,225,233,234,235,237,238,239,240,241,242,243,245,254,255,256,261,265,272,273) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,17,42,44,45,52,53,54,55,57,58,59,108,110,111,112,113,115,116,117,118,119,121,122,123,131,132,133,135,136,137,139,140,142,143,144,161,162,163,164,165,166,173,174,175,179,180,181,182,184,185,193,194,195,197,198,199,200,201,202,203,205,206,214,215,216,218,219,220,221,222,223,224,226,227,228,235,236,237,241,244,246,251,252,253,261,262,263,265,266,267,269,273,278,279,287,288,289,291,292,293,296,297,298,306,307,308,310,311,312,313,314) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,20,24,25,26,27,29,30,31,33,34,35,42,43,44,80,81,82,120,132,137,138,140,141,142,146,149,150,151,152,169,170,171,172,181,182,183,187,195,196,197,199,200,201,202,203,204,205,207,208,216,217,218,220,221,222,223,224,225,226,228,229,237,238,239,241,242,243,244,245,246,247,249,250,251,258,259,260,266,268,272,275,276,284,285,286,288,289,290,292,293) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,4,17,24,25,44,46,47,49,50,51,52,53,54,55,57,58,59,61,62,63,70,71,72,108,110,111,112,113,115,116,117,118,122,123,125,126,134,135,136,137,138,139,140,141,143,144,145,146,149,150,151,152,169,170,171,172,173,174,181,182,183,187,195,196,197,199,200,201,202,203,204,205,207,208,216,217,218,220,221,222,223,224,225,226,228,229,237,238,239,241,242,243,244,245,246,247,249,258,259,260,265,268,269,277,278,279,281,282,283,284,288,289,293,294,295,303,304,305,307,308,309,312,313) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,4,42,44,45,47,48,49,50,51,52,53,54,55,57,58,59,61,62,63,70,71,72,108,112,114,115,116,117,119,120,121,122,123,125,126,134,135,136,138,139,140,141,142,143,144,146,148,149,150,167,168,169,170,171,172,179,180,181,185,193,194,195,197,198,199,200,201,202,203,205,206,214,215,216,218,219,220,221,222,223,224,226,227,235,236,237,239,240,241,242,243,244,245,247,256,257,258,263,264,265,273,274,275,277,278,279,281,285,289,291,293,294,302,303,304,306,307,308,311,312,313) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,4,42,44,45,47,48,49,50,51,52,54,55,56,58,59,60,67,68,69,105,107,108,109,110,112,113,114,115,116,117,118,120,121,123,124,125,133,134,135,137,138,139,140,141,142,143,148,150,151,152,153,170,171,172,173,174,175,182,183,184,188,196,197,198,200,201,202,203,204,205,206,208,209,217,218,219,221,222,223,224,225,226,227,229,230,238,239,240,242,243,244,245,246,247,248,250,251,252,259,260,261,265,266,274,275,276,278,279,280,282,285,289,297,298,299,307,308,309,311,312,313,314,315) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,4,42,44,45,52,53,54,55,57,58,59,61,62,63,70,71,72,108,110,111,112,113,115,116,117,118,122,123,125,126,134,135,136,138,139,140,141,142,143,144,146,148,149,150,167,168,169,170,171,172,179,180,181,185,193,194,195,197,198,199,200,201,202,203,205,206,214,215,216,218,219,220,221,222,223,224,226,227,235,236,237,239,240,241,242,243,244,245,247,256,257,258,264,266,267,268,269,277,278,279,281,282,283,287,291,293,298,299) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,4,42,44,45,49,50,51,52,53,54,55,57,58,59,61,62,63,70,71,72,107,108,110,111,112,120,121,122,124,125,126,131,133,134,135,136,138,139,140,141,142,143,144,146,148,149,150,167,168,169,170,171,172,179,180,181,185,193,194,195,197,198,199,200,201,202,203,205,206,214,215,216,218,219,220,221,222,223,224,226,227,235,236,237,239,240,241,242,243,244,245,247,248,249,256,257,258,264,266,267,268,276,277,278,280,281,282,284,285,286,294,295,296,298,299,300,301,305,308,314,315) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,20,26,27,28,29,31,32,33,35,129,132,133,135,136,137,138,139,140,141,144,149,151,152,153,170,171,172,173,182,183,184,188,196,197,198,200,201,202,203,204,205,206,208,209,217,218,219,221,222,223,224,225,226,227,229,230,238,239,240,242,243,244,245,246,247,248,250,259,260,261,265,266,274,275,276,278,279,280,282,283,287,292,293,301,302,303,305,306,307,309,311,312) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,4,42,44,45,47,48,49,50,51,52,53,54,55,57,58,59,61,62,63,70,71,72,108,110,111,112,113,115,116,117,118,119,121,122,123,131,132,133,135,136,137,140,141,142,143,148,150,151,152,169,170,171,172,173,174,181,182,183,187,195,196,197,199,200,201,202,203,204,205,207,208,216,217,218,220,221,222,223,224,225,226,228,229,237,238,239,241,242,243,244,245,246,247,249,258,259,260,265,268,269,270,278,279,280,282,283,284,286,287,291,293,298,299) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,4,44,46,47,49,50,51,52,54,55,56,58,59,60,67,68,69,105,106,108,109,110,118,119,120,122,123,124,125,126,127,131,133,134,135,136,138,139,140,142,143,144,145,148,149,151,152,153,170,171,172,173,174,175,182,183,184,188,196,197,198,200,201,202,203,204,205,206,208,209,217,218,219,221,222,223,224,225,226,227,229,230,238,239,240,242,243,244,245,246,247,248,250,251,252,259,260,261,266,268,269,277,278,279,281,282,283,285,289,293,294,295) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,20,44,46,47,49,50,51,52,54,55,56,58,59,60,67,68,69,105,106,107,116,118,122,123,125,126,134,135,136,138,139,140,142,143,144,145,146,149,150,151,168,169,170,171,180,181,182,186,194,195,196,198,199,200,201,202,203,204,206,207,215,216,217,219,220,221,222,223,224,225,227,228,236,237,238,240,241,242,243,244,245,246,248,257,258,259,263,266,268,272,273,274,282,283,284,286,287,288,294,295) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,4,17,24,25,44,46,47,49,50,51,52,53,54,55,57,58,59,61,62,63,70,71,72,108,109,111,112,113,121,122,123,124,125,126,127,131,133,134,135,136,138,139,140,141,142,143,144,146,149,150,151,152,169,170,171,172,173,174,181,182,183,187,195,196,197,199,200,201,202,203,204,205,207,208,216,217,218,220,221,222,223,224,225,226,228,229,237,238,239,241,242,243,244,245,246,247,249,258,259,260,265,266,274,275,276,278,279,280,282,287,291,293,296,297,305,306,307,309,310,311,313,314,315) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,20,42,44,45,49,50,51,52,54,55,56,58,59,60,67,68,69,126,141,147,149,150,151,168,169,170,171,180,181,182,186,194,195,196,198,199,200,201,202,203,204,206,207,215,216,217,219,220,221,222,223,224,225,227,228,229,230,231,233,234,235,242,243,244,249,251,259,260,261,263,264,265,267,268,269,277,278,279,281,282,283,285,289,292,293,294) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,4,42,44,45,47,48,49,50,51,52,53,54,55,57,58,59,61,62,63,70,71,72,108,112,114,115,116,117,119,120,121,122,123,125,126,134,135,136,138,139,140,141,142,143,144,146,149,150,151,168,169,170,171,180,181,182,186,187,188,189,191,192,200,201,202,204,205,206,207,208,209,210,212,213,221,222,223,225,226,227,228,229,230,231,233,234,235,242,243,244,248,256,257,258,260,261,262,264,267,268,269,277,278,279,281,282,283,284,288,291,292,293,301,302,303,305,306,307,309,310,311) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,4,17,24,25,40,44,46,47,49,50,51,52,53,54,55,57,58,59,61,62,63,70,71,72,108,110,111,112,113,115,116,117,118,122,123,125,126,134,135,136,137,138,139,140,142,143,144,145,146,148,150,151,152,169,170,171,172,173,174,181,182,183,187,195,196,197,199,200,201,202,203,204,205,207,208,216,217,218,219,220,221,222,223,224,225,226,228,229,237,238,239,240,241,242,243,244,245,246,247,249,258,259,260,265,267,268,276,277,278,280,281,282,283,287,290,292,293,301,302,303,305,306,307,308,312,313) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,20,42,44,45,47,48,49,50,51,52,54,55,56,58,59,60,67,68,69,116,141,142,143,144,148,149,151,152,153,170,171,172,173,182,183,184,188,196,197,198,200,201,202,203,204,205,206,208,209,217,218,219,221,222,223,224,225,226,227,229,230,238,239,240,242,243,244,245,246,247,248,250,251,252,259,260,261,269,270,278,279,280,282,283,284,286,287,291,296,297,298) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,4,42,44,45,47,48,49,50,51,52,53,54,55,57,58,59,61,62,63,70,71,72,108,110,111,112,113,115,116,117,118,119,121,122,123,131,132,133,135,136,137,138,139,140,141,143,145,146,147,164,165,166,167,168,169,176,177,178,182,190,191,192,194,195,196,197,198,199,200,202,203,211,212,213,215,216,217,218,219,220,221,223,224,232,233,234,236,237,238,239,240,241,242,244,245,246,253,254,255,263,266,270,271,279,280,281,283,284,285,286,290,292,295,296,304,305,306,308,309,310,313,314) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,4,52,53,54,55,57,58,59,61,62,63,70,71,72,171,172,263,265,267,268,276,277,278,280,281,282,284,288,294,295) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "⚠️ 파일 output3811.csv 처리 중 오류 발생: Execution failed on sql '\n",
      "    WITH name_cte AS (\n",
      "        SELECT DISTINCT \"character.name\" AS name\n",
      "        FROM output\n",
      "        WHERE \"character.teamId\" IN (\n",
      "            SELECT DISTINCT \"character.teamId\"\n",
      "            FROM output\n",
      "            WHERE \"character.accountId\" IN (\n",
      "                SELECT DISTINCT substr(teamKillers_AccountId, 3, 40) FROM output\n",
      "            )\n",
      "        )\n",
      "    )\n",
      "    \n",
      "    SELECT \"attacker.name\" AS name, COUNT(damage) AS damage_count, damageTypeCategory\n",
      "    FROM output\n",
      "    WHERE \"attacker.teamId\" = \"victim.teamId\"\n",
      "      AND \"attacker.name\" IN (SELECT name FROM name_cte)\n",
      "      AND \"victim.name\" IN (SELECT name FROM name_cte)\n",
      "      AND \"attacker.name\" != \"victim.name\"\n",
      "    GROUP BY \"attacker.name\", damageTypeCategory\n",
      "    ': no such column: damage\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "⚠️ 파일 output3813.csv 처리 중 오류 발생: Execution failed on sql '\n",
      "    WITH name_cte AS (\n",
      "        SELECT DISTINCT \"character.name\" AS name\n",
      "        FROM output\n",
      "        WHERE \"character.teamId\" IN (\n",
      "            SELECT DISTINCT \"character.teamId\"\n",
      "            FROM output\n",
      "            WHERE \"character.accountId\" IN (\n",
      "                SELECT DISTINCT substr(teamKillers_AccountId, 3, 40) FROM output\n",
      "            )\n",
      "        )\n",
      "    )\n",
      "    \n",
      "    SELECT \"attacker.name\" AS name, COUNT(damage) AS damage_count, damageTypeCategory\n",
      "    FROM output\n",
      "    WHERE \"attacker.teamId\" = \"victim.teamId\"\n",
      "      AND \"attacker.name\" IN (SELECT name FROM name_cte)\n",
      "      AND \"victim.name\" IN (SELECT name FROM name_cte)\n",
      "      AND \"attacker.name\" != \"victim.name\"\n",
      "    GROUP BY \"attacker.name\", damageTypeCategory\n",
      "    ': no such column: damage\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,4,17,52,53,54,55,57,58,59,169,170,183,191,192,193,195,196,197,200,219,263,265,266,267,275,276,277,279,280,281,284,288,291,292,294,295) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,4,17,38,42,44,45,47,48,49,50,51,52,53,54,55,57,58,59,61,62,63,70,71,72,108,110,111,112,113,115,116,117,118,119,121,122,123,131,132,133,134,135,136,137,138,139,140,141,146,148,149,150,167,168,169,170,171,172,179,180,181,185,193,194,195,196,197,198,199,200,201,202,203,205,206,214,215,216,217,218,219,220,221,222,223,224,226,227,235,236,237,238,239,240,241,242,243,244,245,247,256,257,258,263,267,269,270,278,279,280,282,283,284,285,289,290,294,296,297) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,20,26,27,28,29,31,32,33,35,36,37,44,45,46,90,137,138,139,140,157,158,159,160,169,170,171,175,183,184,185,187,188,189,190,191,192,193,195,196,204,205,206,208,209,210,211,212,213,214,216,217,225,226,227,229,230,231,232,233,234,235,237,246,247,248,253,254,256,257,258,263,265,266,274,275,276,278,279,280,282,285,289,294,295,296,297) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,4,17,38,42,44,45,49,50,51,52,53,54,55,57,58,59,61,62,63,70,71,72,108,112,114,115,116,117,119,120,121,122,123,125,126,134,135,136,137,138,139,140,141,142,143,144,146,148,149,150,167,168,169,170,179,180,181,185,193,194,195,196,197,198,199,200,201,202,203,205,206,214,215,216,217,218,219,220,221,222,223,224,226,227,235,236,237,238,239,240,241,242,243,244,245,247,248,249,256,257,258,263,266,269,270,278,279,280,282,283,284,285,289,292,294,295,303,304,305,307,308,309,311,312) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "⚠️ 파일 output3818.csv 처리 중 오류 발생: Execution failed on sql '\n",
      "    WITH name_cte AS (\n",
      "        SELECT DISTINCT \"character.name\" AS name\n",
      "        FROM output\n",
      "        WHERE \"character.teamId\" IN (\n",
      "            SELECT DISTINCT \"character.teamId\"\n",
      "            FROM output\n",
      "            WHERE \"character.accountId\" IN (\n",
      "                SELECT DISTINCT substr(teamKillers_AccountId, 3, 40) FROM output\n",
      "            )\n",
      "        )\n",
      "    )\n",
      "    \n",
      "    SELECT \"attacker.name\" AS name, COUNT(damage) AS damage_count, damageTypeCategory\n",
      "    FROM output\n",
      "    WHERE \"attacker.teamId\" = \"victim.teamId\"\n",
      "      AND \"attacker.name\" IN (SELECT name FROM name_cte)\n",
      "      AND \"victim.name\" IN (SELECT name FROM name_cte)\n",
      "      AND \"attacker.name\" != \"victim.name\"\n",
      "    GROUP BY \"attacker.name\", damageTypeCategory\n",
      "    ': no such column: damage\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,4,44,46,47,50,51,52,53,54,55,57,58,59,61,62,63,70,71,72,81,112,113,115,116,124,125,126,128,129,130,131,133,134,135,136,138,139,140,141,142,143,144,146,150,151,152,169,170,171,172,173,174,181,182,183,187,195,196,197,199,200,201,202,203,204,205,207,208,216,217,218,220,221,222,223,224,225,226,228,229,237,238,239,241,242,243,244,245,246,247,249,258,259,260,265,268,270,271,279,280,281,283,284,285,288,292,294,296,297) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,4,42,44,45,47,48,49,50,51,52,54,55,56,58,59,60,67,68,69,105,106,108,109,110,118,119,120,122,123,124,126,127,128,132,134,135,136,137,139,140,141,142,143,144,145,147,149,150,151,168,169,170,171,172,173,180,181,182,186,194,195,196,198,199,200,201,202,203,204,206,207,215,216,217,219,220,221,222,223,224,225,227,228,236,237,238,240,241,242,243,244,245,246,248,257,258,259,265,267,269,270,278,279,280,282,283,284,286,290,292,293,294,302,303,304,306,307,308,311,312) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,4,42,44,45,48,49,52,53,54,55,57,58,59,61,62,63,70,71,72,108,109,111,112,113,121,122,123,125,126,127,131,132,133,134,136,138,139,140,141,143,144,145,146,147,148,165,166,167,168,169,170,177,178,179,183,191,192,193,195,196,197,198,199,200,201,203,204,212,213,214,216,217,218,219,220,221,222,224,225,233,234,235,237,238,239,240,241,242,243,245,246,247,254,255,256,260,263,266,268,269,277,278,279,281,282,283,284,288,293,294,302,303,304,306,307,308,311,312,314,315) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,4,42,44,45,47,48,49,50,51,52,54,55,56,105,106,107,108,110,111,112,113,115,116,117,118,122,123,125,126,134,135,136,138,139,140,142,143,144,145,146,150,151,152,169,170,171,172,173,174,181,182,183,187,195,196,197,199,200,201,202,203,204,205,207,208,216,217,218,220,221,222,223,224,225,226,228,229,237,238,239,241,242,243,244,245,246,247,249,250,251,258,259,260,264,267,270,271,272,280,281,282,284,285,286,287,291,293,298,299) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,47,48,49,50,51,52,53,54,55,57,58,59,61,62,63,70,71,72,108,109,111,112,113,121,122,123,125,126,127,128,130,131,132,133,135,136,137,140,141,142,143,146,147,148,165,166,167,168,177,178,179,183,184,185,186,188,189,197,198,199,201,202,203,204,205,206,207,209,210,218,219,220,222,223,224,225,226,227,228,230,231,232,239,240,241,245,253,254,255,257,258,259,261,266,267,268,276,277,278,280,281,282,285,289,292,293,294,302,303,304,306,307,308,313,314) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "⚠️ 파일 output3824.csv 처리 중 오류 발생: Execution failed on sql '\n",
      "    WITH name_cte AS (\n",
      "        SELECT DISTINCT \"character.name\" AS name\n",
      "        FROM output\n",
      "        WHERE \"character.teamId\" IN (\n",
      "            SELECT DISTINCT \"character.teamId\"\n",
      "            FROM output\n",
      "            WHERE \"character.accountId\" IN (\n",
      "                SELECT DISTINCT substr(teamKillers_AccountId, 3, 40) FROM output\n",
      "            )\n",
      "        )\n",
      "    )\n",
      "    \n",
      "    SELECT \"attacker.name\" AS name, COUNT(damage) AS damage_count, damageTypeCategory\n",
      "    FROM output\n",
      "    WHERE \"attacker.teamId\" = \"victim.teamId\"\n",
      "      AND \"attacker.name\" IN (SELECT name FROM name_cte)\n",
      "      AND \"victim.name\" IN (SELECT name FROM name_cte)\n",
      "      AND \"attacker.name\" != \"victim.name\"\n",
      "    GROUP BY \"attacker.name\", damageTypeCategory\n",
      "    ': no such column: damage\n",
      "⚠️ 파일 output3825.csv 처리 중 오류 발생: Execution failed on sql '\n",
      "    WITH name_cte AS (\n",
      "        SELECT DISTINCT \"character.name\" AS name\n",
      "        FROM output\n",
      "        WHERE \"character.teamId\" IN (\n",
      "            SELECT DISTINCT \"character.teamId\"\n",
      "            FROM output\n",
      "            WHERE \"character.accountId\" IN (\n",
      "                SELECT DISTINCT substr(teamKillers_AccountId, 3, 40) FROM output\n",
      "            )\n",
      "        )\n",
      "    )\n",
      "    \n",
      "    SELECT \"attacker.name\" AS name, COUNT(damage) AS damage_count, damageTypeCategory\n",
      "    FROM output\n",
      "    WHERE \"attacker.teamId\" = \"victim.teamId\"\n",
      "      AND \"attacker.name\" IN (SELECT name FROM name_cte)\n",
      "      AND \"victim.name\" IN (SELECT name FROM name_cte)\n",
      "      AND \"attacker.name\" != \"victim.name\"\n",
      "    GROUP BY \"attacker.name\", damageTypeCategory\n",
      "    ': no such column: teamKillers_AccountId\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,15,28,43,47,49,50,52,53,54,55,56,57,58,59,60,62,63,64,66,67,68,75,76,77,108,112,114,115,116,117,119,120,121,122,123,125,126,134,135,136,137,138,139,140,141,142,143,144,148,150,151,152,169,170,171,172,173,174,181,182,183,187,195,196,197,198,199,200,201,202,203,204,205,207,208,216,217,218,219,220,221,222,223,224,225,226,228,229,237,238,239,240,241,242,243,244,245,246,247,249,258,259,260,265,268,269,270,278,279,280,281,282,283,284,288,292,294,295,303,304,305,307,308,309,311,312,313) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,42,44,45,47,48,49,50,51,52,54,55,56,58,59,60,67,68,69,105,107,108,109,110,112,113,114,115,116,117,118,119,121,122,123,131,132,133,135,136,137,138,139,140,141,143,150,151,152,153,170,171,172,173,174,175,182,183,184,188,196,197,198,200,201,202,203,204,205,206,208,209,217,218,219,221,222,223,224,225,226,227,229,230,238,239,240,242,243,244,245,246,247,248,250,251,252,259,260,261,266,267,275,276,277,279,280,281,283,284,288,295,296,304,305,306,308,309,310,312,313,314,315) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,20,24,25,28,44,46,47,48,49,50,51,52,54,55,56,58,59,60,67,68,69,105,106,107,116,143,144,145,162,163,164,165,174,175,176,180,188,189,190,192,193,194,195,196,197,198,200,201,209,210,211,213,214,215,216,217,218,219,221,222,230,231,232,234,235,236,237,238,239,240,242,243,244,251,252,253,258,259,263,268,272,277,278,286,287,288,290,291,292,293,294) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,4,42,44,45,52,53,54,55,57,58,59,61,62,63,70,71,72,108,112,113,115,116,124,125,126,128,129,130,131,133,134,135,136,138,139,140,142,143,145,146,147,164,165,166,167,168,169,176,177,178,182,183,184,185,187,188,196,197,198,200,201,202,203,204,205,206,208,209,217,218,219,221,222,223,224,225,226,227,229,230,231,238,239,240,244,247,250,252,256,258,259,260,268,269,270,272,273,274,279,280,281) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,20,42,44,45,47,48,49,50,52,53,54,56,57,58,65,66,67,105,106,107,141,142,143,144,147,148,149,150,167,168,169,170,179,180,181,185,193,194,195,197,198,199,200,201,202,203,205,206,214,215,216,218,219,220,221,222,223,224,226,227,235,236,237,239,240,241,242,243,244,245,247,248,249,256,257,258,263,264,268,272,273,274,282,283,284,286,287,288,292,296,297) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,4,17,38,42,44,45,52,53,54,55,57,58,59,108,109,111,112,113,121,122,123,124,125,126,127,131,133,134,135,136,138,139,140,141,143,144,145,146,148,149,150,167,168,169,170,171,172,179,180,181,185,193,194,195,196,197,198,199,200,201,202,203,205,206,214,215,216,217,218,219,220,221,222,223,224,226,227,235,236,237,238,239,240,241,242,243,244,245,247,256,257,258,264,266,267,268,276,277,278,280,281,282,284,285,289,293,294,295,303,304,305,307,308,309,312,313) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,15,20,24,25,26,27,29,30,31,33,34,35,42,43,44,80,81,82,100,115,119,120,122,164,168,176,177,178,179,180,181,182,189,197,198,199,200,201,202,203,204,205,206,210,211,225,226,228,229,230,231,241,244,247,251,255,259,262,263,264,272,273,274,276,277,278,279,280) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "⚠️ 파일 output3832.csv 처리 중 오류 발생: Execution failed on sql '\n",
      "    WITH name_cte AS (\n",
      "        SELECT DISTINCT \"character.name\" AS name\n",
      "        FROM output\n",
      "        WHERE \"character.teamId\" IN (\n",
      "            SELECT DISTINCT \"character.teamId\"\n",
      "            FROM output\n",
      "            WHERE \"character.accountId\" IN (\n",
      "                SELECT DISTINCT substr(teamKillers_AccountId, 3, 40) FROM output\n",
      "            )\n",
      "        )\n",
      "    )\n",
      "    \n",
      "    SELECT \"attacker.name\" AS name, COUNT(damage) AS damage_count, damageTypeCategory\n",
      "    FROM output\n",
      "    WHERE \"attacker.teamId\" = \"victim.teamId\"\n",
      "      AND \"attacker.name\" IN (SELECT name FROM name_cte)\n",
      "      AND \"victim.name\" IN (SELECT name FROM name_cte)\n",
      "      AND \"attacker.name\" != \"victim.name\"\n",
      "    GROUP BY \"attacker.name\", damageTypeCategory\n",
      "    ': no such column: damage\n",
      "⚠️ 파일 output3833.csv 처리 중 오류 발생: Execution failed on sql '\n",
      "    WITH name_cte AS (\n",
      "        SELECT DISTINCT \"character.name\" AS name\n",
      "        FROM output\n",
      "        WHERE \"character.teamId\" IN (\n",
      "            SELECT DISTINCT \"character.teamId\"\n",
      "            FROM output\n",
      "            WHERE \"character.accountId\" IN (\n",
      "                SELECT DISTINCT substr(teamKillers_AccountId, 3, 40) FROM output\n",
      "            )\n",
      "        )\n",
      "    )\n",
      "    \n",
      "    SELECT \"attacker.name\" AS name, COUNT(damage) AS damage_count, damageTypeCategory\n",
      "    FROM output\n",
      "    WHERE \"attacker.teamId\" = \"victim.teamId\"\n",
      "      AND \"attacker.name\" IN (SELECT name FROM name_cte)\n",
      "      AND \"victim.name\" IN (SELECT name FROM name_cte)\n",
      "      AND \"attacker.name\" != \"victim.name\"\n",
      "    GROUP BY \"attacker.name\", damageTypeCategory\n",
      "    ': no such column: damage\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,15,28,43,47,49,50,53,54,55,56,57,58,59,60,62,63,64,66,67,68,75,76,77,108,112,113,115,116,124,125,126,127,128,129,130,131,132,133,134,136,138,139,140,141,143,144,145,146,148,149,150,167,168,169,170,179,180,181,185,193,194,195,197,198,199,200,201,202,203,205,206,214,215,216,218,219,220,221,222,223,224,226,227,235,236,237,239,240,241,242,243,244,245,247,256,257,258,262,263,271,272,273,275,276,277,279,282,286,290,293,294,302,303,304,306,307,308,309,311,314,315) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,4,17,42,44,45,52,53,54,55,57,58,59,61,62,63,70,71,72,108,110,111,112,113,115,116,117,118,122,123,125,126,134,135,136,137,138,139,140,141,144,145,146,147,148,150,151,152,169,170,171,172,173,174,181,182,183,187,195,196,197,199,200,201,202,203,204,205,207,208,216,217,218,220,221,222,223,224,225,226,228,229,237,238,239,241,242,243,244,245,246,247,249,250,251,258,259,260,265,268,269,277,278,279,281,282,283,284,288,291,292,300,301,302,304,305,306,310,311,312) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,15,23,26,42,44,45,46,47,48,49,50,52,53,54,56,57,58,65,66,67,124,129,190,211,217,218,239,242,244,250,251,255,259,260) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,4,42,44,45,49,50,51,52,54,55,56,58,59,60,67,68,69,105,106,107,108,109,111,112,113,121,122,123,125,126,127,131,133,134,135,136,138,139,140,141,142,143,144,147,148,150,151,152,169,170,171,172,173,174,181,182,183,187,195,196,197,199,200,201,202,203,204,205,207,208,216,217,218,220,221,222,223,224,225,226,228,229,237,238,239,241,242,243,244,245,246,247,249,250,251,258,259,260,265,266,267,275,276,277,279,280,281,287,291,295,296,298,299) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,20,26,42,44,45,46,47,48,49,50,52,53,54,56,57,58,65,66,67,114,119,139,144,146,147,148,165,166,167,168,177,178,179,183,191,192,193,195,196,197,198,199,200,201,203,204,212,213,214,216,217,218,219,220,221,222,224,225,233,234,235,237,238,239,240,241,242,243,245,254,255,256,264,267,270,274,279,280,288,289,290,292,293,294,296,297,298) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,4,42,44,45,47,48,49,50,51,52,53,54,55,57,58,59,108,109,111,112,113,121,122,123,125,126,127,132,134,135,136,137,139,140,141,142,143,144,145,147,149,150,151,168,169,170,171,172,173,180,181,182,186,194,195,196,198,199,200,201,202,203,204,206,207,215,216,217,219,220,221,222,223,224,225,227,228,236,237,238,240,241,242,243,244,245,246,248,257,258,259,264,266,269,270,278,279,280,282,283,284,286,290,294,296,297,305,306,307,309,310,311,313,314) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,4,42,44,45,52,53,54,55,57,58,59,108,112,114,115,116,117,119,120,121,122,123,125,126,134,135,136,138,139,140,141,142,143,144,146,149,150,151,152,169,170,171,172,173,174,181,182,183,187,195,196,197,199,200,201,202,203,204,205,207,208,216,217,218,220,221,222,223,224,225,226,228,229,237,238,239,241,242,243,244,245,246,247,249,250,251,258,259,260,266,268,269,277,278,279,281,282,283,284,288,292,293,301,302,303,305,306,307,308,311,314,315) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,4,42,44,45,49,50,51,52,54,55,56,58,59,60,67,68,69,105,106,108,109,110,118,119,120,122,123,124,125,126,127,128,130,131,132,133,135,136,137,141,142,143,144,146,149,150,151,168,169,170,171,172,173,180,181,182,186,194,195,196,198,199,200,201,202,203,204,206,207,215,216,217,219,220,221,222,223,224,225,227,228,236,237,238,240,241,242,243,244,245,246,248,257,258,259,264,266,267,268,276,277,278,280,281,282,285,286,290,295,298,299) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,20,26,27,35,36,37,39,40,41,42,44,45,46,47,48,49,50,52,53,54,56,57,58,65,66,67,103,104,105,106,107,108,109,111,112,113,121,122,123,125,126,127,128,130,131,132,133,135,136,137,138,139,140,141,143,146,150,151,152,169,170,171,172,173,174,181,182,183,187,195,196,197,199,200,201,202,203,204,205,207,208,216,217,218,220,221,222,223,224,225,226,228,229,237,238,239,241,242,243,244,245,246,247,249,250,251,258,259,260,265,268,272,274,275,276,284,285,286,288,289,290,297,298) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,4,21,22,23,24,26,27,28,37,39,40,41,42,44,45,46,74,116,117,134,135,136,137,138,142,149,151,152) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "⚠️ 파일 output3844.csv 처리 중 오류 발생: Execution failed on sql '\n",
      "    WITH name_cte AS (\n",
      "        SELECT DISTINCT \"character.name\" AS name\n",
      "        FROM output\n",
      "        WHERE \"character.teamId\" IN (\n",
      "            SELECT DISTINCT \"character.teamId\"\n",
      "            FROM output\n",
      "            WHERE \"character.accountId\" IN (\n",
      "                SELECT DISTINCT substr(teamKillers_AccountId, 3, 40) FROM output\n",
      "            )\n",
      "        )\n",
      "    )\n",
      "    \n",
      "    SELECT \"attacker.name\" AS name, COUNT(damage) AS damage_count, damageTypeCategory\n",
      "    FROM output\n",
      "    WHERE \"attacker.teamId\" = \"victim.teamId\"\n",
      "      AND \"attacker.name\" IN (SELECT name FROM name_cte)\n",
      "      AND \"victim.name\" IN (SELECT name FROM name_cte)\n",
      "      AND \"attacker.name\" != \"victim.name\"\n",
      "    GROUP BY \"attacker.name\", damageTypeCategory\n",
      "    ': no such column: teamKillers_AccountId\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,20,44,46,47,49,50,51,52,54,55,56,58,59,60,67,68,69,129,141,195,216,237,243,244,261,262,265,267,271,276,277,285,286,287,289,290,291,295,296,297) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,4,42,44,45,47,48,49,50,51,52,53,54,55,57,58,59,61,62,63,70,71,72,108,110,111,112,113,115,116,117,118,124,125,127,128,136,137,138,140,141,142,143,144,145,146,148,150,151,152,169,170,171,172,173,174,181,182,183,187,195,196,197,199,200,201,202,203,204,205,207,208,216,217,218,220,221,222,223,224,225,226,228,229,237,238,239,241,242,243,244,245,246,247,249,250,251,258,259,260,265,268,270,271,279,280,281,283,284,285,286,287,291,293,298,299) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,20,42,44,45,47,48,49,50,52,53,54,56,57,58,65,66,67,118,119,121,122,123,131,132,133,135,136,137,138,139,140,141,144,145,147,148,149,166,167,168,169,170,171,178,179,180,184,192,193,194,196,197,198,199,200,201,202,204,205,213,214,215,217,218,219,220,221,222,223,225,226,234,235,236,238,239,240,241,242,243,244,246,247,248,255,256,257,262,268,270,274,275,276,284,285,286,288,289,290,295,296,297,305,306,307,309,310,311,312,313) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,15,28,29,30,31,34,35,43,44,45,46,47,48,49,50,52,53,54,55,56,57,58,59,60,62,63,64,66,67,68,75,76,77,108,110,111,112,113,115,116,117,118,122,123,125,126,134,135,136,137,138,139,140,141,143,144,145,146,148,149,150,167,168,169,170,171,172,179,180,181,185,193,194,195,197,198,199,200,201,202,203,205,206,214,215,216,218,219,220,221,222,223,224,226,227,235,236,237,239,240,241,242,243,244,245,247,248,249,256,257,258,263,265,268,269,270,278,279,280,282,283,284,285,289,293,294,302,303,304,306,307,308,311,312,313) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,20,42,44,45,49,50,51,52,54,55,56,58,118,119,121,122,123,131,132,133,135,136,137,141,144,145,147,148,149,166,167,168,169,170,171,178,179,180,184,185,186,187,189,190,198,199,200,202,203,204,205,206,207,208,210,211,219,220,221,223,224,225,226,227,228,229,231,240,241,242,247,249,252,256,259,260,268,269,270,272,273,274,277,280,281,282,290,291,292,294,295,296,297,298) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,4,42,44,45,49,50,51,52,54,55,56,58,59,60,67,68,69,125,126,127,131,133,134,135,136,138,139,140,141,142,143,144,146,148,149,150,167,168,169,170,171,172,179,180,181,185,193,194,195,197,198,199,200,201,202,203,205,206,214,215,216,218,219,220,221,222,223,224,226,227,235,236,237,239,240,241,242,243,244,245,247,248,249,256,257,258,263,265,266,267,275,276,277,279,280,281,285,289,292,296,297) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,23,26,27,35,36,37,39,40,41,42,44,45,46,47,48,49,50,52,53,54,56,57,58,65,66,67,103,104,105,106,108,109,110,111,113,114,115,116,117,119,120,121,129,130,131,133,134,135,136,137,138,139,140,141,143,144,145,162,163,164,165,174,175,176,180,188,189,190,192,193,194,195,196,197,198,200,201,209,210,211,213,214,215,216,217,218,219,221,222,230,231,232,234,235,236,237,238,239,240,242,251,252,253,258,264,268,270,272,273,281,282,283,285,286,287,289,292,293) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,15,28,47,49,50,52,53,54,55,56,57,58,59,60,62,63,64,66,67,68,75,76,77,108,112,114,115,116,117,119,120,121,122,123,125,126,134,135,136,137,138,139,140,141,143,144,145,146,148,149,150,167,168,169,170,171,172,179,180,181,185,193,194,195,197,198,199,200,201,202,203,205,206,214,215,216,218,219,220,221,222,223,224,226,227,235,236,237,239,240,241,242,243,244,245,247,248,249,256,257,258,263,265,268,269,277,278,279,281,282,283,286,290,291,293,294,302,303,304,306,307,308,311,313,314) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,15,20,24,25,44,46,47,49,50,51,52,53,54,55,57,58,59,61,62,63,70,71,72,108,109,111,112,113,121,122,123,124,125,126,127,128,130,131,132,133,135,136,137,141,142,143,144,146,147,148,165,166,167,168,177,178,179,183,191,192,193,195,196,197,198,199,200,201,203,204,212,213,214,216,217,218,219,220,221,222,224,225,233,234,235,237,238,239,240,241,242,243,245,246,247,254,255,256,260,263,267,268,269,277,278,279,281,282,283,284,288,292,294,296,297,305,306,307,309,310,311,312,313) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,20,24,25,26,27,29,30,31,33,34,35,42,43,44,80,81,82,127,129,130,131,132,133,134,137,138,139,140,157,158,159,160,169,170,171,175,183,184,185,187,188,189,190,191,192,193,195,196,204,205,206,208,209,210,211,212,213,214,216,217,225,226,227,229,230,231,232,233,234,235,237,246,247,248,254,255,257,258,259,260,264,266,270,273,277,278) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "⚠️ 파일 output3855.csv 처리 중 오류 발생: Execution failed on sql '\n",
      "    WITH name_cte AS (\n",
      "        SELECT DISTINCT \"character.name\" AS name\n",
      "        FROM output\n",
      "        WHERE \"character.teamId\" IN (\n",
      "            SELECT DISTINCT \"character.teamId\"\n",
      "            FROM output\n",
      "            WHERE \"character.accountId\" IN (\n",
      "                SELECT DISTINCT substr(teamKillers_AccountId, 3, 40) FROM output\n",
      "            )\n",
      "        )\n",
      "    )\n",
      "    \n",
      "    SELECT \"attacker.name\" AS name, COUNT(damage) AS damage_count, damageTypeCategory\n",
      "    FROM output\n",
      "    WHERE \"attacker.teamId\" = \"victim.teamId\"\n",
      "      AND \"attacker.name\" IN (SELECT name FROM name_cte)\n",
      "      AND \"victim.name\" IN (SELECT name FROM name_cte)\n",
      "      AND \"attacker.name\" != \"victim.name\"\n",
      "    GROUP BY \"attacker.name\", damageTypeCategory\n",
      "    ': no such column: teamKillers_AccountId\n",
      "⚠️ 파일 output3856.csv 처리 중 오류 발생: Execution failed on sql '\n",
      "    WITH name_cte AS (\n",
      "        SELECT DISTINCT \"character.name\" AS name\n",
      "        FROM output\n",
      "        WHERE \"character.teamId\" IN (\n",
      "            SELECT DISTINCT \"character.teamId\"\n",
      "            FROM output\n",
      "            WHERE \"character.accountId\" IN (\n",
      "                SELECT DISTINCT substr(teamKillers_AccountId, 3, 40) FROM output\n",
      "            )\n",
      "        )\n",
      "    )\n",
      "    \n",
      "    SELECT \"attacker.name\" AS name, COUNT(damage) AS damage_count, damageTypeCategory\n",
      "    FROM output\n",
      "    WHERE \"attacker.teamId\" = \"victim.teamId\"\n",
      "      AND \"attacker.name\" IN (SELECT name FROM name_cte)\n",
      "      AND \"victim.name\" IN (SELECT name FROM name_cte)\n",
      "      AND \"attacker.name\" != \"victim.name\"\n",
      "    GROUP BY \"attacker.name\", damageTypeCategory\n",
      "    ': no such column: damage\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,20,26,42,44,45,46,47,48,49,50,52,53,54,56,57,58,65,66,67,103,104,105,114,116,117,119,120,121,129,130,131,133,134,135,136,137,139,140,141,142,143,145,146,147,164,165,166,167,176,177,178,182,190,191,192,194,195,196,197,198,199,200,202,203,211,212,213,215,216,217,218,219,220,221,223,224,232,233,234,236,237,238,239,240,241,242,244,245,246,253,254,255,260,266,268,272,276,277,285,286,287,289,290,291,295,296,297) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,4,26,42,44,45,46,47,48,49,50,51,52,54,55,56,58,59,60,67,68,69,105,106,108,109,110,118,119,120,122,123,124,125,126,127,131,133,134,135,136,138,139,140,141,142,143,144,146,148,149,150,167,168,169,170,179,180,181,185,193,194,195,197,198,199,200,201,202,203,205,206,214,215,216,218,219,220,221,222,223,224,226,227,235,236,237,239,240,241,242,243,244,245,247,248,249,256,257,258,263,265,268,269,277,278,279,281,282,283,284,288,292,293,301,302,303,305,306,307,310,313,314) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,15,28,31,32,40,41,42,43,44,45,46,47,49,50,51,52,53,54,55,56,57,58,59,60,62,63,64,66,67,68,75,76,77,108,110,111,112,113,115,116,117,118,122,123,125,126,134,135,136,137,138,139,140,141,143,144,145,146,148,149,150,167,168,169,170,171,172,179,180,181,185,193,194,195,196,197,198,199,200,201,202,203,205,206,214,215,216,217,218,219,220,221,222,223,224,226,227,235,236,237,238,239,240,241,242,243,244,245,247,256,257,258,263,267,269,270,278,279,280,282,283,284,285,286,290,293,294,302,303,304,306,307,308,310,312,313) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,4,17,40,52,53,54,55,57,58,59,61,62,63,70,71,72,134,148,149,150,167,168,169,170,171,172,179,180,181,185,193,194,195,197,198,199,200,201,202,203,205,206,214,215,216,218,219,220,221,222,223,224,226,227,235,236,237,239,240,241,242,243,244,245,247,248,249,256,257,258,264,267,268,269,277,278,279,281,282,283,284,288,290,296,297) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,25,54,55,56,57,59,60,61,63,64,65,72,73,74,105,106,107,108,110,111,112,113,115,116,117,118,119,121,122,123,131,132,133,135,136,137,138,139,140,141,143,145,146,147,164,165,166,167,176,177,178,182,190,191,192,194,195,196,197,198,199,200,202,203,211,212,213,215,216,217,218,219,220,221,223,224,232,233,234,236,237,238,239,240,241,242,244,253,254,255,260,264,268,269,277,278,279,281,282,283,284,288,294,295) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "⚠️ 파일 output3862.csv 처리 중 오류 발생: Execution failed on sql '\n",
      "    WITH name_cte AS (\n",
      "        SELECT DISTINCT \"character.name\" AS name\n",
      "        FROM output\n",
      "        WHERE \"character.teamId\" IN (\n",
      "            SELECT DISTINCT \"character.teamId\"\n",
      "            FROM output\n",
      "            WHERE \"character.accountId\" IN (\n",
      "                SELECT DISTINCT substr(teamKillers_AccountId, 3, 40) FROM output\n",
      "            )\n",
      "        )\n",
      "    )\n",
      "    \n",
      "    SELECT \"attacker.name\" AS name, COUNT(damage) AS damage_count, damageTypeCategory\n",
      "    FROM output\n",
      "    WHERE \"attacker.teamId\" = \"victim.teamId\"\n",
      "      AND \"attacker.name\" IN (SELECT name FROM name_cte)\n",
      "      AND \"victim.name\" IN (SELECT name FROM name_cte)\n",
      "      AND \"attacker.name\" != \"victim.name\"\n",
      "    GROUP BY \"attacker.name\", damageTypeCategory\n",
      "    ': no such column: damage\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,4,42,44,45,47,48,49,50,51,52,53,54,55,57,58,59,61,62,63,70,71,72,108,110,111,112,113,115,116,117,118,119,121,122,123,131,132,133,135,136,137,142,143,145,146,147,164,165,166,167,168,169,176,177,178,182,183,184,185,187,188,196,197,198,200,201,202,203,204,205,206,208,209,217,218,219,221,222,223,224,225,226,227,229,230,231,238,239,240,244,245,247,248,250,258,259,260,262,263,264,266,270,271,279,280,281,283,284,285,287,291,292,293,301,302,303,305,306,307,310,313,314) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,4,24,25,50,51,52,53,54,55,57,58,59,61,62,63,70,71,72,143,144,145,146,148,150,151,152,169,170,171,172,181,182,183,187,195,196,197,199,200,201,202,203,204,205,207,208,216,217,218,220,221,222,223,224,225,226,228,229,237,238,239,241,242,243,244,245,246,247,249,258,259,260,265,267,269,270,278,279,280,282,283,284,286,290,292,293,301,302,303,305,306,307,309,312,313,314) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,15,20,26,38,42,44,45,46,50,51,52,53,55,56,57,59,60,61,68,69,70,122,129,173,188,192,209,213,219,220,233,241,242,243,244,245,246,247,248,250,251,252,253,255,256,257,259,265,266,269,273,274,275,283,284,285,287,288,289,293,294) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "⚠️ 파일 output3866.csv 처리 중 오류 발생: Execution failed on sql '\n",
      "    WITH name_cte AS (\n",
      "        SELECT DISTINCT \"character.name\" AS name\n",
      "        FROM output\n",
      "        WHERE \"character.teamId\" IN (\n",
      "            SELECT DISTINCT \"character.teamId\"\n",
      "            FROM output\n",
      "            WHERE \"character.accountId\" IN (\n",
      "                SELECT DISTINCT substr(teamKillers_AccountId, 3, 40) FROM output\n",
      "            )\n",
      "        )\n",
      "    )\n",
      "    \n",
      "    SELECT \"attacker.name\" AS name, COUNT(damage) AS damage_count, damageTypeCategory\n",
      "    FROM output\n",
      "    WHERE \"attacker.teamId\" = \"victim.teamId\"\n",
      "      AND \"attacker.name\" IN (SELECT name FROM name_cte)\n",
      "      AND \"victim.name\" IN (SELECT name FROM name_cte)\n",
      "      AND \"attacker.name\" != \"victim.name\"\n",
      "    GROUP BY \"attacker.name\", damageTypeCategory\n",
      "    ': no such column: damage\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,4,24,25,44,46,47,49,50,51,52,54,55,56,58,105,106,107,108,112,114,115,116,117,119,120,121,122,123,125,126,134,135,136,138,139,140,141,142,143,144,147,148,149,150,167,168,169,170,171,172,179,180,181,185,193,194,195,197,198,199,200,201,202,203,205,206,214,215,216,218,219,220,221,222,223,224,226,227,235,236,237,239,240,241,242,243,244,245,247,256,257,258,262,267,269,270,271,279,280,281,283,284,285,286,290,293,294,295,303,304,305,307,308,309,314,315) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,4,42,44,45,52,53,54,55,57,58,59,61,108,112,114,115,116,117,119,120,121,122,123,125,126,134,135,136,138,139,140,141,142,143,144,146,147,148,165,166,167,168,169,170,177,178,179,183,191,192,193,195,196,197,198,199,200,201,203,204,212,213,214,216,217,218,219,220,221,222,224,225,233,234,235,237,238,239,240,241,242,243,245,254,255,256,261,263,264,268,269,270,278,279,280,282,283,284,285,289,293,297,298,306,307,308,310,311,312,313,314) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,24,25,44,46,47,49,50,51,52,54,55,56,58,59,60,67,68,69,105,106,107,108,112,114,115,116,117,119,120,121,122,124,125,127,128,136,137,138,140,141,142,143,144,145,146,148,149,150,167,168,169,170,179,180,181,185,193,194,195,197,198,199,200,201,202,203,205,206,214,215,216,218,219,220,221,222,223,224,226,227,235,236,237,239,240,241,242,243,244,245,247,248,249,256,257,258,263,266,268,269,277,278,279,281,282,283,284,285,289,293,294,302,303,304,306,307,308,311,312,313) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,20,44,46,47,49,50,51,52,54,55,56,58,59,60,67,68,69,200,221,246,247,250,251,255,263,264,265) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,4,24,25,44,46,47,49,50,51,52,54,55,56,58,59,60,67,68,69,105,106,110,112,113,114,115,117,118,119,120,121,123,125,126,128,129,137,138,139,141,142,143,144,145,146,147,149,150,151,168,169,170,171,172,173,180,181,182,186,194,195,196,198,199,200,201,202,203,204,206,207,215,216,217,219,220,221,222,223,224,225,227,228,236,237,238,240,241,242,243,244,245,246,248,249,250,257,258,259,264,265,270,271,279,280,281,283,284,285,287,291,293,296,298,299) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,20,24,25,49,50,51,52,54,55,56,58,59,60,67,68,69,106,107,116,138,141,182,190,191,192,194,195,196,199,245,246,260,262,268,269,277,278,279,281,282,283,285,289,294,296,297) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,20,26,42,44,45,46,47,48,49,50,52,53,54,56,57,58,65,66,67,103,104,105,134,136,139,141,142,144,146,147,148,165,166,167,168,177,178,179,183,184,185,186,188,189,197,198,199,201,202,203,204,205,206,207,209,210,218,219,220,222,223,224,225,226,227,228,230,231,232,239,240,241,245,253,254,255,257,258,259,264,268,273,277,278,279,287,288,289,291,292,293,294,295) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,42,44,45,47,48,49,50,51,52,53,54,55,57,58,59,61,62,63,70,71,72,108,110,111,112,113,115,116,117,118,120,121,123,124,125,133,134,135,137,138,139,140,141,142,143,148,149,150,167,168,169,170,171,172,179,180,181,185,193,194,195,197,198,199,200,201,202,203,205,206,214,215,216,218,219,220,221,222,223,224,226,227,235,236,237,239,240,241,242,243,244,245,247,248,249,256,257,258,263,266,269,270,278,279,280,282,283,284,286,287,291,293,295,296,304,305,306,308,309,310,314,315) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,4,42,44,45,47,48,49,50,51,52,53,54,55,57,58,59,61,108,109,111,112,113,121,122,123,125,126,127,131,133,134,135,136,138,139,140,141,142,143,144,146,148,149,150,167,168,169,170,171,172,179,180,181,185,193,194,195,197,198,199,200,201,202,203,205,206,214,215,216,218,219,220,221,222,223,224,226,227,235,236,237,239,240,241,242,243,244,245,247,248,249,256,257,258,264,266,267,268,276,277,278,280,281,282,288,292,294,297,298,299) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,4,44,46,47,49,50,51,52,54,55,56,58,59,60,67,68,69,106,126,127,155,156,190,211,217,218,239,245,246,250,253,257,259,264,265) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,20,26,42,44,45,46,47,48,49,50,52,53,54,114,141,142,144,148,149,150,167,168,169,170,179,180,181,185,193,194,195,197,198,199,200,201,202,203,205,206,214,215,216,218,219,220,221,222,223,224,226,227,235,236,237,239,240,241,242,243,244,245,247,248,249,256,257,258,267,270,271,275,279,280,281) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,4,17,40,52,53,54,55,57,58,59,138,139,140,141,148,149,150,167,168,169,170,171,172,179,180,181,185,193,194,195,197,198,199,200,201,202,203,205,206,214,215,216,218,219,220,221,222,223,224,226,227,235,236,237,239,240,241,242,243,244,245,247,256,257,258,264,266,268,269,277,278,279,281,282,283,284,288,289,292,293,301,302,303,305,306,307,309,312,313) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "⚠️ 파일 output3879.csv 처리 중 오류 발생: Execution failed on sql '\n",
      "    WITH name_cte AS (\n",
      "        SELECT DISTINCT \"character.name\" AS name\n",
      "        FROM output\n",
      "        WHERE \"character.teamId\" IN (\n",
      "            SELECT DISTINCT \"character.teamId\"\n",
      "            FROM output\n",
      "            WHERE \"character.accountId\" IN (\n",
      "                SELECT DISTINCT substr(teamKillers_AccountId, 3, 40) FROM output\n",
      "            )\n",
      "        )\n",
      "    )\n",
      "    \n",
      "    SELECT \"attacker.name\" AS name, COUNT(damage) AS damage_count, damageTypeCategory\n",
      "    FROM output\n",
      "    WHERE \"attacker.teamId\" = \"victim.teamId\"\n",
      "      AND \"attacker.name\" IN (SELECT name FROM name_cte)\n",
      "      AND \"victim.name\" IN (SELECT name FROM name_cte)\n",
      "      AND \"attacker.name\" != \"victim.name\"\n",
      "    GROUP BY \"attacker.name\", damageTypeCategory\n",
      "    ': no such column: damage\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,4,17,24,25,26,45,47,48,50,51,52,53,54,55,57,58,59,61,62,63,70,71,72,108,109,111,112,113,121,122,123,125,126,127,131,133,134,135,136,138,139,140,141,143,144,145,146,149,151,152,153,170,171,172,173,174,175,182,183,184,188,189,190,191,193,194,202,203,204,206,207,208,209,210,211,212,214,215,223,224,225,227,228,229,230,231,232,233,235,236,237,244,245,246,250,258,259,260,262,263,264,266,267,268,276,277,278,280,281,282,286,290,292,293,301,302,303,305,306,307,310,313,314,315) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "⚠️ 파일 output3881.csv 처리 중 오류 발생: Execution failed on sql '\n",
      "    WITH name_cte AS (\n",
      "        SELECT DISTINCT \"character.name\" AS name\n",
      "        FROM output\n",
      "        WHERE \"character.teamId\" IN (\n",
      "            SELECT DISTINCT \"character.teamId\"\n",
      "            FROM output\n",
      "            WHERE \"character.accountId\" IN (\n",
      "                SELECT DISTINCT substr(teamKillers_AccountId, 3, 40) FROM output\n",
      "            )\n",
      "        )\n",
      "    )\n",
      "    \n",
      "    SELECT \"attacker.name\" AS name, COUNT(damage) AS damage_count, damageTypeCategory\n",
      "    FROM output\n",
      "    WHERE \"attacker.teamId\" = \"victim.teamId\"\n",
      "      AND \"attacker.name\" IN (SELECT name FROM name_cte)\n",
      "      AND \"victim.name\" IN (SELECT name FROM name_cte)\n",
      "      AND \"attacker.name\" != \"victim.name\"\n",
      "    GROUP BY \"attacker.name\", damageTypeCategory\n",
      "    ': no such column: damage\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,4,42,44,45,47,48,49,50,51,52,53,54,55,57,58,59,129,131,132,133,134,136,137,138,139,140,141,142,147,148,149,166,167,168,169,170,171,178,179,180,184,192,193,194,196,197,198,199,200,201,202,204,205,213,214,215,217,218,219,220,221,222,223,225,226,234,235,236,238,239,240,241,242,243,244,246,247,248,255,256,257,262,264,265,267,268,276,277,278,280,281,282,285,289,293,294,302,303,304,306,307,308,311,313,314) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,56,57,58,59,61,62,63,65,66,67,74,75,76,107,108,109,138,141,202,223,244,245,248,250,254,258,259,260) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,15,20,42,44,45,50,51,52,53,54,55,57,58,59,61,62,63,70,71,72,124,136,165,166,200,221,245,247,250,251,255,261,262,263) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "⚠️ 파일 output3884.csv 처리 중 오류 발생: Execution failed on sql '\n",
      "    WITH name_cte AS (\n",
      "        SELECT DISTINCT \"character.name\" AS name\n",
      "        FROM output\n",
      "        WHERE \"character.teamId\" IN (\n",
      "            SELECT DISTINCT \"character.teamId\"\n",
      "            FROM output\n",
      "            WHERE \"character.accountId\" IN (\n",
      "                SELECT DISTINCT substr(teamKillers_AccountId, 3, 40) FROM output\n",
      "            )\n",
      "        )\n",
      "    )\n",
      "    \n",
      "    SELECT \"attacker.name\" AS name, COUNT(damage) AS damage_count, damageTypeCategory\n",
      "    FROM output\n",
      "    WHERE \"attacker.teamId\" = \"victim.teamId\"\n",
      "      AND \"attacker.name\" IN (SELECT name FROM name_cte)\n",
      "      AND \"victim.name\" IN (SELECT name FROM name_cte)\n",
      "      AND \"attacker.name\" != \"victim.name\"\n",
      "    GROUP BY \"attacker.name\", damageTypeCategory\n",
      "    ': no such column: damage\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,4,42,44,45,47,48,49,50,52,53,54,56,57,58,65,66,67,208,214,215,228,229,230,240,243,244,251,252,256,261,262,263) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,20,44,46,47,49,50,51,52,54,55,56,58,59,60,67,68,69,109,136,138,139,140,141,146,147,148,165,166,167,168,177,178,179,183,191,192,193,195,196,197,198,199,200,201,203,204,212,213,214,216,217,218,219,220,221,222,224,225,233,234,235,237,238,239,240,241,242,243,245,246,247,254,255,256,261,262,266,268,272,280,281,282) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,4,49,50,51,52,54,55,56,131,134,171,172,185,193,194,195,197,198,199,202,263,265,270,271,279,280,281,283,284,285,287,288,296,297,298,300,301,302,303,307,310,313,314) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "⚠️ 파일 output3888.csv 처리 중 오류 발생: Execution failed on sql '\n",
      "    WITH name_cte AS (\n",
      "        SELECT DISTINCT \"character.name\" AS name\n",
      "        FROM output\n",
      "        WHERE \"character.teamId\" IN (\n",
      "            SELECT DISTINCT \"character.teamId\"\n",
      "            FROM output\n",
      "            WHERE \"character.accountId\" IN (\n",
      "                SELECT DISTINCT substr(teamKillers_AccountId, 3, 40) FROM output\n",
      "            )\n",
      "        )\n",
      "    )\n",
      "    \n",
      "    SELECT \"attacker.name\" AS name, COUNT(damage) AS damage_count, damageTypeCategory\n",
      "    FROM output\n",
      "    WHERE \"attacker.teamId\" = \"victim.teamId\"\n",
      "      AND \"attacker.name\" IN (SELECT name FROM name_cte)\n",
      "      AND \"victim.name\" IN (SELECT name FROM name_cte)\n",
      "      AND \"attacker.name\" != \"victim.name\"\n",
      "    GROUP BY \"attacker.name\", damageTypeCategory\n",
      "    ': no such column: damage\n",
      "⚠️ 파일 output3890.csv 처리 중 오류 발생: Execution failed on sql '\n",
      "    WITH name_cte AS (\n",
      "        SELECT DISTINCT \"character.name\" AS name\n",
      "        FROM output\n",
      "        WHERE \"character.teamId\" IN (\n",
      "            SELECT DISTINCT \"character.teamId\"\n",
      "            FROM output\n",
      "            WHERE \"character.accountId\" IN (\n",
      "                SELECT DISTINCT substr(teamKillers_AccountId, 3, 40) FROM output\n",
      "            )\n",
      "        )\n",
      "    )\n",
      "    \n",
      "    SELECT \"attacker.name\" AS name, COUNT(damage) AS damage_count, damageTypeCategory\n",
      "    FROM output\n",
      "    WHERE \"attacker.teamId\" = \"victim.teamId\"\n",
      "      AND \"attacker.name\" IN (SELECT name FROM name_cte)\n",
      "      AND \"victim.name\" IN (SELECT name FROM name_cte)\n",
      "      AND \"attacker.name\" != \"victim.name\"\n",
      "    GROUP BY \"attacker.name\", damageTypeCategory\n",
      "    ': no such column: damage\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,20,44,46,47,49,50,51,52,54,55,56,58,59,60,67,68,69,129,141,143,148,149,150,167,168,169,170,171,172,179,180,181,185,193,194,195,197,198,199,200,201,202,203,205,206,214,215,216,218,219,220,221,222,223,224,226,227,235,236,237,239,240,241,242,243,244,245,247,248,249,256,257,258,263,267,269,273,274,275,283,284,285,287,288,289,291,292,300,301,302,304,305,306,310,311,312) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "⚠️ 파일 output3892.csv 처리 중 오류 발생: Execution failed on sql '\n",
      "    WITH name_cte AS (\n",
      "        SELECT DISTINCT \"character.name\" AS name\n",
      "        FROM output\n",
      "        WHERE \"character.teamId\" IN (\n",
      "            SELECT DISTINCT \"character.teamId\"\n",
      "            FROM output\n",
      "            WHERE \"character.accountId\" IN (\n",
      "                SELECT DISTINCT substr(teamKillers_AccountId, 3, 40) FROM output\n",
      "            )\n",
      "        )\n",
      "    )\n",
      "    \n",
      "    SELECT \"attacker.name\" AS name, COUNT(damage) AS damage_count, damageTypeCategory\n",
      "    FROM output\n",
      "    WHERE \"attacker.teamId\" = \"victim.teamId\"\n",
      "      AND \"attacker.name\" IN (SELECT name FROM name_cte)\n",
      "      AND \"victim.name\" IN (SELECT name FROM name_cte)\n",
      "      AND \"attacker.name\" != \"victim.name\"\n",
      "    GROUP BY \"attacker.name\", damageTypeCategory\n",
      "    ': no such column: teamKillers_AccountId\n",
      "⚠️ 파일 output3893.csv 처리 중 오류 발생: Execution failed on sql '\n",
      "    WITH name_cte AS (\n",
      "        SELECT DISTINCT \"character.name\" AS name\n",
      "        FROM output\n",
      "        WHERE \"character.teamId\" IN (\n",
      "            SELECT DISTINCT \"character.teamId\"\n",
      "            FROM output\n",
      "            WHERE \"character.accountId\" IN (\n",
      "                SELECT DISTINCT substr(teamKillers_AccountId, 3, 40) FROM output\n",
      "            )\n",
      "        )\n",
      "    )\n",
      "    \n",
      "    SELECT \"attacker.name\" AS name, COUNT(damage) AS damage_count, damageTypeCategory\n",
      "    FROM output\n",
      "    WHERE \"attacker.teamId\" = \"victim.teamId\"\n",
      "      AND \"attacker.name\" IN (SELECT name FROM name_cte)\n",
      "      AND \"victim.name\" IN (SELECT name FROM name_cte)\n",
      "      AND \"attacker.name\" != \"victim.name\"\n",
      "    GROUP BY \"attacker.name\", damageTypeCategory\n",
      "    ': no such column: damage\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,4,42,44,45,47,48,49,50,51,52,54,55,56,58,59,60,67,68,69,109,136,139,140,142,143,144,161,162,163,164,165,166,173,174,175,179,180,182,184,185,193,194,195,197,198,199,200,201,202,203,205,206,214,215,216,218,219,220,221,222,223,224,226,227,228,235,236,237,242,243,246,251,255,258,259,267,268,269,271,272,273,277,278,279) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "⚠️ 파일 output3895.csv 처리 중 오류 발생: Execution failed on sql '\n",
      "    WITH name_cte AS (\n",
      "        SELECT DISTINCT \"character.name\" AS name\n",
      "        FROM output\n",
      "        WHERE \"character.teamId\" IN (\n",
      "            SELECT DISTINCT \"character.teamId\"\n",
      "            FROM output\n",
      "            WHERE \"character.accountId\" IN (\n",
      "                SELECT DISTINCT substr(teamKillers_AccountId, 3, 40) FROM output\n",
      "            )\n",
      "        )\n",
      "    )\n",
      "    \n",
      "    SELECT \"attacker.name\" AS name, COUNT(damage) AS damage_count, damageTypeCategory\n",
      "    FROM output\n",
      "    WHERE \"attacker.teamId\" = \"victim.teamId\"\n",
      "      AND \"attacker.name\" IN (SELECT name FROM name_cte)\n",
      "      AND \"victim.name\" IN (SELECT name FROM name_cte)\n",
      "      AND \"attacker.name\" != \"victim.name\"\n",
      "    GROUP BY \"attacker.name\", damageTypeCategory\n",
      "    ': no such column: damage\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,4,42,44,45,47,48,49,50,51,52,53,54,55,57,58,59,61,62,63,70,71,72,108,110,111,112,113,115,116,117,118,122,123,125,126,134,135,136,138,139,140,141,143,144,145,146,148,149,150,167,168,169,170,179,180,181,185,193,194,195,197,198,199,200,201,202,203,205,206,214,215,216,218,219,220,221,222,223,224,226,227,235,236,237,239,240,241,242,243,244,245,247,248,249,256,257,258,264,266,268,269,277,278,279,281,282,283,284,288,291,292,300,301,302,304,305,306,310,313,314,315) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,4,42,44,45,47,48,49,50,51,52,54,55,56,105,107,108,109,110,112,113,114,115,116,117,118,122,123,125,126,134,135,136,138,139,140,142,143,144,145,146,148,150,151,152,169,170,171,172,173,174,181,182,183,187,195,196,197,199,200,201,202,203,204,205,207,208,216,217,218,220,221,222,223,224,225,226,228,229,237,238,239,241,242,243,244,245,246,247,249,250,251,258,259,260,265,266,267,275,276,277,279,280,281,284,285,289,295,296,297,305,306,307,309,310,311,314,315) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,25,52,53,56,57,58,59,61,62,63,65,66,67,74,75,76,107,108,109,110,111,113,114,115,123,124,125,127,128,129,130,131,132,133,135,137,138,139,140,142,143,144,145,146,147,164,165,166,167,168,169,176,177,178,182,190,191,192,194,195,196,197,198,199,200,202,203,211,212,213,215,216,217,218,219,220,221,223,224,232,233,234,236,237,238,239,240,241,242,244,253,254,255,261,263,268,269,277,278,279,281,282,283,284,288,292,293,301,302,303,305,306,307,309,313,314) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,4,15,16,18,26,27,35,36,37,39,40,41,42,44,45,46,47,48,49,50,51,52,53,54,55,57,58,59,61,62,63,70,71,72,108,110,111,112,113,115,116,117,118,119,121,122,123,131,132,133,135,136,137,138,140,141,142,143,146,147,148,149,166,167,168,169,170,171,178,179,180,184,192,193,194,196,197,198,199,200,201,202,204,205,213,214,215,217,218,219,220,221,222,223,225,226,234,235,236,238,239,240,241,242,243,244,246,247,248,255,256,257,261,262,270,271,272,274,275,276,281,284,288,289,294,298,299) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,4,17,38,42,44,45,52,53,54,55,57,58,59,108,110,111,112,113,115,116,117,118,122,123,125,126,134,135,136,137,138,139,140,141,144,145,146,147,148,150,151,152,169,170,171,172,173,174,181,182,183,187,195,196,197,199,200,201,202,203,204,205,207,208,216,217,218,220,221,222,223,224,225,226,228,229,237,238,239,241,242,243,244,245,246,247,249,250,251,258,259,260,265,266,267,275,276,277,279,280,281,285,289,290,291,299,300,301,303,304,305,307,308,312,313) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,23,26,27,28,29,31,32,33,129,132,138,142,143,144,161,162,163,164,173,174,175,179,187,188,189,191,192,193,194,195,196,197,199,200,208,209,210,212,213,214,215,216,217,218,220,221,229,230,231,233,234,235,236,237,238,239,241,242,243,250,251,252,257,258,260,261,262,264,265,268,272,277,278,279,280,281,289,290,291,293,294,295) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "⚠️ 파일 output3901.csv 처리 중 오류 발생: Execution failed on sql '\n",
      "    WITH name_cte AS (\n",
      "        SELECT DISTINCT \"character.name\" AS name\n",
      "        FROM output\n",
      "        WHERE \"character.teamId\" IN (\n",
      "            SELECT DISTINCT \"character.teamId\"\n",
      "            FROM output\n",
      "            WHERE \"character.accountId\" IN (\n",
      "                SELECT DISTINCT substr(teamKillers_AccountId, 3, 40) FROM output\n",
      "            )\n",
      "        )\n",
      "    )\n",
      "    \n",
      "    SELECT \"attacker.name\" AS name, COUNT(damage) AS damage_count, damageTypeCategory\n",
      "    FROM output\n",
      "    WHERE \"attacker.teamId\" = \"victim.teamId\"\n",
      "      AND \"attacker.name\" IN (SELECT name FROM name_cte)\n",
      "      AND \"victim.name\" IN (SELECT name FROM name_cte)\n",
      "      AND \"attacker.name\" != \"victim.name\"\n",
      "    GROUP BY \"attacker.name\", damageTypeCategory\n",
      "    ': no such column: damage\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,4,26,27,28,29,31,32,33,97,132,193,214,220,221,235,236,238,239,240,245,246,250,252,256,258,259,267,268,269,271,272,273,276,278,279) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,4,24,25,44,46,47,50,51,52,53,54,55,57,58,59,61,108,112,114,115,116,117,119,120,121,122,123,125,126,134,135,136,138,139,140,141,142,143,144,146,148,149,150,167,168,169,170,171,172,179,180,181,185,193,194,195,197,198,199,200,201,202,203,205,206,214,215,216,218,219,220,221,222,223,224,226,227,235,236,237,239,240,241,242,243,244,245,247,256,257,258,265,268,269,270,278,279,280,282,283,284,286,290,291,293,298,299) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,4,17,43,47,49,50,52,53,54,55,57,58,59,61,108,110,111,112,113,115,116,117,118,119,121,122,123,131,132,133,134,135,136,137,141,142,143,144,146,148,149,150,167,168,169,170,171,172,179,180,181,185,193,194,195,196,197,198,199,200,201,202,203,205,206,214,215,216,217,218,219,220,221,222,223,224,226,227,235,236,237,238,239,240,241,242,243,244,245,247,248,249,256,257,258,263,266,268,269,277,278,279,281,282,283,285,289,291,294,296,297,305,306,307,309,310,311,312,313) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "⚠️ 파일 output3906.csv 처리 중 오류 발생: Execution failed on sql '\n",
      "    WITH name_cte AS (\n",
      "        SELECT DISTINCT \"character.name\" AS name\n",
      "        FROM output\n",
      "        WHERE \"character.teamId\" IN (\n",
      "            SELECT DISTINCT \"character.teamId\"\n",
      "            FROM output\n",
      "            WHERE \"character.accountId\" IN (\n",
      "                SELECT DISTINCT substr(teamKillers_AccountId, 3, 40) FROM output\n",
      "            )\n",
      "        )\n",
      "    )\n",
      "    \n",
      "    SELECT \"attacker.name\" AS name, COUNT(damage) AS damage_count, damageTypeCategory\n",
      "    FROM output\n",
      "    WHERE \"attacker.teamId\" = \"victim.teamId\"\n",
      "      AND \"attacker.name\" IN (SELECT name FROM name_cte)\n",
      "      AND \"victim.name\" IN (SELECT name FROM name_cte)\n",
      "      AND \"attacker.name\" != \"victim.name\"\n",
      "    GROUP BY \"attacker.name\", damageTypeCategory\n",
      "    ': no such column: damage\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,4,42,44,45,49,50,51,52,54,55,56,105,106,107,108,110,111,112,113,115,116,117,118,119,121,122,123,131,132,133,135,136,137,141,143,144,145,146,149,150,151,152,169,170,171,172,173,174,181,182,183,187,195,196,197,199,200,201,202,203,204,205,207,208,216,217,218,220,221,222,223,224,225,226,228,229,237,238,239,241,242,243,244,245,246,247,249,258,259,260,266,267,268,276,277,278,280,281,282,287,291,295,296,297,305,306,307,309,310,311,313,314) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,4,17,38,42,44,45,52,53,54,55,57,58,59,108,110,111,112,113,115,116,117,118,122,123,125,126,134,135,136,137,138,139,140,141,143,144,145,146,148,149,150,167,168,169,170,171,172,179,180,181,185,193,194,195,196,197,198,199,200,201,202,203,205,206,214,215,216,217,218,219,220,221,222,223,224,226,227,235,236,237,238,239,240,241,242,243,244,245,247,248,249,256,257,258,264,266,267,268,276,277,278,279,280,281,282,284,288,292,294,295) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,4,28,44,46,47,48,49,50,51,52,54,55,56,116,139,166,167,207,208,209,213,214,227,235,236,237,239,240,241,246,248,249,252,256,257,258,266,267,268,270,271,272,277,278,279) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,4,42,44,45,47,48,49,50,51,52,53,54,55,57,58,59,61,62,63,70,71,72,136,139,140,141,142,143,146,147,148,165,166,167,168,169,170,177,178,179,183,191,192,193,195,196,197,198,199,200,201,203,204,212,213,214,216,217,218,219,220,221,222,224,225,233,234,235,237,238,239,240,241,242,243,245,246,247,254,255,256,261,263,264,272,273,274,276,277,278,281,285,289,291,293,294,302,303,304,306,307,308,313,314,315) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "⚠️ 파일 output3911.csv 처리 중 오류 발생: Execution failed on sql '\n",
      "    WITH name_cte AS (\n",
      "        SELECT DISTINCT \"character.name\" AS name\n",
      "        FROM output\n",
      "        WHERE \"character.teamId\" IN (\n",
      "            SELECT DISTINCT \"character.teamId\"\n",
      "            FROM output\n",
      "            WHERE \"character.accountId\" IN (\n",
      "                SELECT DISTINCT substr(teamKillers_AccountId, 3, 40) FROM output\n",
      "            )\n",
      "        )\n",
      "    )\n",
      "    \n",
      "    SELECT \"attacker.name\" AS name, COUNT(damage) AS damage_count, damageTypeCategory\n",
      "    FROM output\n",
      "    WHERE \"attacker.teamId\" = \"victim.teamId\"\n",
      "      AND \"attacker.name\" IN (SELECT name FROM name_cte)\n",
      "      AND \"victim.name\" IN (SELECT name FROM name_cte)\n",
      "      AND \"attacker.name\" != \"victim.name\"\n",
      "    GROUP BY \"attacker.name\", damageTypeCategory\n",
      "    ': no such column: damage\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,4,42,44,45,47,48,49,50,51,52,54,55,56,58,59,60,67,68,69,105,106,107,116,119,139,147,149,151,152,153,170,171,172,173,182,183,184,188,196,197,198,200,201,202,203,204,205,206,208,209,217,218,219,221,222,223,224,225,226,227,229,230,238,239,240,242,243,244,245,246,247,248,250,251,252,259,260,261,268,269,277,278,279,281,282,283,284,288,290,296,297,298) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,4,17,42,44,45,47,48,49,50,51,52,53,54,55,57,58,59,61,62,63,70,71,72,108,110,111,112,113,115,116,117,118,119,121,122,123,131,132,133,134,135,136,137,141,143,144,145,146,148,149,150,167,168,169,170,171,172,179,180,181,185,193,194,195,197,198,199,200,201,202,203,205,206,214,215,216,218,219,220,221,222,223,224,226,227,235,236,237,239,240,241,242,243,244,245,247,256,257,258,264,266,268,269,277,278,279,281,282,283,285,289,293,294,298,299) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,20,44,46,47,49,50,51,52,54,55,56,58,59,60,67,68,69,116,141,142,143,144,146,148,149,150,167,168,169,170,179,180,181,185,193,194,195,197,198,199,200,201,202,203,205,206,214,215,216,218,219,220,221,222,223,224,226,227,235,236,237,239,240,241,242,243,244,245,247,248,249,256,257,258,263,266,268,272,276,277,278,286,287,288,290,291,292,295,296) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,4,42,44,45,47,48,49,50,51,52,53,54,55,57,58,59,61,62,63,70,71,72,108,112,114,115,116,117,119,120,121,122,124,125,127,128,136,137,138,140,141,142,143,144,145,146,148,149,150,167,168,169,170,171,172,179,180,181,185,193,194,195,197,198,199,200,201,202,203,205,206,214,215,216,218,219,220,221,222,223,224,226,227,235,236,237,239,240,241,242,243,244,245,247,248,249,256,257,258,263,265,266,267,275,276,277,279,280,281,284,288,290,295,296,304,305,306,308,309,310,311,312) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "⚠️ 파일 output3916.csv 처리 중 오류 발생: Execution failed on sql '\n",
      "    WITH name_cte AS (\n",
      "        SELECT DISTINCT \"character.name\" AS name\n",
      "        FROM output\n",
      "        WHERE \"character.teamId\" IN (\n",
      "            SELECT DISTINCT \"character.teamId\"\n",
      "            FROM output\n",
      "            WHERE \"character.accountId\" IN (\n",
      "                SELECT DISTINCT substr(teamKillers_AccountId, 3, 40) FROM output\n",
      "            )\n",
      "        )\n",
      "    )\n",
      "    \n",
      "    SELECT \"attacker.name\" AS name, COUNT(damage) AS damage_count, damageTypeCategory\n",
      "    FROM output\n",
      "    WHERE \"attacker.teamId\" = \"victim.teamId\"\n",
      "      AND \"attacker.name\" IN (SELECT name FROM name_cte)\n",
      "      AND \"victim.name\" IN (SELECT name FROM name_cte)\n",
      "      AND \"attacker.name\" != \"victim.name\"\n",
      "    GROUP BY \"attacker.name\", damageTypeCategory\n",
      "    ': no such column: damage\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,4,44,46,47,49,50,51,52,54,55,56,58,59,60,67,68,69,116,139,181,200,221,227,228,241,244,247,251,255,260,261,262,263,271,272,273,275,276,277,278,279) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,4,44,46,47,52,53,54,55,57,58,59,61,62,63,70,71,72,108,112,114,115,116,117,119,120,121,122,123,125,126,134,135,136,138,139,140,141,142,143,144,146,148,149,150,167,168,169,170,171,172,179,180,181,185,193,194,195,197,198,199,200,201,202,203,205,206,214,215,216,218,219,220,221,222,223,224,226,227,235,236,237,239,240,241,242,243,244,245,247,248,249,256,257,258,263,265,267,268,276,277,278,280,281,282,284,285,289,291,292,300,301,302,304,305,306,309,312,313) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,4,52,53,56,57,58,59,61,62,63,65,66,67,74,75,76,107,109,110,111,112,114,115,116,117,118,119,120,121,123,124,125,133,134,135,137,138,139,144,145,148,149,150,167,168,169,170,179,180,181,185,186,187,188,190,191,199,200,201,203,204,205,206,207,208,209,211,212,213,214,215,217,226,227,228,232,233,234,242,243,244,246,247,248,249,257,258,259,261,262,263,265,267,268,269,277,278,279,281,282,283,285,289,291,293,294,302,303,304,306,307,308,311,313,314) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "⚠️ 파일 output3920.csv 처리 중 오류 발생: Execution failed on sql '\n",
      "    WITH name_cte AS (\n",
      "        SELECT DISTINCT \"character.name\" AS name\n",
      "        FROM output\n",
      "        WHERE \"character.teamId\" IN (\n",
      "            SELECT DISTINCT \"character.teamId\"\n",
      "            FROM output\n",
      "            WHERE \"character.accountId\" IN (\n",
      "                SELECT DISTINCT substr(teamKillers_AccountId, 3, 40) FROM output\n",
      "            )\n",
      "        )\n",
      "    )\n",
      "    \n",
      "    SELECT \"attacker.name\" AS name, COUNT(damage) AS damage_count, damageTypeCategory\n",
      "    FROM output\n",
      "    WHERE \"attacker.teamId\" = \"victim.teamId\"\n",
      "      AND \"attacker.name\" IN (SELECT name FROM name_cte)\n",
      "      AND \"victim.name\" IN (SELECT name FROM name_cte)\n",
      "      AND \"attacker.name\" != \"victim.name\"\n",
      "    GROUP BY \"attacker.name\", damageTypeCategory\n",
      "    ': no such column: damage\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,20,42,44,45,47,48,49,50,51,52,53,54,55,57,58,59,61,62,63,70,71,72,128,130,131,132,133,135,136,137,138,139,140,141,144,147,148,149,166,167,168,169,170,171,178,179,180,184,192,193,194,196,197,198,199,200,201,202,204,205,213,214,215,217,218,219,220,221,222,223,225,226,234,235,236,238,239,240,241,242,243,244,246,247,248,255,256,257,265,267,268,276,277,278,280,281,282,284,288,291,293,297,298) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,20,26,27,28,29,31,32,33,35,36,37,44,45,46,143,145,146,147,164,165,166,167,176,177,178,182,190,191,192,194,195,196,197,198,199,200,202,203,211,212,213,215,216,217,218,219,220,221,223,224,232,233,234,236,237,238,239,240,241,242,244,245,246,253,254,255,260,266,270,274,279,281,282,290,291,292,294,295,296,297,298) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,42,44,45,47,48,49,50,51,52,53,54,55,57,58,59,108,109,111,112,113,121,122,123,125,126,127,128,129,130,131,133,135,136,137,138,140,141,142,143,145,146,147,164,165,166,167,168,169,176,177,178,182,190,191,192,194,195,196,197,198,199,200,202,203,211,212,213,215,216,217,218,219,220,221,223,224,232,233,234,236,237,238,239,240,241,242,244,245,246,253,254,255,260,262,263,264,272,273,274,276,277,278,287,291,293,295,298,299) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,4,24,25,44,46,47,50,51,52,53,54,55,57,58,59,61,62,63,70,71,72,131,133,134,135,136,138,139,140,142,143,145,146,147,164,165,166,167,176,177,178,182,183,184,185,187,188,196,197,198,200,201,202,203,204,205,206,208,209,217,218,219,221,222,223,224,225,226,227,229,238,239,240,245,246,247,248,250,258,259,260,262,263,264,266,268,269,270,278,279,280,282,283,284,286,290,294,295,296,304,305,306,308,309,310,314,315) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "⚠️ 파일 output3925.csv 처리 중 오류 발생: Execution failed on sql '\n",
      "    WITH name_cte AS (\n",
      "        SELECT DISTINCT \"character.name\" AS name\n",
      "        FROM output\n",
      "        WHERE \"character.teamId\" IN (\n",
      "            SELECT DISTINCT \"character.teamId\"\n",
      "            FROM output\n",
      "            WHERE \"character.accountId\" IN (\n",
      "                SELECT DISTINCT substr(teamKillers_AccountId, 3, 40) FROM output\n",
      "            )\n",
      "        )\n",
      "    )\n",
      "    \n",
      "    SELECT \"attacker.name\" AS name, COUNT(damage) AS damage_count, damageTypeCategory\n",
      "    FROM output\n",
      "    WHERE \"attacker.teamId\" = \"victim.teamId\"\n",
      "      AND \"attacker.name\" IN (SELECT name FROM name_cte)\n",
      "      AND \"victim.name\" IN (SELECT name FROM name_cte)\n",
      "      AND \"attacker.name\" != \"victim.name\"\n",
      "    GROUP BY \"attacker.name\", damageTypeCategory\n",
      "    ': no such column: damage\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,4,42,44,45,49,50,51,52,54,55,56,105,107,108,109,110,112,113,114,115,116,117,118,122,123,125,126,134,135,136,138,139,140,141,142,143,144,146,148,149,150,167,168,169,170,171,172,179,180,181,185,193,194,195,197,198,199,200,201,202,203,205,206,214,215,216,218,219,220,221,222,223,224,226,227,235,236,237,239,240,241,242,243,244,245,247,248,249,256,257,258,263,265,268,269,277,278,279,281,282,283,284,288,290,296,297,305,306,307,309,310,311,312,314,315) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,20,49,50,51,52,54,55,56,58,59,60,67,68,69,116,138,140,141,142,143,145,146,147,164,165,166,167,168,169,176,177,178,182,190,191,192,194,195,196,197,198,199,200,202,203,211,212,213,215,216,217,218,219,220,221,223,224,232,233,234,236,237,238,239,240,241,242,244,245,246,253,254,255,260,265,271,275,279,280,281) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,4,26,27,28,29,31,32,33,118,119,120,124,126,127,128,129,131,132,133,135,137,138,140,141,142,159,160,161,162,163,164,171,172,173,177,178,180,182,183,191,192,193,195,196,197,198,199,200,201,203,204,212,213,214,216,217,218,219,220,221,222,224,225,226,233,234,235,240,241,243,244,245,248,249,251,255,256,257,265,266,267,269,270,271,273,275,276,277,278,286,287,288,290,291,292,297,298) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,20,24,25,26,27,29,30,31,33,34,35,42,43,44,83,84,97,131,132,133,134,140,141,143,144,145,146,149,150,151,152,169,170,171,172,173,174,181,182,183,187,195,196,197,199,200,201,202,203,204,205,207,208,216,217,218,220,221,222,223,224,225,226,228,229,237,238,239,241,242,243,244,245,246,247,249,250,251,258,259,260,265,269,273,275,276,284,285,286,288,289,290,293,294,295) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "⚠️ 파일 output3930.csv 처리 중 오류 발생: Execution failed on sql '\n",
      "    WITH name_cte AS (\n",
      "        SELECT DISTINCT \"character.name\" AS name\n",
      "        FROM output\n",
      "        WHERE \"character.teamId\" IN (\n",
      "            SELECT DISTINCT \"character.teamId\"\n",
      "            FROM output\n",
      "            WHERE \"character.accountId\" IN (\n",
      "                SELECT DISTINCT substr(teamKillers_AccountId, 3, 40) FROM output\n",
      "            )\n",
      "        )\n",
      "    )\n",
      "    \n",
      "    SELECT \"attacker.name\" AS name, COUNT(damage) AS damage_count, damageTypeCategory\n",
      "    FROM output\n",
      "    WHERE \"attacker.teamId\" = \"victim.teamId\"\n",
      "      AND \"attacker.name\" IN (SELECT name FROM name_cte)\n",
      "      AND \"victim.name\" IN (SELECT name FROM name_cte)\n",
      "      AND \"attacker.name\" != \"victim.name\"\n",
      "    GROUP BY \"attacker.name\", damageTypeCategory\n",
      "    ': no such column: teamKillers_AccountId\n",
      "⚠️ 파일 output3931.csv 처리 중 오류 발생: Execution failed on sql '\n",
      "    WITH name_cte AS (\n",
      "        SELECT DISTINCT \"character.name\" AS name\n",
      "        FROM output\n",
      "        WHERE \"character.teamId\" IN (\n",
      "            SELECT DISTINCT \"character.teamId\"\n",
      "            FROM output\n",
      "            WHERE \"character.accountId\" IN (\n",
      "                SELECT DISTINCT substr(teamKillers_AccountId, 3, 40) FROM output\n",
      "            )\n",
      "        )\n",
      "    )\n",
      "    \n",
      "    SELECT \"attacker.name\" AS name, COUNT(damage) AS damage_count, damageTypeCategory\n",
      "    FROM output\n",
      "    WHERE \"attacker.teamId\" = \"victim.teamId\"\n",
      "      AND \"attacker.name\" IN (SELECT name FROM name_cte)\n",
      "      AND \"victim.name\" IN (SELECT name FROM name_cte)\n",
      "      AND \"attacker.name\" != \"victim.name\"\n",
      "    GROUP BY \"attacker.name\", damageTypeCategory\n",
      "    ': no such column: teamKillers_AccountId\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,20,42,44,45,47,48,49,50,52,53,54,56,57,58,65,66,67,104,105,106,107,136,144,145,150,151,152,169,170,171,172,181,182,183,187,195,196,197,199,200,201,202,203,204,205,207,208,216,217,218,220,221,222,223,224,225,226,228,229,237,238,239,241,242,243,244,245,246,247,249,250,251,258,259,260,265,271,272,280,281,282,284,285,286,287,291,296,297,298) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,4,42,44,45,47,48,49,50,51,52,53,54,55,57,58,59,61,62,63,70,71,72,108,109,111,112,113,121,122,123,125,126,127,128,129,130,131,133,135,136,137,138,140,141,142,143,145,146,147,164,165,166,167,168,169,176,177,178,182,190,191,192,194,195,196,197,198,199,200,202,203,211,212,213,215,216,217,218,219,220,221,223,224,232,233,234,236,237,238,239,240,241,242,244,253,254,255,260,266,270,271,279,280,281,283,284,285,287,291,292,293,301,302,303,305,306,307,311,313,314) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,4,15,16,18,26,27,35,36,37,39,40,41,42,44,45,46,47,48,49,50,51,52,53,54,55,57,58,59,61,62,63,70,71,72,108,109,111,112,113,121,122,123,125,126,127,128,129,130,131,133,138,139,140,157,158,159,160,161,162,169,170,171,175,183,184,185,187,188,189,190,191,192,193,195,196,204,205,206,208,209,210,211,212,213,214,216,217,225,226,227,229,230,231,232,233,234,235,237,238,239,246,247,248,252,254,255,256,257,259,260,261,266,268,269,270,278,279,280,282,283,284,286,287,295,296,297,299,300,301,302,306,311,312,313,314) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,4,26,27,35,36,37,39,40,41,42,44,45,46,47,48,49,50,51,52,53,54,55,57,58,59,61,62,63,70,71,72,108,109,111,112,113,121,122,123,125,126,127,129,131,132,133,134,136,137,138,142,143,144,145,147,149,150,151,168,169,170,171,172,173,180,181,182,186,194,195,196,198,199,200,201,202,203,204,206,207,215,216,217,219,220,221,222,223,224,225,227,228,236,237,238,240,241,242,243,244,245,246,248,249,250,257,258,259,264,269,270,278,279,280,282,283,284,286,287,291,294,297,298,306,307,308,310,311,312,313,314) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,4,17,38,42,44,45,50,51,52,53,54,55,57,58,59,61,108,109,111,112,113,121,122,123,124,125,126,127,131,133,134,135,136,138,139,140,142,144,145,146,147,150,151,152,160,161,162,163,164,165,166,167,168,169,186,187,188,189,190,191,198,199,200,204,212,213,214,216,217,218,219,220,221,222,224,225,233,234,235,237,238,239,240,241,242,243,245,246,254,255,256,258,259,260,261,262,263,264,266,267,268,275,276,277,283,285,289,292,294,295,303,304,305,307,308,309,311,312) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "⚠️ 파일 output3937.csv 처리 중 오류 발생: Execution failed on sql '\n",
      "    WITH name_cte AS (\n",
      "        SELECT DISTINCT \"character.name\" AS name\n",
      "        FROM output\n",
      "        WHERE \"character.teamId\" IN (\n",
      "            SELECT DISTINCT \"character.teamId\"\n",
      "            FROM output\n",
      "            WHERE \"character.accountId\" IN (\n",
      "                SELECT DISTINCT substr(teamKillers_AccountId, 3, 40) FROM output\n",
      "            )\n",
      "        )\n",
      "    )\n",
      "    \n",
      "    SELECT \"attacker.name\" AS name, COUNT(damage) AS damage_count, damageTypeCategory\n",
      "    FROM output\n",
      "    WHERE \"attacker.teamId\" = \"victim.teamId\"\n",
      "      AND \"attacker.name\" IN (SELECT name FROM name_cte)\n",
      "      AND \"victim.name\" IN (SELECT name FROM name_cte)\n",
      "      AND \"attacker.name\" != \"victim.name\"\n",
      "    GROUP BY \"attacker.name\", damageTypeCategory\n",
      "    ': no such column: damage\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,4,26,27,28,29,31,32,33,35,36,37,44,45,46,93,97,135,136,138,139,140,157,158,159,160,169,170,171,175,176,178,180,181,189,190,191,193,194,195,196,197,198,199,201,202,210,211,212,214,215,216,217,218,219,220,222,223,224,231,232,233,238,240,241,243,244,245,247,250,251,255,260,261,262) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,4,17,38,42,44,45,47,48,50,51,52,53,54,55,57,58,59,108,109,111,112,113,121,122,123,124,125,126,127,128,130,131,132,133,138,140,141,142,143,145,146,147,148,149,150,167,168,169,170,171,172,179,180,181,185,193,194,195,197,198,199,200,201,202,203,205,206,214,215,216,218,219,220,221,222,223,224,226,227,235,236,237,239,240,241,242,243,244,245,247,248,249,256,257,258,263,265,267,268,276,277,278,280,281,282,284,288,291,292,300,301,302,304,305,306,308,311,312) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,52,53,56,57,58,59,60,61,62,64,65,66,68,69,70,77,78,79,110,111,113,114,115,123,124,125,127,128,129,130,132,133,134,135,137,138,139,141,142,144,145,146,163,164,165,166,167,168,175,176,177,181,182,183,184,186,187,195,196,197,199,200,201,202,203,204,205,207,208,216,217,218,220,221,222,223,224,225,226,228,229,230,237,238,239,244,247,251,255,257,260,261,269,270,271,273,274,275,277,278,279,280,288,289,290,292,293,294,296,304,305,306,308,309,310,311,312) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,4,17,38,42,44,45,49,50,51,52,53,54,55,57,58,59,61,62,63,70,71,72,108,110,111,112,113,115,116,117,118,119,121,122,123,131,132,133,134,135,136,137,142,143,144,145,146,149,150,151,168,169,170,171,172,173,180,181,182,186,194,195,196,198,199,200,201,202,203,204,206,207,215,216,217,219,220,221,222,223,224,225,227,228,236,237,238,240,241,242,243,244,245,246,248,249,250,257,258,259,264,265,267,268,276,277,278,280,281,282,284,288,296,297,298,299) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,4,44,46,47,52,53,54,55,57,58,59,108,112,114,115,116,117,119,120,121,122,123,125,126,134,135,136,138,139,140,141,142,143,144,146,148,149,150,167,168,169,170,171,172,179,180,181,185,193,194,195,197,198,199,200,201,202,203,205,206,214,215,216,218,219,220,221,222,223,224,226,227,235,236,237,239,240,241,242,243,244,245,247,248,249,256,257,258,263,266,269,270,278,279,280,282,283,284,285,288,292,295,297,298,306,307,308,310,311,312,314,315) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,20,42,44,45,47,48,49,50,52,53,54,56,57,58,65,66,67,131,136,137,138,139,140,141,143,145,146,147,164,165,166,167,168,169,176,177,178,182,190,191,192,194,195,196,197,198,199,200,202,203,211,212,213,215,216,217,218,219,220,221,223,224,232,233,234,236,237,238,239,240,241,242,244,245,246,253,254,255,260,266,267,268,276,277,278,280,281,282,284,288,296,297,298) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,4,49,50,51,52,54,55,56,58,59,60,67,68,69,125,126,127,145,146,147,148,149,151,152,153,170,171,172,173,174,175,182,183,184,188,196,197,198,200,201,202,203,204,205,206,208,209,217,218,219,221,222,223,224,225,226,227,229,230,238,239,240,242,243,244,245,246,247,248,250,259,260,261,265,266,274,275,276,278,279,280,284,285,289,292,295,296,304,305,306,308,309,310,311,314,315) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,4,44,46,47,49,50,51,52,54,55,56,58,59,60,67,68,69,133,139,181,200,221,227,228,244,247,250,254,258,259,260,261,269,270,271,273,274,275,280,281,282) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,4,24,25,44,46,47,49,50,51,52,53,54,55,57,58,59,128,130,131,132,133,135,136,137,141,143,144,145,146,150,151,152,153,170,171,172,173,174,175,182,183,184,188,196,197,198,200,201,202,203,204,205,206,208,209,217,218,219,221,222,223,224,225,226,227,229,230,238,239,240,242,243,244,245,246,247,248,250,251,252,259,260,261,266,267,268,276,277,278,280,281,282,284,288,291,293,294,302,303,304,306,307,308,311,312) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "⚠️ 파일 output3947.csv 처리 중 오류 발생: Execution failed on sql '\n",
      "    WITH name_cte AS (\n",
      "        SELECT DISTINCT \"character.name\" AS name\n",
      "        FROM output\n",
      "        WHERE \"character.teamId\" IN (\n",
      "            SELECT DISTINCT \"character.teamId\"\n",
      "            FROM output\n",
      "            WHERE \"character.accountId\" IN (\n",
      "                SELECT DISTINCT substr(teamKillers_AccountId, 3, 40) FROM output\n",
      "            )\n",
      "        )\n",
      "    )\n",
      "    \n",
      "    SELECT \"attacker.name\" AS name, COUNT(damage) AS damage_count, damageTypeCategory\n",
      "    FROM output\n",
      "    WHERE \"attacker.teamId\" = \"victim.teamId\"\n",
      "      AND \"attacker.name\" IN (SELECT name FROM name_cte)\n",
      "      AND \"victim.name\" IN (SELECT name FROM name_cte)\n",
      "      AND \"attacker.name\" != \"victim.name\"\n",
      "    GROUP BY \"attacker.name\", damageTypeCategory\n",
      "    ': no such column: damage\n",
      "⚠️ 파일 output3948.csv 처리 중 오류 발생: Execution failed on sql '\n",
      "    WITH name_cte AS (\n",
      "        SELECT DISTINCT \"character.name\" AS name\n",
      "        FROM output\n",
      "        WHERE \"character.teamId\" IN (\n",
      "            SELECT DISTINCT \"character.teamId\"\n",
      "            FROM output\n",
      "            WHERE \"character.accountId\" IN (\n",
      "                SELECT DISTINCT substr(teamKillers_AccountId, 3, 40) FROM output\n",
      "            )\n",
      "        )\n",
      "    )\n",
      "    \n",
      "    SELECT \"attacker.name\" AS name, COUNT(damage) AS damage_count, damageTypeCategory\n",
      "    FROM output\n",
      "    WHERE \"attacker.teamId\" = \"victim.teamId\"\n",
      "      AND \"attacker.name\" IN (SELECT name FROM name_cte)\n",
      "      AND \"victim.name\" IN (SELECT name FROM name_cte)\n",
      "      AND \"attacker.name\" != \"victim.name\"\n",
      "    GROUP BY \"attacker.name\", damageTypeCategory\n",
      "    ': no such column: damage\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,23,42,44,45,47,48,49,50,51,52,54,55,56,58,59,60,67,68,69,105,106,107,116,139,140,141,142,143,148,150,151,152,169,170,171,172,173,174,181,182,183,187,195,196,197,199,200,201,202,203,204,205,207,208,216,217,218,220,221,222,223,224,225,226,228,229,237,238,239,241,242,243,244,245,246,247,249,250,251,258,259,260,265,267,271,276,277,285,286,287,289,290,291,293,294) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,4,42,44,45,47,48,50,51,52,53,54,55,57,58,59,108,110,111,112,113,115,116,117,118,119,121,122,123,131,132,133,135,136,137,138,141,148,149,150,151,153,154,155,172,173,174,175,176,177,184,185,186,190,198,199,200,202,203,204,205,206,207,208,210,211,219,220,221,223,224,225,226,227,228,229,231,232,240,241,242,244,245,246,247,248,249,250,252,253,254,261,262,263,268,270,271,279,280,281,283,284,285,286,290,292,295,296,297,305,306,307,309,310,311,314,315) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,42,44,45,49,50,51,52,53,54,55,57,58,59,61,62,63,70,71,72,108,112,113,115,116,124,125,126,128,129,130,131,133,134,135,136,138,139,140,141,143,144,145,146,149,150,151,152,169,170,171,172,173,174,181,182,183,187,195,196,197,199,200,201,202,203,204,205,207,208,216,217,218,220,221,222,223,224,225,226,228,229,237,238,239,241,242,243,244,245,246,247,249,258,259,260,265,266,274,275,276,278,279,280,282,284,288,290,293,298,299) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,24,25,44,46,47,49,50,51,52,53,54,55,57,58,59,61,62,63,70,71,72,81,112,114,115,116,117,119,120,121,122,123,125,126,134,135,136,138,139,140,141,142,143,144,146,148,149,150,167,168,169,170,171,172,179,180,181,185,193,194,195,197,198,199,200,201,202,203,205,206,214,215,216,218,219,220,221,222,223,224,226,227,235,236,237,239,240,241,242,243,244,245,247,248,249,256,257,258,264,266,267,268,269,277,278,279,281,282,283,285,289,292,294,295,303,304,305,307,308,309,314,315) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,4,42,44,45,52,53,54,55,57,58,59,108,112,114,115,116,117,119,120,121,122,123,125,126,134,135,136,138,139,140,141,142,143,144,146,148,149,150,167,168,169,170,171,172,179,180,181,185,193,194,195,197,198,199,200,201,202,203,205,206,214,215,216,218,219,220,221,222,223,224,226,227,235,236,237,239,240,241,242,243,244,245,247,248,249,256,257,258,264,267,268,269,277,278,279,281,282,283,284,288,292,297,298,306,307,308,310,311,312,313,314,315) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,4,17,52,53,54,55,57,58,59,108,123,124,125,127,128,136,137,138,140,141,142,144,146,147,148,149,151,152,153,170,171,172,173,174,175,182,183,184,188,196,197,198,200,201,202,203,204,205,206,208,209,217,218,219,221,222,223,224,225,226,227,229,230,238,239,240,242,243,244,245,246,247,248,250,259,260,261,266,268,272,273,274,275,283,284,285,287,288,289,293,296,297) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "⚠️ 파일 output3955.csv 처리 중 오류 발생: Execution failed on sql '\n",
      "    WITH name_cte AS (\n",
      "        SELECT DISTINCT \"character.name\" AS name\n",
      "        FROM output\n",
      "        WHERE \"character.teamId\" IN (\n",
      "            SELECT DISTINCT \"character.teamId\"\n",
      "            FROM output\n",
      "            WHERE \"character.accountId\" IN (\n",
      "                SELECT DISTINCT substr(teamKillers_AccountId, 3, 40) FROM output\n",
      "            )\n",
      "        )\n",
      "    )\n",
      "    \n",
      "    SELECT \"attacker.name\" AS name, COUNT(damage) AS damage_count, damageTypeCategory\n",
      "    FROM output\n",
      "    WHERE \"attacker.teamId\" = \"victim.teamId\"\n",
      "      AND \"attacker.name\" IN (SELECT name FROM name_cte)\n",
      "      AND \"victim.name\" IN (SELECT name FROM name_cte)\n",
      "      AND \"attacker.name\" != \"victim.name\"\n",
      "    GROUP BY \"attacker.name\", damageTypeCategory\n",
      "    ': no such column: damage\n",
      "⚠️ 파일 output3956.csv 처리 중 오류 발생: Execution failed on sql '\n",
      "    WITH name_cte AS (\n",
      "        SELECT DISTINCT \"character.name\" AS name\n",
      "        FROM output\n",
      "        WHERE \"character.teamId\" IN (\n",
      "            SELECT DISTINCT \"character.teamId\"\n",
      "            FROM output\n",
      "            WHERE \"character.accountId\" IN (\n",
      "                SELECT DISTINCT substr(teamKillers_AccountId, 3, 40) FROM output\n",
      "            )\n",
      "        )\n",
      "    )\n",
      "    \n",
      "    SELECT \"attacker.name\" AS name, COUNT(damage) AS damage_count, damageTypeCategory\n",
      "    FROM output\n",
      "    WHERE \"attacker.teamId\" = \"victim.teamId\"\n",
      "      AND \"attacker.name\" IN (SELECT name FROM name_cte)\n",
      "      AND \"victim.name\" IN (SELECT name FROM name_cte)\n",
      "      AND \"attacker.name\" != \"victim.name\"\n",
      "    GROUP BY \"attacker.name\", damageTypeCategory\n",
      "    ': no such column: damage\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,4,42,44,45,49,50,51,52,53,54,55,57,58,59,61,62,63,70,71,72,108,112,114,115,116,117,119,120,121,122,123,125,126,134,135,136,138,139,140,141,142,143,144,146,147,148,165,166,167,168,169,170,177,178,179,183,191,192,193,195,196,197,198,199,200,201,203,204,212,213,214,216,217,218,219,220,221,222,224,225,233,234,235,237,238,239,240,241,242,243,245,246,247,254,255,256,260,263,266,267,268,276,277,278,280,281,282,284,285,289,292,293,301,302,303,305,306,307,309,314,315) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,4,42,44,45,47,48,49,50,51,52,53,54,55,57,58,59,61,62,63,70,71,72,108,109,111,112,113,121,122,123,125,126,127,128,130,131,132,133,135,136,137,142,143,144,145,146,148,150,151,152,169,170,171,172,173,174,181,182,183,187,195,196,197,199,200,201,202,203,204,205,207,208,216,217,218,220,221,222,223,224,225,226,228,229,237,238,239,241,242,243,244,245,246,247,249,250,251,258,259,260,267,269,270,278,279,280,282,283,284,286,290,296,297,298) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "⚠️ 파일 output3959.csv 처리 중 오류 발생: Execution failed on sql '\n",
      "    WITH name_cte AS (\n",
      "        SELECT DISTINCT \"character.name\" AS name\n",
      "        FROM output\n",
      "        WHERE \"character.teamId\" IN (\n",
      "            SELECT DISTINCT \"character.teamId\"\n",
      "            FROM output\n",
      "            WHERE \"character.accountId\" IN (\n",
      "                SELECT DISTINCT substr(teamKillers_AccountId, 3, 40) FROM output\n",
      "            )\n",
      "        )\n",
      "    )\n",
      "    \n",
      "    SELECT \"attacker.name\" AS name, COUNT(damage) AS damage_count, damageTypeCategory\n",
      "    FROM output\n",
      "    WHERE \"attacker.teamId\" = \"victim.teamId\"\n",
      "      AND \"attacker.name\" IN (SELECT name FROM name_cte)\n",
      "      AND \"victim.name\" IN (SELECT name FROM name_cte)\n",
      "      AND \"attacker.name\" != \"victim.name\"\n",
      "    GROUP BY \"attacker.name\", damageTypeCategory\n",
      "    ': no such column: damage\n",
      "⚠️ 파일 output3960.csv 처리 중 오류 발생: Execution failed on sql '\n",
      "    WITH name_cte AS (\n",
      "        SELECT DISTINCT \"character.name\" AS name\n",
      "        FROM output\n",
      "        WHERE \"character.teamId\" IN (\n",
      "            SELECT DISTINCT \"character.teamId\"\n",
      "            FROM output\n",
      "            WHERE \"character.accountId\" IN (\n",
      "                SELECT DISTINCT substr(teamKillers_AccountId, 3, 40) FROM output\n",
      "            )\n",
      "        )\n",
      "    )\n",
      "    \n",
      "    SELECT \"attacker.name\" AS name, COUNT(damage) AS damage_count, damageTypeCategory\n",
      "    FROM output\n",
      "    WHERE \"attacker.teamId\" = \"victim.teamId\"\n",
      "      AND \"attacker.name\" IN (SELECT name FROM name_cte)\n",
      "      AND \"victim.name\" IN (SELECT name FROM name_cte)\n",
      "      AND \"attacker.name\" != \"victim.name\"\n",
      "    GROUP BY \"attacker.name\", damageTypeCategory\n",
      "    ': no such column: damage\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,23,26,42,44,45,46,49,50,51,52,54,55,56,58,59,60,67,68,69,116,144,146,151,152,153,170,171,172,173,182,183,184,188,196,197,198,200,201,202,203,204,205,206,208,209,217,218,219,221,222,223,224,225,226,227,229,230,238,239,240,242,243,244,245,246,247,248,250,251,252,259,260,261,266,269,273,274,283,284,285,287,288,289,292,294,298,299) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "⚠️ 파일 output3961.csv 처리 중 오류 발생: You are trying to merge on object and float64 columns for key 'name'. If you wish to proceed you should use pd.concat\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,4,17,44,46,47,49,50,51,52,53,54,55,57,58,59,61,116,134,142,143,144,145,146,148,151,152,153,170,171,172,173,174,175,182,183,184,188,196,197,198,200,201,202,203,204,205,206,208,209,217,218,219,221,222,223,224,225,226,227,229,230,238,239,240,242,243,244,245,246,247,248,250,259,260,261,267,268,269,277,278,279,281,282,283,284,288,291,293,296,297) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,23,26,42,44,45,46,49,50,51,52,54,55,56,58,59,60,67,68,69,126,141,144,149,150,151,168,169,170,171,180,181,182,186,194,195,196,198,199,200,201,202,203,204,206,207,215,216,217,219,220,221,222,223,224,225,227,228,236,237,238,240,241,242,243,244,245,246,248,257,258,259,265,269,270,271,272,280,281,282,284,285,286,288,291,295,296,297) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "⚠️ 파일 output3964.csv 처리 중 오류 발생: Execution failed on sql '\n",
      "    WITH name_cte AS (\n",
      "        SELECT DISTINCT \"character.name\" AS name\n",
      "        FROM output\n",
      "        WHERE \"character.teamId\" IN (\n",
      "            SELECT DISTINCT \"character.teamId\"\n",
      "            FROM output\n",
      "            WHERE \"character.accountId\" IN (\n",
      "                SELECT DISTINCT substr(teamKillers_AccountId, 3, 40) FROM output\n",
      "            )\n",
      "        )\n",
      "    )\n",
      "    \n",
      "    SELECT \"attacker.name\" AS name, COUNT(damage) AS damage_count, damageTypeCategory\n",
      "    FROM output\n",
      "    WHERE \"attacker.teamId\" = \"victim.teamId\"\n",
      "      AND \"attacker.name\" IN (SELECT name FROM name_cte)\n",
      "      AND \"victim.name\" IN (SELECT name FROM name_cte)\n",
      "      AND \"attacker.name\" != \"victim.name\"\n",
      "    GROUP BY \"attacker.name\", damageTypeCategory\n",
      "    ': no such column: damage\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,4,42,44,45,47,48,49,50,51,52,53,54,55,57,58,59,61,62,63,70,71,72,108,112,113,115,116,124,125,126,128,129,130,131,133,134,135,136,138,139,140,141,142,143,144,146,148,149,150,167,168,169,170,171,172,179,180,181,185,193,194,195,197,198,199,200,201,202,203,205,206,214,215,216,218,219,220,221,222,223,224,226,227,235,236,237,239,240,241,242,243,244,245,247,248,249,256,257,258,263,268,269,270,278,279,280,282,283,284,288,292,294,296,297,305,306,307,309,310,311,313,314) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,4,42,44,45,52,53,54,55,57,58,59,61,62,63,70,71,72,108,110,111,112,113,115,116,117,118,119,121,122,123,131,132,133,135,136,137,138,139,140,141,146,149,151,152,153,170,171,172,173,174,175,182,183,184,188,189,190,191,193,194,202,203,204,206,207,208,209,210,211,212,214,215,223,224,225,227,228,229,230,231,232,233,235,236,237,244,245,246,251,252,260,261,262,264,265,266,269,273,274,278,280,281,289,290,291,293,294,295,298,299,307,308,309,311,312,313,314,315) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,4,17,47,48,49,50,51,52,53,54,55,57,58,59,61,62,63,70,71,72,108,110,111,112,113,115,116,117,118,123,124,125,127,128,136,137,138,140,141,142,143,145,146,147,148,150,151,152,169,170,171,172,173,174,181,182,183,187,195,196,197,199,200,201,202,203,204,205,207,208,216,217,218,220,221,222,223,224,225,226,228,229,237,238,239,241,242,243,244,245,246,247,249,250,251,258,259,260,265,268,269,277,278,279,281,282,283,284,288,292,295,296) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,4,42,44,45,49,50,51,52,54,55,56,58,59,60,67,68,69,105,106,110,111,112,114,115,116,117,119,120,121,122,123,125,126,134,135,136,138,139,140,141,142,143,144,146,148,149,150,167,168,169,170,171,172,179,180,181,185,193,194,195,197,198,199,200,201,202,203,205,206,214,215,216,218,219,220,221,222,223,224,226,227,235,236,237,239,240,241,242,243,244,245,247,248,249,256,257,258,264,266,268,269,277,278,279,281,282,283,284,288,290,292,293,301,302,303,305,306,307,309,312,313) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,4,56,57,58,59,61,62,63,65,66,67,74,75,76,107,108,109,118,120,121,123,124,125,133,134,135,137,138,139,140,141,142,143,145,146,147,164,165,166,167,176,177,178,182,190,191,192,194,195,196,197,198,199,200,202,203,211,212,213,215,216,217,218,219,220,221,223,224,232,233,234,236,237,238,239,240,241,242,244,253,254,255,260,261,263,264,272,273,274,276,277,278,280,283,287,293,294,295) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,23,44,46,47,49,50,51,52,54,55,56,58,59,60,67,68,69,113,118,122,123,125,126,134,135,136,138,139,140,141,142,143,144,147,148,149,150,167,168,169,170,179,180,181,185,193,194,195,197,198,199,200,201,202,203,205,206,214,215,216,218,219,220,221,222,223,224,226,227,235,236,237,239,240,241,242,243,244,245,247,248,249,256,257,258,263,264,268,272,274,275,283,284,285,287,288,289,292,293) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,20,24,25,44,46,47,49,50,51,52,54,55,56,58,59,60,67,68,69,136,138,139,140,141,143,144,145,162,163,164,165,174,175,176,180,188,189,190,192,193,194,195,196,197,198,200,201,209,210,211,213,214,215,216,217,218,219,221,222,230,231,232,234,235,236,237,238,239,240,242,243,244,251,252,253,258,261,264,268,272,275,276,277,285,286,287,289,290,291,295,296,304,305,306,308,309,310,311,312) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,4,44,46,47,49,50,51,52,53,54,55,57,58,59,61,108,112,114,115,116,117,119,120,121,122,123,125,126,134,135,136,138,139,140,141,142,143,144,146,148,149,150,167,168,169,170,171,172,179,180,181,185,193,194,195,197,198,199,200,201,202,203,205,206,214,215,216,218,219,220,221,222,223,224,226,227,235,236,237,239,240,241,242,243,244,245,247,256,257,258,263,266,268,269,277,278,279,281,282,283,284,288,290,295,296) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,20,24,25,26,27,29,30,31,33,34,35,42,43,44,91,113,115,116,119,141,142,143,144,146,148,149,150,167,168,169,170,179,180,181,185,193,194,195,197,198,199,200,201,202,203,205,206,214,215,216,218,219,220,221,222,223,224,226,227,235,236,237,239,240,241,242,243,244,245,247,248,249,256,257,258,263,265,267,271,273,274,282,283,284,286,287,288,296,297,298) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,4,56,57,58,59,60,61,62,64,65,66,68,69,70,77,78,79,110,112,113,114,115,117,118,119,120,121,123,124,125,133,134,135,137,138,139,140,141,142,143,145,146,147,164,165,166,167,168,169,176,177,178,182,190,191,192,194,195,196,197,198,199,200,202,203,211,212,213,215,216,217,218,219,220,221,223,224,232,233,234,236,237,238,239,240,241,242,244,253,254,255,260,266,268,269,277,278,279,281,282,283,284,288,294,295,296,304,305,306,308,309,310,313,314) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,4,42,44,45,52,53,54,55,57,58,59,61,62,63,70,71,72,108,110,111,112,113,115,116,117,118,119,121,122,123,131,132,133,135,136,137,142,144,146,147,148,149,151,152,153,170,171,172,173,174,175,182,183,184,188,196,197,198,200,201,202,203,204,205,206,208,209,217,218,219,221,222,223,224,225,226,227,229,230,238,239,240,242,243,244,245,246,247,248,250,251,252,259,260,261,267,268,269,277,278,279,281,282,283,284,288,290,291,292,300,301,302,304,305,306,311,314,315) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,4,42,44,45,52,53,54,55,57,58,59,61,62,63,70,71,72,108,110,111,112,113,115,116,117,118,119,121,122,123,131,132,133,135,136,137,138,139,140,141,143,145,146,147,164,165,166,167,168,169,176,177,178,182,190,191,192,194,195,196,197,198,199,200,202,203,211,212,213,215,216,217,218,219,220,221,223,224,232,233,234,236,237,238,239,240,241,242,244,245,246,253,254,255,260,263,267,268,276,277,278,280,281,282,284,288,294,296,298,299) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,4,42,44,45,49,50,51,52,54,55,56,58,59,60,67,68,69,126,128,129,130,131,133,134,135,136,140,141,142,143,144,145,147,149,150,151,168,169,170,171,172,173,180,181,182,186,194,195,196,198,199,200,201,202,203,204,206,207,215,216,217,219,220,221,222,223,224,225,227,228,236,237,238,240,241,242,243,244,245,246,248,249,250,257,258,259,264,267,268,269,277,278,279,281,282,283,285,289,291,293,294,302,303,304,306,307,308,311,312) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "⚠️ 파일 output3978.csv 처리 중 오류 발생: Execution failed on sql '\n",
      "    WITH name_cte AS (\n",
      "        SELECT DISTINCT \"character.name\" AS name\n",
      "        FROM output\n",
      "        WHERE \"character.teamId\" IN (\n",
      "            SELECT DISTINCT \"character.teamId\"\n",
      "            FROM output\n",
      "            WHERE \"character.accountId\" IN (\n",
      "                SELECT DISTINCT substr(teamKillers_AccountId, 3, 40) FROM output\n",
      "            )\n",
      "        )\n",
      "    )\n",
      "    \n",
      "    SELECT \"attacker.name\" AS name, COUNT(damage) AS damage_count, damageTypeCategory\n",
      "    FROM output\n",
      "    WHERE \"attacker.teamId\" = \"victim.teamId\"\n",
      "      AND \"attacker.name\" IN (SELECT name FROM name_cte)\n",
      "      AND \"victim.name\" IN (SELECT name FROM name_cte)\n",
      "      AND \"attacker.name\" != \"victim.name\"\n",
      "    GROUP BY \"attacker.name\", damageTypeCategory\n",
      "    ': no such column: damage\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,4,17,38,42,44,45,49,50,51,52,53,54,55,57,58,59,108,110,111,112,113,115,116,117,118,122,123,125,126,134,135,136,137,138,139,140,141,142,143,144,146,147,148,165,166,167,168,169,170,177,178,179,183,191,192,193,195,196,197,198,199,200,201,203,204,212,213,214,216,217,218,219,220,221,222,224,225,233,234,235,237,238,239,240,241,242,243,245,246,247,254,255,256,261,263,265,266,274,275,276,278,279,280,283,284,288,290,293,294,302,303,304,306,307,308,309,312,313) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,4,42,44,45,49,50,51,52,54,55,56,105,106,107,108,110,111,112,113,115,116,117,118,119,121,122,123,131,132,133,135,136,137,138,139,140,141,143,148,149,150,167,168,169,170,171,172,179,180,181,185,193,194,195,197,198,199,200,201,202,203,205,206,214,215,216,218,219,220,221,222,223,224,226,227,235,236,237,239,240,241,242,243,244,245,247,248,249,256,257,258,263,265,269,270,278,279,280,282,283,284,285,289,291,292,300,301,302,304,305,306,312,313,314) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "⚠️ 파일 output3981.csv 처리 중 오류 발생: Execution failed on sql '\n",
      "    WITH name_cte AS (\n",
      "        SELECT DISTINCT \"character.name\" AS name\n",
      "        FROM output\n",
      "        WHERE \"character.teamId\" IN (\n",
      "            SELECT DISTINCT \"character.teamId\"\n",
      "            FROM output\n",
      "            WHERE \"character.accountId\" IN (\n",
      "                SELECT DISTINCT substr(teamKillers_AccountId, 3, 40) FROM output\n",
      "            )\n",
      "        )\n",
      "    )\n",
      "    \n",
      "    SELECT \"attacker.name\" AS name, COUNT(damage) AS damage_count, damageTypeCategory\n",
      "    FROM output\n",
      "    WHERE \"attacker.teamId\" = \"victim.teamId\"\n",
      "      AND \"attacker.name\" IN (SELECT name FROM name_cte)\n",
      "      AND \"victim.name\" IN (SELECT name FROM name_cte)\n",
      "      AND \"attacker.name\" != \"victim.name\"\n",
      "    GROUP BY \"attacker.name\", damageTypeCategory\n",
      "    ': no such column: damage\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,4,42,44,45,47,48,49,50,51,52,53,54,55,57,58,59,61,62,63,70,71,72,108,112,114,115,116,117,119,120,121,122,123,125,126,134,135,136,138,139,140,141,143,144,145,146,148,149,150,167,168,169,170,171,172,179,180,181,185,193,194,195,197,198,199,200,201,202,203,205,206,214,215,216,218,219,220,221,222,223,224,226,227,235,236,237,239,240,241,242,243,244,245,247,248,249,256,257,258,263,265,267,268,276,277,278,280,281,282,284,287,291,294,296,297,305,306,307,309,310,311,314,315) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,42,44,45,49,50,51,52,54,55,56,131,133,134,135,136,138,139,140,142,143,145,146,147,164,165,166,167,168,169,176,177,178,182,183,184,185,187,188,196,197,198,200,201,202,203,204,205,206,208,209,217,218,219,221,222,223,224,225,226,227,229,230,231,238,239,240,244,247,249,251,255,261,262,263,266,267,275,276,277,279,280,281,282,290,291,292,294,295,296,297,298) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "⚠️ 파일 output3984.csv 처리 중 오류 발생: Execution failed on sql '\n",
      "    WITH name_cte AS (\n",
      "        SELECT DISTINCT \"character.name\" AS name\n",
      "        FROM output\n",
      "        WHERE \"character.teamId\" IN (\n",
      "            SELECT DISTINCT \"character.teamId\"\n",
      "            FROM output\n",
      "            WHERE \"character.accountId\" IN (\n",
      "                SELECT DISTINCT substr(teamKillers_AccountId, 3, 40) FROM output\n",
      "            )\n",
      "        )\n",
      "    )\n",
      "    \n",
      "    SELECT \"attacker.name\" AS name, COUNT(damage) AS damage_count, damageTypeCategory\n",
      "    FROM output\n",
      "    WHERE \"attacker.teamId\" = \"victim.teamId\"\n",
      "      AND \"attacker.name\" IN (SELECT name FROM name_cte)\n",
      "      AND \"victim.name\" IN (SELECT name FROM name_cte)\n",
      "      AND \"attacker.name\" != \"victim.name\"\n",
      "    GROUP BY \"attacker.name\", damageTypeCategory\n",
      "    ': no such column: damage\n",
      "⚠️ 파일 output3985.csv 처리 중 오류 발생: Execution failed on sql '\n",
      "    WITH name_cte AS (\n",
      "        SELECT DISTINCT \"character.name\" AS name\n",
      "        FROM output\n",
      "        WHERE \"character.teamId\" IN (\n",
      "            SELECT DISTINCT \"character.teamId\"\n",
      "            FROM output\n",
      "            WHERE \"character.accountId\" IN (\n",
      "                SELECT DISTINCT substr(teamKillers_AccountId, 3, 40) FROM output\n",
      "            )\n",
      "        )\n",
      "    )\n",
      "    \n",
      "    SELECT \"attacker.name\" AS name, COUNT(damage) AS damage_count, damageTypeCategory\n",
      "    FROM output\n",
      "    WHERE \"attacker.teamId\" = \"victim.teamId\"\n",
      "      AND \"attacker.name\" IN (SELECT name FROM name_cte)\n",
      "      AND \"victim.name\" IN (SELECT name FROM name_cte)\n",
      "      AND \"attacker.name\" != \"victim.name\"\n",
      "    GROUP BY \"attacker.name\", damageTypeCategory\n",
      "    ': no such column: damage\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,4,42,44,45,47,48,49,50,51,52,54,55,56,105,106,107,108,110,111,112,113,115,116,117,118,122,123,125,126,134,135,136,138,139,140,141,142,143,144,146,148,149,150,167,168,169,170,171,172,179,180,181,185,193,194,195,197,198,199,200,201,202,203,205,206,214,215,216,218,219,220,221,222,223,224,226,227,235,236,237,239,240,241,242,243,244,245,247,256,257,258,263,265,267,268,276,277,278,280,281,282,284,288,289,295,296,304,305,306,308,309,310,312,314,315) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,4,42,44,45,52,53,54,55,57,58,59,61,108,110,111,112,113,115,116,117,118,119,121,122,123,131,132,133,135,136,137,138,140,141,142,143,148,149,150,167,168,169,170,171,172,179,180,181,185,193,194,195,197,198,199,200,201,202,203,205,206,214,215,216,218,219,220,221,222,223,224,226,227,235,236,237,239,240,241,242,243,244,245,247,248,249,256,257,258,263,264,265,273,274,275,277,278,279,281,285,289,291,296,297) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,4,42,44,45,47,48,49,50,51,52,53,54,55,57,58,59,61,62,63,70,71,72,108,110,111,112,113,115,116,117,118,119,121,122,123,131,132,133,135,136,137,138,140,141,142,143,145,146,147,164,165,166,167,168,169,176,177,178,182,190,191,192,194,195,196,197,198,199,200,202,203,211,212,213,215,216,217,218,219,220,221,223,224,232,233,234,236,237,238,239,240,241,242,244,245,246,253,254,255,260,261,262,270,271,272,274,275,276,278,285,289,293,294,302,303,304,306,307,308,312,313,314) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,4,42,44,45,47,48,49,50,51,52,53,54,55,57,58,59,108,110,111,112,113,115,116,117,118,119,121,122,123,131,132,133,135,136,137,138,140,141,142,143,146,147,148,165,166,167,168,169,170,177,178,179,183,184,185,186,188,189,197,198,199,201,202,203,204,205,206,207,209,210,218,219,220,222,223,224,225,226,227,228,230,231,232,239,240,241,245,253,254,255,257,258,259,264,265,266,274,275,276,278,279,280,282,288,292,294,296,297,305,306,307,309,310,311,313,314,315) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,20,42,44,45,49,50,51,52,54,55,56,136,138,141,143,144,145,162,163,164,165,174,175,176,180,188,189,190,192,193,194,195,196,197,198,200,201,209,210,211,213,214,215,216,217,218,219,221,222,230,231,232,234,235,236,237,238,239,240,242,243,244,251,252,253,258,259,267,269,273,274,275,283,284,285,287,288,289,292,293,301,302,303,305,306,307,310,311,312) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,4,17,24,25,44,46,47,52,53,54,55,57,58,59,108,110,111,112,113,115,116,117,118,119,121,122,123,131,132,133,135,136,137,141,142,143,144,146,149,150,151,168,169,170,171,172,173,180,181,182,186,187,188,189,191,192,200,201,202,204,205,206,207,208,209,210,212,213,221,222,223,225,226,227,228,229,230,231,233,234,235,242,243,244,249,251,252,260,261,262,264,265,266,268,269,277,278,279,281,282,283,284,288,291,292,293,301,302,303,305,306,307,309,311,312) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,4,17,38,42,44,45,49,50,51,52,54,55,56,58,59,60,67,68,69,105,106,107,108,112,114,115,116,117,119,120,121,122,123,125,126,134,135,136,137,138,139,140,141,143,144,145,146,149,150,151,152,169,170,171,172,173,174,181,182,183,187,195,196,197,199,200,201,202,203,204,205,207,208,216,217,218,220,221,222,223,224,225,226,228,229,237,238,239,241,242,243,244,245,246,247,249,258,259,260,265,267,269,270,278,279,280,281,282,283,284,285,289,293,294,295,303,304,305,307,308,309,312,313) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,4,42,44,45,49,50,51,52,54,55,56,105,106,107,108,112,114,115,116,117,119,120,121,122,123,125,126,134,135,136,138,139,140,141,142,143,144,146,148,149,150,167,168,169,170,171,172,179,180,181,185,193,194,195,197,198,199,200,201,202,203,205,206,214,215,216,218,219,220,221,222,223,224,226,227,235,236,237,239,240,241,242,243,244,245,247,248,249,256,257,258,263,265,268,269,277,278,279,281,282,283,286,287,291,293,298,299) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,4,24,25,28,29,37,38,39,41,42,43,44,46,47,48,49,50,51,52,53,54,55,57,58,59,61,62,63,70,71,72,108,110,111,112,113,115,116,117,118,122,124,125,127,128,136,137,138,140,141,142,143,144,145,146,150,151,152,153,170,171,172,173,174,175,182,183,184,188,196,197,198,200,201,202,203,204,205,206,208,209,217,218,219,221,222,223,224,225,226,227,229,230,238,239,240,242,243,244,245,246,247,248,250,251,252,259,260,261,266,270,271,279,280,281,283,284,285,287,291,293,295,296,304,305,306,308,309,310,312,314,315) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "⚠️ 파일 output3995.csv 처리 중 오류 발생: Execution failed on sql '\n",
      "    WITH name_cte AS (\n",
      "        SELECT DISTINCT \"character.name\" AS name\n",
      "        FROM output\n",
      "        WHERE \"character.teamId\" IN (\n",
      "            SELECT DISTINCT \"character.teamId\"\n",
      "            FROM output\n",
      "            WHERE \"character.accountId\" IN (\n",
      "                SELECT DISTINCT substr(teamKillers_AccountId, 3, 40) FROM output\n",
      "            )\n",
      "        )\n",
      "    )\n",
      "    \n",
      "    SELECT \"attacker.name\" AS name, COUNT(damage) AS damage_count, damageTypeCategory\n",
      "    FROM output\n",
      "    WHERE \"attacker.teamId\" = \"victim.teamId\"\n",
      "      AND \"attacker.name\" IN (SELECT name FROM name_cte)\n",
      "      AND \"victim.name\" IN (SELECT name FROM name_cte)\n",
      "      AND \"attacker.name\" != \"victim.name\"\n",
      "    GROUP BY \"attacker.name\", damageTypeCategory\n",
      "    ': no such column: damage\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,4,42,44,45,47,48,49,50,51,52,53,54,55,57,58,59,108,112,113,115,116,124,125,126,128,129,130,131,133,134,135,136,138,139,140,141,143,144,145,146,149,150,151,168,169,170,171,172,173,180,181,182,186,194,195,196,198,199,200,201,202,203,204,206,207,215,216,217,219,220,221,222,223,224,225,227,228,236,237,238,240,241,242,243,244,245,246,248,249,250,257,258,259,264,266,267,268,276,277,278,280,281,282,286,290,292,293,294,302,303,304,306,307,308,310,314,315) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "⚠️ 파일 output3997.csv 처리 중 오류 발생: Execution failed on sql '\n",
      "    WITH name_cte AS (\n",
      "        SELECT DISTINCT \"character.name\" AS name\n",
      "        FROM output\n",
      "        WHERE \"character.teamId\" IN (\n",
      "            SELECT DISTINCT \"character.teamId\"\n",
      "            FROM output\n",
      "            WHERE \"character.accountId\" IN (\n",
      "                SELECT DISTINCT substr(teamKillers_AccountId, 3, 40) FROM output\n",
      "            )\n",
      "        )\n",
      "    )\n",
      "    \n",
      "    SELECT \"attacker.name\" AS name, COUNT(damage) AS damage_count, damageTypeCategory\n",
      "    FROM output\n",
      "    WHERE \"attacker.teamId\" = \"victim.teamId\"\n",
      "      AND \"attacker.name\" IN (SELECT name FROM name_cte)\n",
      "      AND \"victim.name\" IN (SELECT name FROM name_cte)\n",
      "      AND \"attacker.name\" != \"victim.name\"\n",
      "    GROUP BY \"attacker.name\", damageTypeCategory\n",
      "    ': no such column: damage\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,4,42,44,45,47,48,49,50,51,52,54,55,56,58,105,106,107,108,112,114,115,116,117,119,120,121,122,123,125,126,134,135,136,138,139,140,141,143,144,145,146,148,149,150,167,168,169,170,171,172,179,180,181,185,193,194,195,197,198,199,200,201,202,203,205,206,214,215,216,218,219,220,221,222,223,224,226,227,235,236,237,239,240,241,242,243,244,245,247,248,249,256,257,258,263,265,268,269,277,278,279,281,282,283,287,291,293,296,297,305,306,307,309,310,311,313,314) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2017468029.py:6: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n",
      "  df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n",
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/2758177579.py:7: DtypeWarning: Columns (0,52,53,54,55,57,58,59,61,62,63,70,71,72,148,149,150,167,168,169,170,171,172,179,180,181,185,193,194,195,197,198,199,200,201,202,203,205,206,214,215,216,218,219,220,221,222,223,224,226,227,235,236,237,239,240,241,242,243,244,245,247,256,257,258,263,265,268,269,277,278,279,281,282,283,284,288,292,293,301,302,303,305,306,307,310,311,312) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  output = pd.read_csv(csvUrl)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "✅ 모든 파일 처리 완료\n"
     ]
    }
   ],
   "source": [
    "df_combined3 = pd.DataFrame()\n",
    "\n",
    "for i in range(3000,4000,1):\n",
    "    try:\n",
    "        df = make_df(f\"./data/output{i}.csv\")  # CSV 파일을 데이터프레임으로 변환\n",
    "        df_combined3 = pd.concat([df_combined3, df], ignore_index=True,join='outer')\n",
    "    except Exception as e:\n",
    "        print(f\"⚠️ 파일 output{i}.csv 처리 중 오류 발생: {e}\")\n",
    "        continue  # 오류 발생 시 다음 파일로 넘어감\n",
    "\n",
    "print(\"✅ 모든 파일 처리 완료\")\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 42,
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/var/folders/t0/jzs0rm595cqf9cxn0f116r6c0000gn/T/ipykernel_13772/3403861113.py:1: FutureWarning: Downcasting object dtype arrays on .fillna, .ffill, .bfill is deprecated and will change in a future version. Call result.infer_objects(copy=False) instead. To opt-in to the future behavior, set `pd.set_option('future.no_silent_downcasting', True)`\n",
      "  df_combined3= df_combined3.fillna(0)\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>name</th>\n",
       "      <th>Damage_Explosion_Grenade</th>\n",
       "      <th>Damage_Gun</th>\n",
       "      <th>Damage_VehicleHit</th>\n",
       "      <th>victim_count</th>\n",
       "      <th>revive_count</th>\n",
       "      <th>vehicle_count</th>\n",
       "      <th>Damage_Explosion_Vehicle</th>\n",
       "      <th>Damage_Melee</th>\n",
       "      <th>Damage_BlueZoneGrenade</th>\n",
       "      <th>Damage_MeleeThrow</th>\n",
       "      <th>Damage_Molotov</th>\n",
       "      <th>Damage_Punch</th>\n",
       "      <th>Damage_Explosion_C4</th>\n",
       "      <th>Damage_Explosion_JerryCan</th>\n",
       "      <th>Damage_Explosion_StickyBomb</th>\n",
       "      <th>Damage_DropStructHit</th>\n",
       "      <th>Damage_Explosion_PanzerFaustWarhead</th>\n",
       "      <th>Damage_Explosion_GasPump</th>\n",
       "      <th>Damage_Explosion_PanzerFaustBackBlast</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>3wu26r</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>18.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>zoyy1101</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>20.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>HuiMieGongJue</td>\n",
       "      <td>2.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>16.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>F-king6</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>50.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>KUN_GEGE_</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>6.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1783</th>\n",
       "      <td>nbl2021</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>5.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>24.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1784</th>\n",
       "      <td>Zhauke</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>10.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1785</th>\n",
       "      <td>uSye_</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>3.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1786</th>\n",
       "      <td>ikounb</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1787</th>\n",
       "      <td>1n12</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>3.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>1788 rows × 20 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "               name  Damage_Explosion_Grenade  Damage_Gun  Damage_VehicleHit  \\\n",
       "0            3wu26r                       0.0         0.0                0.0   \n",
       "1          zoyy1101                       0.0         0.0                0.0   \n",
       "2     HuiMieGongJue                       2.0         0.0                0.0   \n",
       "3           F-king6                       0.0         0.0                1.0   \n",
       "4         KUN_GEGE_                       0.0         0.0                0.0   \n",
       "...             ...                       ...         ...                ...   \n",
       "1783        nbl2021                       0.0         0.0                5.0   \n",
       "1784         Zhauke                       0.0         0.0                1.0   \n",
       "1785          uSye_                       0.0         0.0                0.0   \n",
       "1786         ikounb                       0.0         1.0                0.0   \n",
       "1787           1n12                       0.0         0.0                0.0   \n",
       "\n",
       "      victim_count  revive_count  vehicle_count  Damage_Explosion_Vehicle  \\\n",
       "0              0.0           0.0           18.0                       0.0   \n",
       "1              0.0           0.0           20.0                       0.0   \n",
       "2              0.0           0.0           16.0                       0.0   \n",
       "3              1.0           1.0           50.0                       0.0   \n",
       "4              2.0           1.0            6.0                       0.0   \n",
       "...            ...           ...            ...                       ...   \n",
       "1783           0.0           0.0           24.0                       0.0   \n",
       "1784           0.0           1.0           10.0                       0.0   \n",
       "1785           3.0           1.0            2.0                       0.0   \n",
       "1786           2.0           1.0            2.0                       0.0   \n",
       "1787           0.0           3.0            2.0                       0.0   \n",
       "\n",
       "      Damage_Melee  Damage_BlueZoneGrenade  Damage_MeleeThrow  Damage_Molotov  \\\n",
       "0              0.0                     0.0                0.0             0.0   \n",
       "1              0.0                     0.0                0.0             0.0   \n",
       "2              0.0                     0.0                0.0             0.0   \n",
       "3              0.0                     0.0                0.0             0.0   \n",
       "4              0.0                     0.0                0.0             0.0   \n",
       "...            ...                     ...                ...             ...   \n",
       "1783           0.0                     0.0                0.0             0.0   \n",
       "1784           0.0                     0.0                0.0             0.0   \n",
       "1785           0.0                     0.0                0.0             0.0   \n",
       "1786           0.0                     0.0                0.0             0.0   \n",
       "1787           0.0                     0.0                0.0             0.0   \n",
       "\n",
       "      Damage_Punch  Damage_Explosion_C4  Damage_Explosion_JerryCan  \\\n",
       "0              0.0                  0.0                        0.0   \n",
       "1              0.0                  0.0                        0.0   \n",
       "2              0.0                  0.0                        0.0   \n",
       "3              0.0                  0.0                        0.0   \n",
       "4              0.0                  0.0                        0.0   \n",
       "...            ...                  ...                        ...   \n",
       "1783           0.0                  0.0                        0.0   \n",
       "1784           0.0                  0.0                        0.0   \n",
       "1785           0.0                  0.0                        0.0   \n",
       "1786           0.0                  0.0                        0.0   \n",
       "1787           0.0                  0.0                        0.0   \n",
       "\n",
       "      Damage_Explosion_StickyBomb  Damage_DropStructHit  \\\n",
       "0                             0.0                   0.0   \n",
       "1                             0.0                   0.0   \n",
       "2                             0.0                   0.0   \n",
       "3                             0.0                   0.0   \n",
       "4                             0.0                   0.0   \n",
       "...                           ...                   ...   \n",
       "1783                          0.0                   0.0   \n",
       "1784                          0.0                   0.0   \n",
       "1785                          0.0                   0.0   \n",
       "1786                          0.0                   0.0   \n",
       "1787                          0.0                   0.0   \n",
       "\n",
       "      Damage_Explosion_PanzerFaustWarhead  Damage_Explosion_GasPump  \\\n",
       "0                                     0.0                       0.0   \n",
       "1                                     0.0                       0.0   \n",
       "2                                     0.0                       0.0   \n",
       "3                                     0.0                       0.0   \n",
       "4                                     0.0                       0.0   \n",
       "...                                   ...                       ...   \n",
       "1783                                  0.0                       0.0   \n",
       "1784                                  0.0                       0.0   \n",
       "1785                                  0.0                       0.0   \n",
       "1786                                  0.0                       0.0   \n",
       "1787                                  0.0                       0.0   \n",
       "\n",
       "      Damage_Explosion_PanzerFaustBackBlast  \n",
       "0                                       0.0  \n",
       "1                                       0.0  \n",
       "2                                       0.0  \n",
       "3                                       0.0  \n",
       "4                                       0.0  \n",
       "...                                     ...  \n",
       "1783                                    0.0  \n",
       "1784                                    0.0  \n",
       "1785                                    0.0  \n",
       "1786                                    0.0  \n",
       "1787                                    0.0  \n",
       "\n",
       "[1788 rows x 20 columns]"
      ]
     },
     "execution_count": 42,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df_combined3= df_combined3.fillna(0)\n",
    "df_combined3"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 43,
   "metadata": {},
   "outputs": [],
   "source": [
    "df_combined3.to_csv(\"데이터10.csv\", index=False)\n"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "base",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.11.7"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
