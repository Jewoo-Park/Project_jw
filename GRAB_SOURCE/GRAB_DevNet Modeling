{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "provenance": [],
      "gpuType": "T4"
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    },
    "accelerator": "GPU"
  },
  "cells": [
    {
      "cell_type": "code",
      "execution_count": 1,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "8fHSZZV4pA9w",
        "outputId": "7618f2f1-2899-4418-e102-f595426f8fdc"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Mounted at /content/drive\n"
          ]
        }
      ],
      "source": [
        "from google.colab import drive\n",
        "drive.mount('/content/drive')"
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import numpy as np\n",
        "import pandas as pd"
      ],
      "metadata": {
        "id": "fcCrw-jgpDKZ"
      },
      "execution_count": 2,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "#데이터 로드 및 임시 라벨링"
      ],
      "metadata": {
        "id": "rjlMexuIsAYl"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "df = pd.read_csv('/content/drive/MyDrive/[URP]_SkkAi/데이터합.csv')"
      ],
      "metadata": {
        "id": "33KqgBNpqsIm"
      },
      "execution_count": 3,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "df.columns"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "9A8a2hYBOW5p",
        "outputId": "e75844ce-3662-4847-d1b4-5fd0d48ef648"
      },
      "execution_count": 7,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "Index(['victim_count', 'revive_count', 'name', 'vehicle_count', 'Damage_Gun',\n",
              "       'Damage_Explosion_JerryCan', 'Damage_Molotov', 'Damage_VehicleHit',\n",
              "       'Damage_Punch', 'Damage_Explosion_C4', 'Damage_Explosion_Grenade',\n",
              "       'Damage_BlueZoneGrenade', 'Damage_Melee', 'Damage_MeleeThrow',\n",
              "       'Damage_Explosion_PanzerFaustWarhead', 'Damage_Explosion_LootTruck',\n",
              "       'Damage_Explosion_PanzerFaustBackBlast', 'Damage_Explosion_Vehicle',\n",
              "       'Damage_Rotor', 'Damage_Gun_Penetrate_BRDM', 'Damage_Explosion_GasPump',\n",
              "       'Damage_DropStructHit', 'Damage_Explosion_StickyBomb',\n",
              "       'Damage_Explosion_Mortar', 'Damage_MotorGlider',\n",
              "       'Damage_Explosion_Breach'],\n",
              "      dtype='object')"
            ]
          },
          "metadata": {},
          "execution_count": 7
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# damage 관련 칼럼만 선택\n",
        "damage_cols = [col for col in df.columns if col.startswith('Damage_')]\n",
        "\n",
        "# 각 행에 대해 damage 값이 0 또는 NaN이 아닌 값의 개수 계산\n",
        "df['count'] = df[damage_cols].apply(lambda row: (row != 0) & (~row.isna()), axis=1).sum(axis=1)"
      ],
      "metadata": {
        "id": "hblbsD7UOrIV"
      },
      "execution_count": 9,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "df"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 444
        },
        "id": "mh8Wu05VPEaV",
        "outputId": "d37e7671-1d18-4038-a71c-de4e7321c36e"
      },
      "execution_count": 10,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "       victim_count  revive_count              name  vehicle_count  \\\n",
              "0               0.0           0.0   Harlotte1Ashley            4.0   \n",
              "1               0.0           0.0    ShiShiRuQi1232           10.0   \n",
              "2               0.0           0.0      noxixihaha11           10.0   \n",
              "3               0.0           0.0    zhouyuming1997           26.0   \n",
              "4               0.0           0.0           Acrecia           22.0   \n",
              "...             ...           ...               ...            ...   \n",
              "28362           0.0           0.0          CQD-Long            4.0   \n",
              "28363           1.0           0.0  qiangqiangaidato           16.0   \n",
              "28364           0.0           0.0           God222_            8.0   \n",
              "28365           1.0           1.0     callme-Dad___            2.0   \n",
              "28366           1.0           1.0             Abqws            2.0   \n",
              "\n",
              "       Damage_Gun  Damage_Explosion_JerryCan  Damage_Molotov  \\\n",
              "0             0.0                        0.0             0.0   \n",
              "1             5.0                        0.0             0.0   \n",
              "2             0.0                        0.0             0.0   \n",
              "3             0.0                        0.0             0.0   \n",
              "4             0.0                        0.0             0.0   \n",
              "...           ...                        ...             ...   \n",
              "28362         0.0                        0.0             0.0   \n",
              "28363         1.0                        0.0             0.0   \n",
              "28364         0.0                        0.0             0.0   \n",
              "28365        12.0                        0.0             0.0   \n",
              "28366         6.0                        0.0             0.0   \n",
              "\n",
              "       Damage_VehicleHit  Damage_Punch  Damage_Explosion_C4  ...  \\\n",
              "0                    0.0           0.0                  0.0  ...   \n",
              "1                    0.0           0.0                  0.0  ...   \n",
              "2                    0.0           0.0                  0.0  ...   \n",
              "3                    0.0           0.0                  0.0  ...   \n",
              "4                    0.0           0.0                  0.0  ...   \n",
              "...                  ...           ...                  ...  ...   \n",
              "28362                0.0           0.0                  0.0  ...   \n",
              "28363                0.0           0.0                  0.0  ...   \n",
              "28364                0.0           0.0                  0.0  ...   \n",
              "28365                0.0           0.0                  0.0  ...   \n",
              "28366                0.0           0.0                  0.0  ...   \n",
              "\n",
              "       Damage_Explosion_Vehicle  Damage_Rotor  Damage_Gun_Penetrate_BRDM  \\\n",
              "0                           0.0           0.0                        0.0   \n",
              "1                           0.0           0.0                        0.0   \n",
              "2                           0.0           0.0                        0.0   \n",
              "3                           0.0           0.0                        0.0   \n",
              "4                           0.0           0.0                        0.0   \n",
              "...                         ...           ...                        ...   \n",
              "28362                       0.0           0.0                        0.0   \n",
              "28363                       0.0           0.0                        0.0   \n",
              "28364                       0.0           0.0                        0.0   \n",
              "28365                       0.0           0.0                        0.0   \n",
              "28366                       0.0           0.0                        0.0   \n",
              "\n",
              "       Damage_Explosion_GasPump  Damage_DropStructHit  \\\n",
              "0                           0.0                   0.0   \n",
              "1                           0.0                   0.0   \n",
              "2                           0.0                   0.0   \n",
              "3                           0.0                   0.0   \n",
              "4                           0.0                   0.0   \n",
              "...                         ...                   ...   \n",
              "28362                       0.0                   0.0   \n",
              "28363                       0.0                   0.0   \n",
              "28364                       0.0                   0.0   \n",
              "28365                       0.0                   0.0   \n",
              "28366                       0.0                   0.0   \n",
              "\n",
              "       Damage_Explosion_StickyBomb  Damage_Explosion_Mortar  \\\n",
              "0                              0.0                      0.0   \n",
              "1                              0.0                      0.0   \n",
              "2                              0.0                      0.0   \n",
              "3                              0.0                      0.0   \n",
              "4                              0.0                      0.0   \n",
              "...                            ...                      ...   \n",
              "28362                          0.0                      0.0   \n",
              "28363                          0.0                      0.0   \n",
              "28364                          0.0                      0.0   \n",
              "28365                          0.0                      0.0   \n",
              "28366                          0.0                      0.0   \n",
              "\n",
              "       Damage_MotorGlider  Damage_Explosion_Breach  count  \n",
              "0                     0.0                      NaN      0  \n",
              "1                     0.0                      NaN      1  \n",
              "2                     0.0                      NaN      0  \n",
              "3                     0.0                      NaN      0  \n",
              "4                     0.0                      NaN      0  \n",
              "...                   ...                      ...    ...  \n",
              "28362                 0.0                      0.0      0  \n",
              "28363                 0.0                      0.0      1  \n",
              "28364                 0.0                      0.0      0  \n",
              "28365                 0.0                      0.0      1  \n",
              "28366                 0.0                      0.0      2  \n",
              "\n",
              "[28367 rows x 27 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-dd024571-d7af-408d-af6a-061d24fd1db4\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>victim_count</th>\n",
              "      <th>revive_count</th>\n",
              "      <th>name</th>\n",
              "      <th>vehicle_count</th>\n",
              "      <th>Damage_Gun</th>\n",
              "      <th>Damage_Explosion_JerryCan</th>\n",
              "      <th>Damage_Molotov</th>\n",
              "      <th>Damage_VehicleHit</th>\n",
              "      <th>Damage_Punch</th>\n",
              "      <th>Damage_Explosion_C4</th>\n",
              "      <th>...</th>\n",
              "      <th>Damage_Explosion_Vehicle</th>\n",
              "      <th>Damage_Rotor</th>\n",
              "      <th>Damage_Gun_Penetrate_BRDM</th>\n",
              "      <th>Damage_Explosion_GasPump</th>\n",
              "      <th>Damage_DropStructHit</th>\n",
              "      <th>Damage_Explosion_StickyBomb</th>\n",
              "      <th>Damage_Explosion_Mortar</th>\n",
              "      <th>Damage_MotorGlider</th>\n",
              "      <th>Damage_Explosion_Breach</th>\n",
              "      <th>count</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>Harlotte1Ashley</td>\n",
              "      <td>4.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>...</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>ShiShiRuQi1232</td>\n",
              "      <td>10.0</td>\n",
              "      <td>5.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>...</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>noxixihaha11</td>\n",
              "      <td>10.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>...</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>zhouyuming1997</td>\n",
              "      <td>26.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>...</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>Acrecia</td>\n",
              "      <td>22.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>...</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>28362</th>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>CQD-Long</td>\n",
              "      <td>4.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>...</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>28363</th>\n",
              "      <td>1.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>qiangqiangaidato</td>\n",
              "      <td>16.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>...</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>28364</th>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>God222_</td>\n",
              "      <td>8.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>...</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>28365</th>\n",
              "      <td>1.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>callme-Dad___</td>\n",
              "      <td>2.0</td>\n",
              "      <td>12.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>...</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>28366</th>\n",
              "      <td>1.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>Abqws</td>\n",
              "      <td>2.0</td>\n",
              "      <td>6.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>...</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>2</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>28367 rows × 27 columns</p>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-dd024571-d7af-408d-af6a-061d24fd1db4')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-dd024571-d7af-408d-af6a-061d24fd1db4 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-dd024571-d7af-408d-af6a-061d24fd1db4');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "    <div id=\"df-2fc4bccb-2052-4eb2-b37d-ff5615d5e25e\">\n",
              "      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-2fc4bccb-2052-4eb2-b37d-ff5615d5e25e')\"\n",
              "                title=\"Suggest charts\"\n",
              "                style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "      </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "      <script>\n",
              "        async function quickchart(key) {\n",
              "          const quickchartButtonEl =\n",
              "            document.querySelector('#' + key + ' button');\n",
              "          quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "          quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "          try {\n",
              "            const charts = await google.colab.kernel.invokeFunction(\n",
              "                'suggestCharts', [key], {});\n",
              "          } catch (error) {\n",
              "            console.error('Error during call to suggestCharts:', error);\n",
              "          }\n",
              "          quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "          quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "        }\n",
              "        (() => {\n",
              "          let quickchartButtonEl =\n",
              "            document.querySelector('#df-2fc4bccb-2052-4eb2-b37d-ff5615d5e25e button');\n",
              "          quickchartButtonEl.style.display =\n",
              "            google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "        })();\n",
              "      </script>\n",
              "    </div>\n",
              "\n",
              "  <div id=\"id_5fefc26c-4460-4c4d-b1e3-6b7b8f6ec684\">\n",
              "    <style>\n",
              "      .colab-df-generate {\n",
              "        background-color: #E8F0FE;\n",
              "        border: none;\n",
              "        border-radius: 50%;\n",
              "        cursor: pointer;\n",
              "        display: none;\n",
              "        fill: #1967D2;\n",
              "        height: 32px;\n",
              "        padding: 0 0 0 0;\n",
              "        width: 32px;\n",
              "      }\n",
              "\n",
              "      .colab-df-generate:hover {\n",
              "        background-color: #E2EBFA;\n",
              "        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "        fill: #174EA6;\n",
              "      }\n",
              "\n",
              "      [theme=dark] .colab-df-generate {\n",
              "        background-color: #3B4455;\n",
              "        fill: #D2E3FC;\n",
              "      }\n",
              "\n",
              "      [theme=dark] .colab-df-generate:hover {\n",
              "        background-color: #434B5C;\n",
              "        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "        fill: #FFFFFF;\n",
              "      }\n",
              "    </style>\n",
              "    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('df')\"\n",
              "            title=\"Generate code using this dataframe.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "    <script>\n",
              "      (() => {\n",
              "      const buttonEl =\n",
              "        document.querySelector('#id_5fefc26c-4460-4c4d-b1e3-6b7b8f6ec684 button.colab-df-generate');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      buttonEl.onclick = () => {\n",
              "        google.colab.notebook.generateWithVariable('df');\n",
              "      }\n",
              "      })();\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "variable_name": "df"
            }
          },
          "metadata": {},
          "execution_count": 10
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "'''\n",
        "기준 : Damage_Gun, Damage_Punch, Damage_Gun_Penetrate_BRDM으로, 사전연구에 따라 달라질 예정\n",
        "'''"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 36
        },
        "id": "C-wYBRyifOHF",
        "outputId": "23b6c215-4342-4775-af80-4830059d0da1"
      },
      "execution_count": 5,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "'\\n기준 : Damage_Gun, Damage_Punch, Damage_Gun_Penetrate_BRDM으로, 사전연구에 따라 달라질 예정\\n'"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "string"
            }
          },
          "metadata": {},
          "execution_count": 5
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import numpy as np\n",
        "import pandas as pd\n",
        "\n",
        "# 1) 세 데미지 컬럼 합산\n",
        "df[\"total_damage\"] = df['count']/df['vehicle_count']\n",
        "\n",
        "# 2) 상위 3 % 컷오프 계산 (97-percentile)\n",
        "cutoff = df[\"total_damage\"].quantile(0.97)\n",
        "\n",
        "# 3) y_temp 레이블 생성: 상위 3 % → 1, 나머지 → -1\n",
        "df[\"y_temp\"] = np.where(df[\"total_damage\"] >= cutoff, 1, -1)\n",
        "\n",
        "# (선택) 필요 없어진 중간 칼럼 제거\n",
        "df.drop(columns=\"total_damage\", inplace=True)"
      ],
      "metadata": {
        "id": "jNBVnV7jfqn_"
      },
      "execution_count": 11,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "df['y_temp'].value_counts()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 178
        },
        "id": "jZAlDBYs5bbu",
        "outputId": "4904a975-a5e7-4b1c-ad58-0bc6d4853c45"
      },
      "execution_count": 12,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "y_temp\n",
              "-1    25391\n",
              " 1     2976\n",
              "Name: count, dtype: int64"
            ],
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>count</th>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>y_temp</th>\n",
              "      <th></th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>-1</th>\n",
              "      <td>25391</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>2976</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div><br><label><b>dtype:</b> int64</label>"
            ]
          },
          "metadata": {},
          "execution_count": 12
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "df[df['y_temp'] == 1]['count'].value_counts()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 241
        },
        "id": "tzrz815BQOXd",
        "outputId": "a5b80c17-c651-4205-9601-55af5250a45b"
      },
      "execution_count": 15,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "count\n",
              "1    2655\n",
              "2     277\n",
              "3      42\n",
              "4       2\n",
              "Name: count, dtype: int64"
            ],
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>count</th>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>count</th>\n",
              "      <th></th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>2655</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>277</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>42</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>2</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div><br><label><b>dtype:</b> int64</label>"
            ]
          },
          "metadata": {},
          "execution_count": 15
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "#DevNet Modeling"
      ],
      "metadata": {
        "id": "UfPq5bwoe5rr"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "import torch\n",
        "import torch.nn as nn\n",
        "import torch.optim as optim\n",
        "from torch.utils.data import TensorDataset, DataLoader\n",
        "import numpy as np\n",
        "\n",
        "# 1) 라벨 분리\n",
        "df_R = df[df['y_temp'] == -1]\n",
        "df_A = df[df['y_temp'] == 1]\n",
        "\n",
        "drop_cols = {\"Damage_Gun\", \"Damage_Punch\", \"Damage_Gun_Penetrate_BRDM\"}\n",
        "\n",
        "# 1) Damage_ 계열 + 기타 컬럼 모은 뒤 바로 필터링\n",
        "feature_cols = (\n",
        "    [col for col in df.columns if col.startswith(\"Damage_\") and col not in drop_cols]\n",
        "    + [\"vehicle_count\", \"count\"]\n",
        ")\n",
        "X_R = torch.tensor(df_R[feature_cols].fillna(0).values, dtype=torch.float32)\n",
        "X_A = torch.tensor(df_A[feature_cols].fillna(0).values, dtype=torch.float32)\n",
        "y_A = torch.ones(len(X_A), dtype=torch.long)  # Anomaly: label=1\n",
        "\n",
        "# 2) DataLoader\n",
        "loader_R = DataLoader(TensorDataset(X_R), batch_size=128, shuffle=True, drop_last=True)\n",
        "loader_A = DataLoader(TensorDataset(X_A, y_A), batch_size=128, shuffle=True, drop_last=True)"
      ],
      "metadata": {
        "id": "LjLBIzQqgRBb"
      },
      "execution_count": 16,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "class DevNet(nn.Module):\n",
        "    \"\"\"\n",
        "    g_theta : MLP feature extractor\n",
        "    score   : ‖z‖_2^2  (원점과의 거리 = 이상 점수)\n",
        "    \"\"\"\n",
        "    def __init__(self, input_dim, rep_dim=32, dropout=0.3):\n",
        "        super().__init__()\n",
        "        self.feature = nn.Sequential(\n",
        "            nn.Linear(input_dim, 256), nn.BatchNorm1d(256), nn.ReLU(),\n",
        "            nn.Dropout(dropout),\n",
        "            nn.Linear(256, 128),        nn.BatchNorm1d(128), nn.ReLU(),\n",
        "            nn.Dropout(dropout),\n",
        "            nn.Linear(128, rep_dim)\n",
        "        )\n",
        "\n",
        "    def forward(self, x):\n",
        "        z = self.feature(x)\n",
        "        score = (z ** 2).sum(dim=1)      # anomaly score (batch,)\n",
        "        return score, z                  # (B,), (B, rep_dim)\n",
        "\n",
        "\n",
        "# ─────────────────── 2. DevNet 손실 ────────────────────────\n",
        "def devnet_loss(score, y, margin=5.0):\n",
        "    \"\"\"\n",
        "    y ==  1 : anomaly  → score 가 margin 이상으로 크도록\n",
        "    y == -1 : normal   → score 가 0 에 가깝도록\n",
        "    \"\"\"\n",
        "    pos_mask = (y == 1)\n",
        "    neg_mask = (y == -1)\n",
        "\n",
        "    # pull normal in\n",
        "    neg_loss = score[neg_mask].mean()\n",
        "\n",
        "    # push anomaly out (hinge)\n",
        "    pos_loss = torch.relu(margin - score[pos_mask]).mean()\n",
        "\n",
        "    return neg_loss + pos_loss\n",
        "\n",
        "\n",
        "# ─────────────────── 3. 학습 루프 ────────────────────────\n",
        "def train_devnet(\n",
        "        model, loader_A, loader_R,\n",
        "        epochs=200, lr=1e-3, margin=5.0,\n",
        "        device=\"cuda\" if torch.cuda.is_available() else \"cpu\"):\n",
        "\n",
        "    model.to(device)\n",
        "    opt = optim.Adam(model.parameters(), lr=lr)\n",
        "\n",
        "    for epoch in range(1, epochs + 1):\n",
        "        model.train()\n",
        "        total_loss, n_batch = 0.0, 0\n",
        "\n",
        "        # 두 DataLoader 길이가 다르면 길이 짧은 쪽 기준\n",
        "        for (x_A, _), (x_R,) in zip(loader_A, loader_R):\n",
        "            x_A, x_R = x_A.to(device), x_R.to(device)\n",
        "\n",
        "            score_A, _ = model(x_A)              # (B_A,)\n",
        "            score_R, _ = model(x_R)              # (B_R,)\n",
        "\n",
        "            # y 생성: anomaly=1, reference(normal)=-1\n",
        "            y = torch.cat([\n",
        "                torch.ones_like(score_A),         # 1\n",
        "                -torch.ones_like(score_R)         # -1\n",
        "            ])\n",
        "\n",
        "            score = torch.cat([score_A, score_R])\n",
        "\n",
        "            loss = devnet_loss(score, y, margin)\n",
        "\n",
        "            opt.zero_grad()\n",
        "            loss.backward()\n",
        "            opt.step()\n",
        "\n",
        "            total_loss += loss.item()\n",
        "            n_batch    += 1\n",
        "\n",
        "        avg_loss = total_loss / n_batch\n",
        "        if epoch % 10 == 0 or epoch == 1:\n",
        "            print(f\"Epoch {epoch:4d}/{epochs}  |  loss: {avg_loss:.4f}\")"
      ],
      "metadata": {
        "id": "z20FcTug6G3l"
      },
      "execution_count": 17,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "# ─────────────────── 4. 학습 실행 ────────────────────────\n",
        "input_dim = X_R.shape[1]\n",
        "model = DevNet(input_dim)\n",
        "\n",
        "train_devnet(model, loader_A, loader_R, epochs=200, lr=1e-3, margin=5.0)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "1LzoLvXm6NnN",
        "outputId": "51bfe977-992a-4c52-c7fc-64115053447b",
        "collapsed": true
      },
      "execution_count": 18,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Epoch    1/200  |  loss: 6.1889\n",
            "Epoch   10/200  |  loss: 0.4321\n",
            "Epoch   20/200  |  loss: 0.1700\n",
            "Epoch   30/200  |  loss: 0.1059\n",
            "Epoch   40/200  |  loss: 0.0849\n",
            "Epoch   50/200  |  loss: 0.0661\n",
            "Epoch   60/200  |  loss: 0.0709\n",
            "Epoch   70/200  |  loss: 0.0590\n",
            "Epoch   80/200  |  loss: 0.0553\n",
            "Epoch   90/200  |  loss: 0.0608\n",
            "Epoch  100/200  |  loss: 0.0486\n",
            "Epoch  110/200  |  loss: 0.0467\n",
            "Epoch  120/200  |  loss: 0.0499\n",
            "Epoch  130/200  |  loss: 0.0417\n",
            "Epoch  140/200  |  loss: 0.0387\n",
            "Epoch  150/200  |  loss: 0.0312\n",
            "Epoch  160/200  |  loss: 0.0375\n",
            "Epoch  170/200  |  loss: 0.0277\n",
            "Epoch  180/200  |  loss: 0.0247\n",
            "Epoch  190/200  |  loss: 0.0237\n",
            "Epoch  200/200  |  loss: 0.0323\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "device = next(model.parameters()).device   # 모델이 올라가 있는 디바이스\n",
        "\n",
        "model.eval()\n",
        "with torch.no_grad():\n",
        "    X_all = torch.tensor(\n",
        "        df[feature_cols].fillna(0).values,\n",
        "        dtype=torch.float32, device=device        # 👉 디바이스 일치\n",
        "    )\n",
        "\n",
        "    scores, _ = model(X_all)                      # (score, z) 튜플\n",
        "    df[\"devnet_score\"] = scores.cpu().numpy()     # CPU 로 옮겨 NumPy 변환"
      ],
      "metadata": {
        "id": "lcAa07nanBRU"
      },
      "execution_count": 19,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "import numpy as np\n",
        "\n",
        "# 예시 threshold 설정 (직접 조정 가능)\n",
        "threshold = np.percentile(df['devnet_score'], 85)  # 상위25%를 트롤로 간주\n",
        "\n",
        "df['y_pred'] = (df['devnet_score'] > threshold).astype(int)\n",
        "df['y_pred'] = df['y_pred'].replace({0: -1})  # 비트롤은 -1"
      ],
      "metadata": {
        "id": "C2m_pe5K6gL8"
      },
      "execution_count": 20,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "df"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 444
        },
        "id": "PmJZ67N8grpP",
        "outputId": "56166b09-bb4b-4745-8748-0b27b301d8a1"
      },
      "execution_count": 21,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "       victim_count  revive_count              name  vehicle_count  \\\n",
              "0               0.0           0.0   Harlotte1Ashley            4.0   \n",
              "1               0.0           0.0    ShiShiRuQi1232           10.0   \n",
              "2               0.0           0.0      noxixihaha11           10.0   \n",
              "3               0.0           0.0    zhouyuming1997           26.0   \n",
              "4               0.0           0.0           Acrecia           22.0   \n",
              "...             ...           ...               ...            ...   \n",
              "28362           0.0           0.0          CQD-Long            4.0   \n",
              "28363           1.0           0.0  qiangqiangaidato           16.0   \n",
              "28364           0.0           0.0           God222_            8.0   \n",
              "28365           1.0           1.0     callme-Dad___            2.0   \n",
              "28366           1.0           1.0             Abqws            2.0   \n",
              "\n",
              "       Damage_Gun  Damage_Explosion_JerryCan  Damage_Molotov  \\\n",
              "0             0.0                        0.0             0.0   \n",
              "1             5.0                        0.0             0.0   \n",
              "2             0.0                        0.0             0.0   \n",
              "3             0.0                        0.0             0.0   \n",
              "4             0.0                        0.0             0.0   \n",
              "...           ...                        ...             ...   \n",
              "28362         0.0                        0.0             0.0   \n",
              "28363         1.0                        0.0             0.0   \n",
              "28364         0.0                        0.0             0.0   \n",
              "28365        12.0                        0.0             0.0   \n",
              "28366         6.0                        0.0             0.0   \n",
              "\n",
              "       Damage_VehicleHit  Damage_Punch  Damage_Explosion_C4  ...  \\\n",
              "0                    0.0           0.0                  0.0  ...   \n",
              "1                    0.0           0.0                  0.0  ...   \n",
              "2                    0.0           0.0                  0.0  ...   \n",
              "3                    0.0           0.0                  0.0  ...   \n",
              "4                    0.0           0.0                  0.0  ...   \n",
              "...                  ...           ...                  ...  ...   \n",
              "28362                0.0           0.0                  0.0  ...   \n",
              "28363                0.0           0.0                  0.0  ...   \n",
              "28364                0.0           0.0                  0.0  ...   \n",
              "28365                0.0           0.0                  0.0  ...   \n",
              "28366                0.0           0.0                  0.0  ...   \n",
              "\n",
              "       Damage_Explosion_GasPump  Damage_DropStructHit  \\\n",
              "0                           0.0                   0.0   \n",
              "1                           0.0                   0.0   \n",
              "2                           0.0                   0.0   \n",
              "3                           0.0                   0.0   \n",
              "4                           0.0                   0.0   \n",
              "...                         ...                   ...   \n",
              "28362                       0.0                   0.0   \n",
              "28363                       0.0                   0.0   \n",
              "28364                       0.0                   0.0   \n",
              "28365                       0.0                   0.0   \n",
              "28366                       0.0                   0.0   \n",
              "\n",
              "       Damage_Explosion_StickyBomb  Damage_Explosion_Mortar  \\\n",
              "0                              0.0                      0.0   \n",
              "1                              0.0                      0.0   \n",
              "2                              0.0                      0.0   \n",
              "3                              0.0                      0.0   \n",
              "4                              0.0                      0.0   \n",
              "...                            ...                      ...   \n",
              "28362                          0.0                      0.0   \n",
              "28363                          0.0                      0.0   \n",
              "28364                          0.0                      0.0   \n",
              "28365                          0.0                      0.0   \n",
              "28366                          0.0                      0.0   \n",
              "\n",
              "       Damage_MotorGlider  Damage_Explosion_Breach  count  y_temp  \\\n",
              "0                     0.0                      NaN      0      -1   \n",
              "1                     0.0                      NaN      1      -1   \n",
              "2                     0.0                      NaN      0      -1   \n",
              "3                     0.0                      NaN      0      -1   \n",
              "4                     0.0                      NaN      0      -1   \n",
              "...                   ...                      ...    ...     ...   \n",
              "28362                 0.0                      0.0      0      -1   \n",
              "28363                 0.0                      0.0      1      -1   \n",
              "28364                 0.0                      0.0      0      -1   \n",
              "28365                 0.0                      0.0      1       1   \n",
              "28366                 0.0                      0.0      2       1   \n",
              "\n",
              "       devnet_score  y_pred  \n",
              "0          0.022740      -1  \n",
              "1          0.004671      -1  \n",
              "2          0.004809      -1  \n",
              "3          0.001416      -1  \n",
              "4          0.000305      -1  \n",
              "...             ...     ...  \n",
              "28362      0.022740      -1  \n",
              "28363      0.002159      -1  \n",
              "28364      0.003464      -1  \n",
              "28365      0.041233       1  \n",
              "28366      0.104807       1  \n",
              "\n",
              "[28367 rows x 30 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-150e3276-4957-4993-817e-82937f997a52\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>victim_count</th>\n",
              "      <th>revive_count</th>\n",
              "      <th>name</th>\n",
              "      <th>vehicle_count</th>\n",
              "      <th>Damage_Gun</th>\n",
              "      <th>Damage_Explosion_JerryCan</th>\n",
              "      <th>Damage_Molotov</th>\n",
              "      <th>Damage_VehicleHit</th>\n",
              "      <th>Damage_Punch</th>\n",
              "      <th>Damage_Explosion_C4</th>\n",
              "      <th>...</th>\n",
              "      <th>Damage_Explosion_GasPump</th>\n",
              "      <th>Damage_DropStructHit</th>\n",
              "      <th>Damage_Explosion_StickyBomb</th>\n",
              "      <th>Damage_Explosion_Mortar</th>\n",
              "      <th>Damage_MotorGlider</th>\n",
              "      <th>Damage_Explosion_Breach</th>\n",
              "      <th>count</th>\n",
              "      <th>y_temp</th>\n",
              "      <th>devnet_score</th>\n",
              "      <th>y_pred</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>Harlotte1Ashley</td>\n",
              "      <td>4.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>...</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>0</td>\n",
              "      <td>-1</td>\n",
              "      <td>0.022740</td>\n",
              "      <td>-1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>ShiShiRuQi1232</td>\n",
              "      <td>10.0</td>\n",
              "      <td>5.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>...</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>1</td>\n",
              "      <td>-1</td>\n",
              "      <td>0.004671</td>\n",
              "      <td>-1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>noxixihaha11</td>\n",
              "      <td>10.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>...</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>0</td>\n",
              "      <td>-1</td>\n",
              "      <td>0.004809</td>\n",
              "      <td>-1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>zhouyuming1997</td>\n",
              "      <td>26.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>...</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>0</td>\n",
              "      <td>-1</td>\n",
              "      <td>0.001416</td>\n",
              "      <td>-1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>Acrecia</td>\n",
              "      <td>22.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>...</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>0</td>\n",
              "      <td>-1</td>\n",
              "      <td>0.000305</td>\n",
              "      <td>-1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>28362</th>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>CQD-Long</td>\n",
              "      <td>4.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>...</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>-1</td>\n",
              "      <td>0.022740</td>\n",
              "      <td>-1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>28363</th>\n",
              "      <td>1.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>qiangqiangaidato</td>\n",
              "      <td>16.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>...</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>1</td>\n",
              "      <td>-1</td>\n",
              "      <td>0.002159</td>\n",
              "      <td>-1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>28364</th>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>God222_</td>\n",
              "      <td>8.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>...</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>-1</td>\n",
              "      <td>0.003464</td>\n",
              "      <td>-1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>28365</th>\n",
              "      <td>1.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>callme-Dad___</td>\n",
              "      <td>2.0</td>\n",
              "      <td>12.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>...</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0.041233</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>28366</th>\n",
              "      <td>1.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>Abqws</td>\n",
              "      <td>2.0</td>\n",
              "      <td>6.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>...</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>2</td>\n",
              "      <td>1</td>\n",
              "      <td>0.104807</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>28367 rows × 30 columns</p>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-150e3276-4957-4993-817e-82937f997a52')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-150e3276-4957-4993-817e-82937f997a52 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-150e3276-4957-4993-817e-82937f997a52');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "    <div id=\"df-20422b79-b73b-40fb-b2ab-ce99da2852cb\">\n",
              "      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-20422b79-b73b-40fb-b2ab-ce99da2852cb')\"\n",
              "                title=\"Suggest charts\"\n",
              "                style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "      </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "      <script>\n",
              "        async function quickchart(key) {\n",
              "          const quickchartButtonEl =\n",
              "            document.querySelector('#' + key + ' button');\n",
              "          quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "          quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "          try {\n",
              "            const charts = await google.colab.kernel.invokeFunction(\n",
              "                'suggestCharts', [key], {});\n",
              "          } catch (error) {\n",
              "            console.error('Error during call to suggestCharts:', error);\n",
              "          }\n",
              "          quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "          quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "        }\n",
              "        (() => {\n",
              "          let quickchartButtonEl =\n",
              "            document.querySelector('#df-20422b79-b73b-40fb-b2ab-ce99da2852cb button');\n",
              "          quickchartButtonEl.style.display =\n",
              "            google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "        })();\n",
              "      </script>\n",
              "    </div>\n",
              "\n",
              "  <div id=\"id_95659a5b-7a69-4e73-ab34-98741397c548\">\n",
              "    <style>\n",
              "      .colab-df-generate {\n",
              "        background-color: #E8F0FE;\n",
              "        border: none;\n",
              "        border-radius: 50%;\n",
              "        cursor: pointer;\n",
              "        display: none;\n",
              "        fill: #1967D2;\n",
              "        height: 32px;\n",
              "        padding: 0 0 0 0;\n",
              "        width: 32px;\n",
              "      }\n",
              "\n",
              "      .colab-df-generate:hover {\n",
              "        background-color: #E2EBFA;\n",
              "        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "        fill: #174EA6;\n",
              "      }\n",
              "\n",
              "      [theme=dark] .colab-df-generate {\n",
              "        background-color: #3B4455;\n",
              "        fill: #D2E3FC;\n",
              "      }\n",
              "\n",
              "      [theme=dark] .colab-df-generate:hover {\n",
              "        background-color: #434B5C;\n",
              "        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "        fill: #FFFFFF;\n",
              "      }\n",
              "    </style>\n",
              "    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('df')\"\n",
              "            title=\"Generate code using this dataframe.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "    <script>\n",
              "      (() => {\n",
              "      const buttonEl =\n",
              "        document.querySelector('#id_95659a5b-7a69-4e73-ab34-98741397c548 button.colab-df-generate');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      buttonEl.onclick = () => {\n",
              "        google.colab.notebook.generateWithVariable('df');\n",
              "      }\n",
              "      })();\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "variable_name": "df"
            }
          },
          "metadata": {},
          "execution_count": 21
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# y_pred ↔ y_temp 일치도 계산\n",
        "total   = len(df)\n",
        "agree   = (df[\"y_pred\"] == df[\"y_temp\"]).sum()      # 완전-일치\n",
        "disagree = total - agree                            # 불일치\n",
        "\n",
        "# 불일치 유형까지 보고 싶다면\n",
        "diff_counts = (df[\"y_pred\"] - df[\"y_temp\"]).map(\n",
        "                 {0: \" 일치\",  2: \"FP\",  -2: \"FN\"}\n",
        "              ).value_counts()\n",
        "\n",
        "print(f\"전체 샘플 수      : {total}\")\n",
        "print(f\"일치             : {agree}  ({agree/total:.2%})\")\n",
        "print(f\"불일치(FP+FN)    : {disagree}  ({disagree/total:.2%})\\n\")\n",
        "print(diff_counts)      # FP·FN 상세 분포"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "G3cDDY4eht9t",
        "outputId": "23559740-3479-4327-c0e2-5317c06586c8"
      },
      "execution_count": 25,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "전체 샘플 수      : 28367\n",
            "일치             : 26899  (94.82%)\n",
            "불일치(FP+FN)    : 1468  (5.18%)\n",
            "\n",
            " 일치    26899\n",
            "FP      1270\n",
            "FN       198\n",
            "Name: count, dtype: int64\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [],
      "metadata": {
        "id": "7-fGmlfoliCK"
      },
      "execution_count": null,
      "outputs": []
    }
  ]
}